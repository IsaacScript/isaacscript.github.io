"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[79018],{38129:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>a});var s=t(31085),l=t(71184);const d={custom_edit_url:null},i="Modded Element Sets",r={id:"isaacscript-common/features/ModdedElementSets",title:"Modded Element Sets",description:"A feature that lazy-inits and caches various arrays and sets that include both vanilla and modded",source:"@site/docs/isaacscript-common/features/ModdedElementSets.md",sourceDirName:"isaacscript-common/features",slug:"/isaacscript-common/features/ModdedElementSets",permalink:"/isaacscript-common/features/ModdedElementSets",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Modded Element Detection",permalink:"/isaacscript-common/features/ModdedElementDetection"},next:{title:"No Siren Steal",permalink:"/isaacscript-common/features/NoSirenSteal"}},c={},a=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Methods",id:"methods",level:2},{value:"getCollectibleTypes",id:"getcollectibletypes",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getCollectibleTypeSet",id:"getcollectibletypeset",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getModdedCollectibleTypes",id:"getmoddedcollectibletypes",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getModdedCollectibleTypesSet",id:"getmoddedcollectibletypesset",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getPlayerCollectibleMap",id:"getplayercollectiblemap",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getTrinketTypes",id:"gettrinkettypes",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getTrinketTypesSet",id:"gettrinkettypesset",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"getModdedTrinketTypes",id:"getmoddedtrinkettypes",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"getModdedTrinketTypesSet",id:"getmoddedtrinkettypesset",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"getCardTypes",id:"getcardtypes",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getCardTypesSet",id:"getcardtypesset",level:3},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getModdedCardTypes",id:"getmoddedcardtypes",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"getModdedCardTypesSet",id:"getmoddedcardtypesset",level:3},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"getPillEffects",id:"getpilleffects",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"getPillEffectsSet",id:"getpilleffectsset",level:3},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"getModdedPillEffects",id:"getmoddedpilleffects",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"getModdedPillEffectsSet",id:"getmoddedpilleffectsset",level:3},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"getCollectibleTypesWithCacheFlag",id:"getcollectibletypeswithcacheflag",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"getTrinketsTypesWithCacheFlag",id:"gettrinketstypeswithcacheflag",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"getPlayerCollectiblesWithCacheFlag",id:"getplayercollectibleswithcacheflag",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"getPlayerTrinketsWithCacheFlag",id:"getplayertrinketswithcacheflag",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"getFlyingCollectibleTypes",id:"getflyingcollectibletypes",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"getFlyingTrinketTypes",id:"getflyingtrinkettypes",level:3},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"getCollectibleTypesWithTag",id:"getcollectibletypeswithtag",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"getPlayerCollectiblesWithTag",id:"getplayercollectibleswithtag",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"getCollectibleTypesForTransformation",id:"getcollectibletypesfortransformation",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"getPlayerCollectiblesForTransformation",id:"getplayercollectiblesfortransformation",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"getEdenActiveCollectibleTypes",id:"getedenactivecollectibletypes",level:3},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"getEdenPassiveCollectibleTypes",id:"getedenpassivecollectibletypes",level:3},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"getRandomEdenActiveCollectibleType",id:"getrandomedenactivecollectibletype",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"getRandomEdenPassiveCollectibleType",id:"getrandomedenpassivecollectibletype",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"getCollectibleTypesOfQuality",id:"getcollectibletypesofquality",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-31",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"getPlayerCollectiblesOfQuality",id:"getplayercollectiblesofquality",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-32",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"getCardTypesOfType",id:"getcardtypesoftype",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-33",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"getRandomCardTypeOfType",id:"getrandomcardtypeoftype",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-34",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"getRandomCard",id:"getrandomcard",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-35",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"getRandomRune",id:"getrandomrune",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-36",level:4},{value:"Defined in",id:"defined-in-36",level:4}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"modded-element-sets",children:"Modded Element Sets"}),"\n",(0,s.jsx)(n.p,{children:"A feature that lazy-inits and caches various arrays and sets that include both vanilla and modded\nelements. This is useful for performance purposes (so that we do not have to reconstruct the\narrays/sets multiple times)."}),"\n",(0,s.jsxs)(n.p,{children:["The modded arrays/sets are created using the functions from\n",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"hierarchy",children:"Hierarchy"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"Feature"})}),"\n",(0,s.jsxs)(n.p,{children:["\u21b3 ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"ModdedElementSets"})})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"getcollectibletypes",children:"getCollectibleTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCollectibleTypes"}),"(): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every valid collectible type in the game, including modded\ncollectibles."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to iterate over the collectibles in order. If you need to do O(1) lookups,\nthen use the ",(0,s.jsx)(n.code,{children:"getCollectibleTypesSet"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L494",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:494"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getcollectibletypeset",children:"getCollectibleTypeSet"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCollectibleTypeSet"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every valid collectible type in the game, including modded\ncollectibles."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to do O(1) lookups. If you need to iterate over the collectibles in order,\nthen use the ",(0,s.jsx)(n.code,{children:"getCollectibleTypes"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L515",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:515"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmoddedcollectibletypes",children:"getModdedCollectibleTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getModdedCollectibleTypes"}),"(): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every modded collectible type in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to iterate over the collectibles in order. If you need to do O(1) lookups,\nthen use the ",(0,s.jsx)(n.code,{children:"getModdedCollectibleTypesSet"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L535",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:535"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmoddedcollectibletypesset",children:"getModdedCollectibleTypesSet"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getModdedCollectibleTypesSet"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every modded collectible type in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to do O(1) lookups. If you need to iterate over the collectibles in order,\nthen use the ",(0,s.jsx)(n.code,{children:"getModdedCollectibleTypes"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L555",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:555"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getplayercollectiblemap",children:"getPlayerCollectibleMap"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPlayerCollectibleMap"}),"(",(0,s.jsx)(n.code,{children:"player"}),"): ",(0,s.jsx)(n.code,{children:"Map"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),", ",(0,s.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Iterates over every collectible in the game and returns a map containing the number of each\nitem that the player has."}),"\n",(0,s.jsx)(n.p,{children:"Note that this will filter out non-real collectibles like Lilith's Incubus."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"player"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Map"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),", ",(0,s.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L575",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:575"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"gettrinkettypes",children:"getTrinketTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getTrinketTypes"}),"(): readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every modded trinket type in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to iterate over the trinkets in order. If you need to do O(1) lookups,\nthen use the ",(0,s.jsx)(n.code,{children:"getModdedTrinketTypesSet"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinket types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L632",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:632"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"gettrinkettypesset",children:"getTrinketTypesSet"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getTrinketTypesSet"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"TrinketType"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every modded trinket type in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to do O(1) lookups. If you need to iterate over the trinkets in order,\nthen use the ",(0,s.jsx)(n.code,{children:"getModdedTrinketTypes"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinket types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"TrinketType"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L652",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:652"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmoddedtrinkettypes",children:"getModdedTrinketTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getModdedTrinketTypes"}),"(): readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every modded trinket type in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to iterate over the trinkets in order. If you need to do O(1) lookups,\nthen use the ",(0,s.jsx)(n.code,{children:"getModdedTrinketTypesSet"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinket types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L672",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:672"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmoddedtrinkettypesset",children:"getModdedTrinketTypesSet"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getModdedTrinketTypesSet"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"TrinketType"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every modded trinket type in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to do O(1) lookups. If you need to iterate over the trinkets in order,\nthen use the ",(0,s.jsx)(n.code,{children:"getModdedTrinketTypes"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinket types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"TrinketType"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L692",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:692"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getcardtypes",children:"getCardTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCardTypes"}),"(): readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every valid card type in the game, including modded cards."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to iterate over the cards in order. If you need to do O(1) lookups, then\nuse the ",(0,s.jsx)(n.code,{children:"getCardTypesSet"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all card types will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L715",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:715"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getcardtypesset",children:"getCardTypesSet"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCardTypesSet"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CardType"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every valid card type in the game, including modded cards."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to do O(1) lookups. If you need to iterate over the cards in order, then\nuse the ",(0,s.jsx)(n.code,{children:"getCardTypes"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all card types will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CardType"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L734",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:734"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmoddedcardtypes",children:"getModdedCardTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getModdedCardTypes"}),"(): readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every modded card type in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to iterate over the cards in order. If you need to do O(1) lookups, then\nuse the ",(0,s.jsx)(n.code,{children:"getModdedCardTypesSet"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all card types will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L753",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:753"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmoddedcardtypesset",children:"getModdedCardTypesSet"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getModdedCardTypesSet"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CardType"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every modded card type in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to do O(1) lookups. If you need to iterate over the cards in order, then\nuse the ",(0,s.jsx)(n.code,{children:"getModdedCardTypes"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all card types will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CardType"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L772",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:772"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getpilleffects",children:"getPillEffects"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPillEffects"}),"(): readonly ",(0,s.jsx)(n.code,{children:"PillEffect"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every valid pill effect in the game, including modded pill effects."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to iterate over the pill effects in order. If you need to do O(1) lookups,\nthen use the ",(0,s.jsx)(n.code,{children:"getPillEffectSet"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all pill effects will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"PillEffect"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L796",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:796"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getpilleffectsset",children:"getPillEffectsSet"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPillEffectsSet"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"PillEffect"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every valid pill effect in the game, including modded pill effects."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to do O(1) lookups. If you need to iterate over the pill effects in order,\nthen use the ",(0,s.jsx)(n.code,{children:"getPillEffects"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all pill effects will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"PillEffect"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L816",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:816"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmoddedpilleffects",children:"getModdedPillEffects"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getModdedPillEffects"}),"(): readonly ",(0,s.jsx)(n.code,{children:"PillEffect"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every modded pill effect in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to iterate over the pill effects in order. If you need to do O(1) lookups,\nthen use the ",(0,s.jsx)(n.code,{children:"getModdedPillEffectsSet"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all pill effects will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"PillEffect"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L836",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:836"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getmoddedpilleffectsset",children:"getModdedPillEffectsSet"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getModdedPillEffectsSet"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"PillEffect"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every modded pill effect in the game."}),"\n",(0,s.jsxs)(n.p,{children:["Use this if you need to do O(1) lookups. If you need to iterate over the pill effects in order,\nthen use the ",(0,s.jsx)(n.code,{children:"getModdedPillEffects"})," helper function instead."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all pill effects will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"PillEffect"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L856",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:856"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getcollectibletypeswithcacheflag",children:"getCollectibleTypesWithCacheFlag"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCollectibleTypesWithCacheFlag"}),"(",(0,s.jsx)(n.code,{children:"cacheFlag"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every collectible type with the given cache flag, including modded\ncollectibles."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"cacheFlag"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"CacheFlagValue"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L878",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:878"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"gettrinketstypeswithcacheflag",children:"getTrinketsTypesWithCacheFlag"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getTrinketsTypesWithCacheFlag"}),"(",(0,s.jsx)(n.code,{children:"cacheFlag"}),"): readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every trinket type with the given cache flag, including modded\ntrinkets."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinket types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"cacheFlag"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"CacheFlagValue"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L904",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:904"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getplayercollectibleswithcacheflag",children:"getPlayerCollectiblesWithCacheFlag"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPlayerCollectiblesWithCacheFlag"}),"(",(0,s.jsx)(n.code,{children:"player"}),", ",(0,s.jsx)(n.code,{children:"cacheFlag"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["Returns an array containing every collectible type that the player has that matches the\nprovided ",(0,s.jsx)(n.code,{children:"CacheFlag"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["For example, if the cache flag is ",(0,s.jsx)(n.code,{children:"CacheFlag.FLYING"}),", and the player has one Lord of the Pit\nand two Dead Doves, then this function would return:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"[\n  CollectibleType.LORD_OF_THE_PIT,\n  CollectibleType.DEAD_DOVE,\n  CollectibleType.DEAD_DOVE,\n]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note that this array will not include collectibles that the player does not really have, like\nLilith's Incubus."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"player"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"cacheFlag"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"CacheFlagValue"})})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L944",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:944"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getplayertrinketswithcacheflag",children:"getPlayerTrinketsWithCacheFlag"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPlayerTrinketsWithCacheFlag"}),"(",(0,s.jsx)(n.code,{children:"player"}),", ",(0,s.jsx)(n.code,{children:"cacheFlag"}),"): ",(0,s.jsx)(n.code,{children:"Map"}),"<",(0,s.jsx)(n.code,{children:"TrinketType"}),", ",(0,s.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,s.jsxs)(n.p,{children:["Returns a map containing every trinket type that the player has that matches the provided\n",(0,s.jsx)(n.code,{children:"CacheFlag"}),". The values of the map correspond to the multiplier for that trinket."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinket types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"player"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"cacheFlag"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"CacheFlagValue"})})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Map"}),"<",(0,s.jsx)(n.code,{children:"TrinketType"}),", ",(0,s.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L976",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:976"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getflyingcollectibletypes",children:"getFlyingCollectibleTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getFlyingCollectibleTypes"}),"(",(0,s.jsx)(n.code,{children:"includeConditionalItems"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["Returns a set of all of the collectibles that grant flight. This is derived from collectibles\nthat have ",(0,s.jsx)(n.code,{children:"CacheFlag.FLYING"}),' set in the "items.xml" file.']}),"\n",(0,s.jsxs)(n.p,{children:["Vanilla collectibles that only grant flight conditionally are manually pruned. Collectibles\nsuch as Empty Vessel should be checked for via the ",(0,s.jsx)(n.code,{children:"hasFlyingTemporaryEffect"})," function."]}),"\n",(0,s.jsxs)(n.p,{children:["Under the hood, this is determined by looking at the collectibles that have ",(0,s.jsx)(n.code,{children:"CacheFlag.FLYING"}),"\nand excluding the ones that have ",(0,s.jsx)(n.code,{children:"CacheFlag.ALL"}),". (None of the collectibles with\n",(0,s.jsx)(n.code,{children:"CacheFlag.ALL"})," grant flying, including all of the 3 Dollar Bill collectibles and all of the\nBirthright effects.)"]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"includeConditionalItems"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Whether collectibles that only grant flight conditionally should be included in the set (like Empty Vessel)."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1017",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1017"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getflyingtrinkettypes",children:"getFlyingTrinketTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getFlyingTrinketTypes"}),"(): readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set of all of the trinkets that grant flight. (All vanilla trinkets that grant flight\ndo so conditionally, like Bat Wing and Azazel's Stump.)"}),"\n",(0,s.jsxs)(n.p,{children:["Under the hood, this is determined by looking at the trinkets that have ",(0,s.jsx)(n.code,{children:"CacheFlag.FLYING"})," and\nexcluding the ones that have ",(0,s.jsx)(n.code,{children:"CacheFlag.ALL"}),". (None of the trinket with ",(0,s.jsx)(n.code,{children:"CacheFlag.ALL"})," grant\nflying except for Azazel's Stump.)"]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinket types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1044",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1044"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getcollectibletypeswithtag",children:"getCollectibleTypesWithTag"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCollectibleTypesWithTag"}),"(",(0,s.jsx)(n.code,{children:"itemConfigTag"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every collectible type with the given tag."}),"\n",(0,s.jsx)(n.p,{children:"For example, to get all of the collectible types that count as offensive for the purposes of\nTainted Lost:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const offensiveCollectibleTypes = getCollectibleTypesWithTag(ItemConfigTag.OFFENSIVE);\n"})}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"itemConfigTag"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"ItemConfigTagValue"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1072",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1072"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getplayercollectibleswithtag",children:"getPlayerCollectiblesWithTag"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPlayerCollectiblesWithTag"}),"(",(0,s.jsx)(n.code,{children:"player"}),", ",(0,s.jsx)(n.code,{children:"itemConfigTag"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array of collectible types that a player has with a particular tag."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"player"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"itemConfigTag"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"ItemConfigTagValue"})})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1098",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1098"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getcollectibletypesfortransformation",children:"getCollectibleTypesForTransformation"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCollectibleTypesForTransformation"}),"(",(0,s.jsx)(n.code,{children:"playerForm"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Helper function to get all of the collectible types in the game that count towards a particular\ntransformation."}),"\n",(0,s.jsx)(n.p,{children:"For example, to get all of the collectible types that count towards Guppy:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const guppyCollectibleTypes = getCollectiblesForTransformation(PlayerForm.GUPPY);\n"})}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"playerForm"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"PlayerForm"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-25",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-25",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1136",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1136"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getplayercollectiblesfortransformation",children:"getPlayerCollectiblesForTransformation"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPlayerCollectiblesForTransformation"}),"(",(0,s.jsx)(n.code,{children:"player"}),", ",(0,s.jsx)(n.code,{children:"playerForm"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array of collectible types that a player has that count towards a particular\ntransformation."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"player"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"playerForm"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"PlayerForm"})})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-26",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-26",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1161",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1161"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getedenactivecollectibletypes",children:"getEdenActiveCollectibleTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getEdenActiveCollectibleTypes"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every valid passive item that can be randomly granted to Eden as a\nstarting item."}),"\n",(0,s.jsx)(n.p,{children:'Under the hood, this is determined by looking at the "noeden" tag in "items_metadata.xml".'}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-27",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-27",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1195",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1195"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getedenpassivecollectibletypes",children:"getEdenPassiveCollectibleTypes"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getEdenPassiveCollectibleTypes"}),"(): ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsx)(n.p,{children:"Returns a set containing every valid passive item that can be randomly granted to Eden as a\nstarting item."}),"\n",(0,s.jsx)(n.p,{children:'Under the hood, this is determined by looking at the "noeden" tag in "items_metadata.xml".'}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"returns-28",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-28",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1215",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1215"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getrandomedenactivecollectibletype",children:"getRandomEdenActiveCollectibleType"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getRandomEdenActiveCollectibleType"}),"(",(0,s.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,s.jsx)(n.code,{children:"exceptions?"}),"): ",(0,s.jsx)(n.code,{children:"CollectibleType"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns a random active collectible type that that is a valid starting item for Eden."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["If you want to get an unseeded collectible type, you must explicitly pass ",(0,s.jsx)(n.code,{children:"undefined"})," to the\n",(0,s.jsx)(n.code,{children:"seedOrRNG"})," parameter."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"seedOrRNG"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"RNG"})," | ",(0,s.jsx)(n.code,{children:"Seed"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(n.code,{children:"Seed"})," or ",(0,s.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,s.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,s.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,s.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"exceptions"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. An array of runes to not select."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-29",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"CollectibleType"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-29",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1239",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1239"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getrandomedenpassivecollectibletype",children:"getRandomEdenPassiveCollectibleType"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getRandomEdenPassiveCollectibleType"}),"(",(0,s.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,s.jsx)(n.code,{children:"exceptions?"}),"): ",(0,s.jsx)(n.code,{children:"CollectibleType"})]}),"\n",(0,s.jsx)(n.p,{children:"Returns a random passive collectible type that that is a valid starting item for Eden\n(including familiars)."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["If you want to get an unseeded collectible type, you must explicitly pass ",(0,s.jsx)(n.code,{children:"undefined"})," to the\n",(0,s.jsx)(n.code,{children:"seedOrRNG"})," parameter."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"seedOrRNG"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"RNG"})," | ",(0,s.jsx)(n.code,{children:"Seed"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(n.code,{children:"Seed"})," or ",(0,s.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,s.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,s.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,s.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"exceptions"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. An array of runes to not select."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-30",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"CollectibleType"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-30",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1272",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1272"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getcollectibletypesofquality",children:"getCollectibleTypesOfQuality"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCollectibleTypesOfQuality"}),"(",(0,s.jsx)(n.code,{children:"quality"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array containing every collectible type with the given quality."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"quality"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Quality"})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-31",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-31",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1301",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1301"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getplayercollectiblesofquality",children:"getPlayerCollectiblesOfQuality"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getPlayerCollectiblesOfQuality"}),"(",(0,s.jsx)(n.code,{children:"player"}),", ",(0,s.jsx)(n.code,{children:"quality"}),"): readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Returns an array of collectible types that a player has that are of a particular quality."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectible types will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"player"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"quality"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"Quality"})})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-32",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-32",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1327",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1327"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getcardtypesoftype",children:"getCardTypesOfType"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getCardTypesOfType"}),"(",(0,s.jsx)(n.code,{children:"...itemConfigCardTypes"}),"): readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["Helper function to get an array of card types matching the ",(0,s.jsx)(n.code,{children:"ItemConfigCardType"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This function is variadic, meaning that you can you can specify N card types to get an array\ncontaining cards that match any of the specified types."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all card types will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"...itemConfigCardTypes"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.code,{children:"ItemConfigCardType"}),"[]"]})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-33",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-33",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1364",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1364"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getrandomcardtypeoftype",children:"getRandomCardTypeOfType"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getRandomCardTypeOfType"}),"(",(0,s.jsx)(n.code,{children:"itemConfigCardType"}),", ",(0,s.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,s.jsx)(n.code,{children:"exceptions?"}),"): ",(0,s.jsx)(n.code,{children:"CardType"})]}),"\n",(0,s.jsxs)(n.p,{children:["Helper function to get a random card type that matches the provided ",(0,s.jsx)(n.code,{children:"ItemConfigCardType"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all card types will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,s.jsxs)(n.p,{children:["If you want to get an unseeded card type, you must explicitly pass ",(0,s.jsx)(n.code,{children:"undefined"})," to the\n",(0,s.jsx)(n.code,{children:"seedOrRNG"})," parameter."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"itemConfigCardType"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"ItemConfigCardType"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The item config card type that represents the pool of cards to select from."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"seedOrRNG"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"RNG"})," | ",(0,s.jsx)(n.code,{children:"Seed"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(n.code,{children:"Seed"})," or ",(0,s.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,s.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,s.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,s.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"exceptions"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. An array of cards to not select."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-34",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"CardType"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-34",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1406",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1406"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getrandomcard",children:"getRandomCard"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getRandomCard"}),"(",(0,s.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,s.jsx)(n.code,{children:"exceptions?"}),"): ",(0,s.jsx)(n.code,{children:"CardType"})]}),"\n",(0,s.jsx)(n.p,{children:"Has an equal chance of returning any card (e.g. Fool, Reverse Fool, Wild Card, etc.)."}),"\n",(0,s.jsx)(n.p,{children:"This will not return:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"any runes"}),"\n",(0,s.jsx)(n.li,{children:"any objects like Dice Shard"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all card types will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,s.jsxs)(n.p,{children:["If you want to get an unseeded card type, you must explicitly pass ",(0,s.jsx)(n.code,{children:"undefined"})," to the\n",(0,s.jsx)(n.code,{children:"seedOrRNG"})," parameter."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"seedOrRNG"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"RNG"})," | ",(0,s.jsx)(n.code,{children:"Seed"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(n.code,{children:"Seed"})," or ",(0,s.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,s.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,s.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,s.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"exceptions"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. An array of cards to not select."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-35",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"CardType"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-35",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1437",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1437"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getrandomrune",children:"getRandomRune"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getRandomRune"}),"(",(0,s.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,s.jsx)(n.code,{children:"exceptions?"}),"): ",(0,s.jsx)(n.code,{children:"CardType"})]}),"\n",(0,s.jsx)(n.p,{children:"Has an equal chance of returning any rune (e.g. Rune of Hagalaz, Blank Rune, Black Rune, Soul\nof Isaac, etc.). This will never return a Rune Shard."}),"\n",(0,s.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all card types will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,s.jsxs)(n.p,{children:["If you want to get an unseeded card type, you must explicitly pass ",(0,s.jsx)(n.code,{children:"undefined"})," to the\n",(0,s.jsx)(n.code,{children:"seedOrRNG"})," parameter."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_SETS"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"seedOrRNG"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"RNG"})," | ",(0,s.jsx)(n.code,{children:"Seed"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(n.code,{children:"Seed"})," or ",(0,s.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,s.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,s.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,s.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"exceptions"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"[]"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. An array of runes to not select."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-36",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"CardType"})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-36",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts#L1464",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementSets.ts:1464"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(14041);const l={},d=s.createContext(l);function i(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);