"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[87832],{4375:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var n=s(31085),i=s(71184);const o={custom_edit_url:null},r="CustomStageTSConfig",l={id:"isaacscript-common/other/interfaces/CustomStageTSConfig",title:"CustomStageTSConfig",description:'This is the format of a custom stage in the "isaacscript" section of the "tsconfig.json" file.',source:"@site/docs/isaacscript-common/other/interfaces/CustomStageTSConfig.md",sourceDirName:"isaacscript-common/other/interfaces",slug:"/isaacscript-common/other/interfaces/CustomStageTSConfig",permalink:"/isaacscript-common/other/interfaces/CustomStageTSConfig",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"CustomStageShadow",permalink:"/isaacscript-common/other/interfaces/CustomStageShadow"},next:{title:"GridEntityCustomData",permalink:"/isaacscript-common/other/interfaces/GridEntityCustomData"}},c={},a=[{value:"Properties",id:"properties",level:2},{value:"name",id:"name",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"xmlPath",id:"xmlpath",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"roomVariantPrefix",id:"roomvariantprefix",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"baseStage",id:"basestage",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"baseStageType",id:"basestagetype",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"music",id:"music",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"backdropPNGPaths",id:"backdroppngpaths",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"decorationsPNGPath",id:"decorationspngpath",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"decorationsANM2Path",id:"decorationsanm2path",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"rocksPNGPath",id:"rockspngpath",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"rocksANM2Path",id:"rocksanm2path",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"pitsPNGPath",id:"pitspngpath",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"pitsANM2Path",id:"pitsanm2path",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"doorPNGPaths",id:"doorpngpaths",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"shadows",id:"shadows",level:3},{value:"Type declaration",id:"type-declaration-2",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"bossPool",id:"bosspool",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"versusScreen",id:"versusscreen",level:3},{value:"Type declaration",id:"type-declaration-3",level:4},{value:"Defined in",id:"defined-in-16",level:4}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"customstagetsconfig",children:"CustomStageTSConfig"}),"\n",(0,n.jsx)(t.p,{children:'This is the format of a custom stage in the "isaacscript" section of the "tsconfig.json" file.'}),"\n",(0,n.jsx)(t.p,{children:'The contents of this interface are used to create a "tsconfig-isaacscript-section-schema.json"\nschema with the "ts-json-schema-generator" library.'}),"\n",(0,n.jsx)(t.p,{children:"The contents of this interface are validated at run-time against the schema."}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"CustomStageLua"})," interface extends this, adding room metadata."]}),"\n",(0,n.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsx)(t.h3,{id:"name",children:"name"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.strong,{children:"name"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:"Mandatory. The name of the custom stage."}),"\n",(0,n.jsx)(t.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L15",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:15"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"xmlpath",children:"xmlPath"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.strong,{children:"xmlPath"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:"Mandatory. The path to the XML file that contains the rooms for the custom stage (created with\nBasement Renovator)."}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L21",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:21"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"roomvariantprefix",children:"roomVariantPrefix"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.strong,{children:"roomVariantPrefix"}),": ",(0,n.jsx)(t.code,{children:"number"})]}),"\n",(0,n.jsx)(t.p,{children:"Mandatory. An arbitrarily chosen prefix in the range of 101-999 that will be unique to this\nstage."}),"\n",(0,n.jsxs)(t.p,{children:["Use a value of 100 when testing locally. When publishing to the workshop or otherwise\ndistributing your mod, make sure that you have chosen a prefix that does not conflict with any\nother mods. You can find a list of registered room variant prefixes on the IsaacScript website:\n",(0,n.jsx)(t.a,{href:"https://isaacscript.github.io/main/custom-stages",children:"https://isaacscript.github.io/main/custom-stages"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})}),"\n",(0,n.jsx)(t.p,{children:"100"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})}),"\n",(0,n.jsx)(t.p,{children:"999"}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L35",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:35"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"basestage",children:"baseStage"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"baseStage"}),": ",(0,n.jsx)(t.code,{children:"number"})]}),"\n",(0,n.jsxs)(t.p,{children:["Optional. An integer between 2 and 13, corresponding to the ",(0,n.jsx)(t.code,{children:"LevelStage"})," enum. This is the\nnumber of the stage that will be warped to and used as a basis for the stage by the level\ngeneration algorithm."]}),"\n",(0,n.jsx)(t.p,{children:"For example, if you wanted to have a custom stage with a small amount of rooms per floor, then\nyou should choose 2 as a base. (This would copy the number of rooms that would appear in\nBasement 2.) And if you wanted to have a custom stage with the maximum amount of rooms, then\nyou should choose 13 as a base. (This would copy the number of rooms that would appear on The\nVoid.)"}),"\n",(0,n.jsxs)(t.p,{children:["It is not possible to use Basement 1 as a base stage due to conflicts with the ",(0,n.jsx)(t.code,{children:"Game.SetStage"}),"\nmethod."]}),"\n",(0,n.jsxs)(t.p,{children:["If not specified, ",(0,n.jsx)(t.code,{children:"LevelStage.BASEMENT_2"})," (2) will be used."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})}),"\n",(0,n.jsx)(t.p,{children:"2"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})}),"\n",(0,n.jsx)(t.p,{children:"13"}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L56",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:56"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"basestagetype",children:"baseStageType"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"baseStageType"}),": ",(0,n.jsx)(t.code,{children:"number"})]}),"\n",(0,n.jsxs)(t.p,{children:["Optional. An integer between 0 and 5, corresponding to the ",(0,n.jsx)(t.code,{children:"StageType"})," enum. This is the number\nof the stage type that will be warped to and used as a basis for the stage by the level\ngeneration algorithm."]}),"\n",(0,n.jsxs)(t.p,{children:["If not specified, ",(0,n.jsx)(t.code,{children:"StageType.ORIGINAL"})," (0) will be used."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})}),"\n",(0,n.jsx)(t.p,{children:"0"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})}),"\n",(0,n.jsx)(t.p,{children:"5"}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L68",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:68"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"music",children:"music"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"music"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:'Optional. A string that represents the name of the music track from the "content/music.xml"\nfile that corresponds to this custom stage. It will be manually played upon entering the stage.'}),"\n",(0,n.jsx)(t.p,{children:"If not specified, the same music track as the base stage will be used."}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L76",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:76"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"backdroppngpaths",children:"backdropPNGPaths"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"backdropPNGPaths"}),": ",(0,n.jsx)(t.code,{children:"Object"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. An object containing the paths to the backdrop graphics for the stage. (A backdrop is\nthe graphics for the walls and floor.) If not specified, the graphics for Basement will be\nused."}),"\n",(0,n.jsx)(t.h4,{id:"type-declaration",children:"Type declaration"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"nFloors"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"string"}),"[]"]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'An array that contains the full paths to the graphic files that are used for the floor in narrow rooms. (The "n" stands for "narrow"). You must have at least one path in this array, but you can specify more than one to randomly add extra variety (like the vanilla stages do). For an example of this, see the vanilla file "resources/gfx/backdrop/01_basement_nfloor.png".'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"lFloors"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"string"}),"[]"]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'An array that contains the full paths to the graphic files that are used for the floor in L rooms. You must have at least one path in this array, but you can specify more than one to randomly add extra variety (like the vanilla stages do). For an example of this, see the vanilla file "resources/gfx/backdrop/01_lbasementfloor.png".'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"walls"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"string"}),"[]"]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'An array that contains the full paths to the graphic files that are used for the walls of the floor. You must have at least one path in this array, but you can specify more than one to randomly add extra variety (like the vanilla stages do). For an example of this, see the vanilla file "resources/gfx/backdrop/01_basement.png". (In the vanilla file, they concatenate all four variations together into one PNG file. However, for the custom stages feature, you must separate each wall variation into a separate file.)'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"corners"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.code,{children:"string"}),"[]"]}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:'An array that contains the full paths to the graphic files for the stage\'s corners. You must have at least one path in this array, but you can specify more than one to randomly add extra variety (like the vanilla stages do). For an example of this, see the vanilla file "resources/gfx/backdrop/01_basement.png". (In the vanilla file, they concatenate both variations together into one PNG file and put it in the top right hand corner. The corners are shown in the top right hand corner of the file, with two different variations concatenated together. However, for the custom stages feature, you must separate each corner variation into a separate file (and put it in a different file from the walls).'})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L83",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:83"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"decorationspngpath",children:"decorationsPNGPath"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"decorationsPNGPath"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. The full path to the spritesheet that contains the graphics of the decorations for\nthe floor."}),"\n",(0,n.jsxs)(t.p,{children:["If not specified, the vanilla Basement decorations spritesheet will be used. For reference,\nthis is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/props_01_basement.png"})]}),"\n",(0,n.jsxs)(t.p,{children:["If you want to have custom animations for your decorations, then do not use this field and use\n",(0,n.jsx)(t.code,{children:"decorationsANM2Path"})," instead."]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L145",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:145"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"decorationsanm2path",children:"decorationsANM2Path"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"decorationsANM2Path"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. The full path to the anm2 file that contains the custom animations for the\ndecorations of the floor."}),"\n",(0,n.jsxs)(t.p,{children:["If not specified, the vanilla Basement decorations spritesheet will be used. For reference,\nthis is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/props_01_basement.png"})]}),"\n",(0,n.jsxs)(t.p,{children:["If you do not want to have custom animations for your decorations, then do not use this field\nand use ",(0,n.jsx)(t.code,{children:"decorationsPNGPath"})," instead."]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L157",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:157"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"rockspngpath",children:"rocksPNGPath"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"rocksPNGPath"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. The full path to the spritesheet that contains the graphics of the rocks/blocks/urns\nfor the floor."}),"\n",(0,n.jsxs)(t.p,{children:["If specified, it is assumed that you have your own custom rock alt type, and all vanilla\nrewards/enemies that spawn from urns will be automatically removed. Use the\n",(0,n.jsx)(t.code,{children:"POST_GRID_ENTITY_BROKEN"})," callback to make your own custom rewards. Or, if you want to emulate\na vanilla urn/mushroom/skull/polyp/bucket, use the ",(0,n.jsx)(t.code,{children:"spawnRockAltReward"})," helper function."]}),"\n",(0,n.jsxs)(t.p,{children:["If not specified, the vanilla Basement rocks spritesheet will be used. For reference, this is\nlocated at: ",(0,n.jsx)(t.code,{children:"resources-dlc3/gfx/grid/rocks_basement.png"})]}),"\n",(0,n.jsxs)(t.p,{children:["If you want to have custom animations for your rocks, then do not use this field and use\n",(0,n.jsx)(t.code,{children:"rocksANM2Path"})," instead."]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L174",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:174"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"rocksanm2path",children:"rocksANM2Path"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"rocksANM2Path"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. The full path to the anm2 file that contains the custom animations for the\nrocks/blocks/urns of the floor."}),"\n",(0,n.jsxs)(t.p,{children:["If specified, it is assumed that you have your own custom rock alt type, and all vanilla\nrewards/enemies that spawn from urns will be automatically removed. Use the\n",(0,n.jsx)(t.code,{children:"POST_GRID_ENTITY_BROKEN"})," callback to make your own custom rewards. Or, if you want to emulate\na vanilla urn/mushroom/skull/polyp/bucket, use the ",(0,n.jsx)(t.code,{children:"spawnRockAltReward"})," helper function."]}),"\n",(0,n.jsxs)(t.p,{children:["If not specified, the vanilla Basement rocks spritesheet will be used. For reference, this is\nlocated at: ",(0,n.jsx)(t.code,{children:"resources-dlc3/gfx/grid/rocks_basement.png"})]}),"\n",(0,n.jsxs)(t.p,{children:["If you do not want to have custom animations for your rocks, then do not use this field and use\n",(0,n.jsx)(t.code,{children:"rocksPNGPath"})," instead."]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L191",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:191"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"pitspngpath",children:"pitsPNGPath"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"pitsPNGPath"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. The full path to the spritesheet that contains the graphics of the pits for the\nfloor."}),"\n",(0,n.jsxs)(t.p,{children:["If not specified, the vanilla Basement pits spritesheet will be used. For reference, this is\nlocated at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/grid_pit.png"})]}),"\n",(0,n.jsxs)(t.p,{children:["If you do not want to have custom animations for your pits, then do not use this field and use\n",(0,n.jsx)(t.code,{children:"pitsANM2Path"})," instead."]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L203",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:203"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"pitsanm2path",children:"pitsANM2Path"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"pitsANM2Path"}),": ",(0,n.jsx)(t.code,{children:"string"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. The full path to the anm2 file that contains the custom animations for the pits of\nthe floor."}),"\n",(0,n.jsxs)(t.p,{children:["If not specified, the vanilla Basement pits spritesheet will be used. For reference, this is\nlocated at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/grid_pit.png"})]}),"\n",(0,n.jsxs)(t.p,{children:["If you do not want to have custom animations for your pits, then do not use this field and use\n",(0,n.jsx)(t.code,{children:"pitsPNGPath"})," instead."]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L215",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:215"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"doorpngpaths",children:"doorPNGPaths"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"doorPNGPaths"}),": ",(0,n.jsx)(t.code,{children:"Object"})]}),"\n",(0,n.jsx)(t.p,{children:"Optional. A collection of paths that contain graphics for the doors of the floor. If not\nspecified, the doors for Basement will be used."}),"\n",(0,n.jsx)(t.h4,{id:"type-declaration-1",children:"Type declaration"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"normal?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the normal doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_01_normaldoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"treasureRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Treasure Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_02_treasureroomdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"bossRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Boss Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_10_bossroomdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"secretRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Secret Room and Super Secret Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_08_holeinwall.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"arcade?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the arcade doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_05_arcaderoomdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"curseRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Curse Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_04_selfsacrificeroomdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"normalChallengeRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the normal Challenge Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_03_ambushroomdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"bossChallengeRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Boss Challenge Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_09_bossambushroomdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"devilRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Devil Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_07_devilroomdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"angelRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Angel Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_07_holyroomdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"bossRush?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Boss Rush doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_15_bossrushdoor.png"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"chestRoom?"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. The full path to the spritesheet that contains the graphics of the Chest Room doors for the floor. If not specified, the vanilla Basement door spritesheet will be used. For reference, this is located at: ",(0,n.jsx)(t.code,{children:"resources/gfx/grid/door_02b_chestroomdoor.png"})]})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L221",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:221"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"shadows",children:"shadows"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"shadows"}),": ",(0,n.jsx)(t.code,{children:"Object"})]}),"\n",(0,n.jsx)(t.p,{children:'Optional. An array of shadow objects that describe the graphics for the custom shadows of the\nfloor. (In this context, "shadows" are the outlines from things on the roof. For example, in\nBasement, a shadow of a sideways V is used, among others.) If not specified, no extra shadows\nwill be drawn.'}),"\n",(0,n.jsx)(t.h4,{id:"type-declaration-2",children:"Type declaration"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"1x1?"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/isaacscript-common/other/interfaces/CustomStageShadow",children:(0,n.jsx)(t.code,{children:"CustomStageShadow"})}),"[]"]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. An array containing the shadows that will be used in rooms of shape ",(0,n.jsx)(t.code,{children:"RoomShape.SHAPE_1x1"})," (1), ",(0,n.jsx)(t.code,{children:"RoomShape.IH"})," (2), and ",(0,n.jsx)(t.code,{children:"RoomShape.IV"})," (3). If more than one shadow is specified, one will be randomly chosen for each room. If not specified, no extra shadows will be drawn in these room shapes."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"1x2?"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/isaacscript-common/other/interfaces/CustomStageShadow",children:(0,n.jsx)(t.code,{children:"CustomStageShadow"})}),"[]"]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. An array containing the shadows that will be used in rooms of shape ",(0,n.jsx)(t.code,{children:"RoomShape.SHAPE_1x2"})," (4) and ",(0,n.jsx)(t.code,{children:"RoomShape.IIV"})," (5). If more than one shadow is specified, one will be randomly chosen for each room. If not specified, no extra shadows will be drawn in these room shapes."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"2x1?"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/isaacscript-common/other/interfaces/CustomStageShadow",children:(0,n.jsx)(t.code,{children:"CustomStageShadow"})}),"[]"]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. An array containing the shadows that will be used in rooms of shape ",(0,n.jsx)(t.code,{children:"RoomShape.SHAPE_2x1"})," (6) and ",(0,n.jsx)(t.code,{children:"RoomShape.IIH"})," (7). If more than one shadow is specified, one will be randomly chosen for each room. If not specified, no extra shadows will be drawn in these room shapes."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"2x2?"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.a,{href:"/isaacscript-common/other/interfaces/CustomStageShadow",children:(0,n.jsx)(t.code,{children:"CustomStageShadow"})}),"[]"]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["Optional. An array containing the shadows that will be used in rooms of shape ",(0,n.jsx)(t.code,{children:"RoomShape.SHAPE_2x2"})," (8), ",(0,n.jsx)(t.code,{children:"RoomShape.LTL"})," (9), ",(0,n.jsx)(t.code,{children:"RoomShape.LTR"})," (10), ",(0,n.jsx)(t.code,{children:"RoomShape.LBL"})," (11), and ",(0,n.jsx)(t.code,{children:"RoomShape.LBR"})," (12). If more than one shadow is specified, one will be randomly chosen for each room. If not specified, no extra shadows will be drawn in these room shapes."]})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L337",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:337"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"bosspool",children:"bossPool"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"bossPool"}),": ",(0,n.jsx)(t.a,{href:"/isaacscript-common/other/interfaces/CustomStageBossPoolEntry",children:(0,n.jsx)(t.code,{children:"CustomStageBossPoolEntry"})}),"[]"]}),"\n",(0,n.jsx)(t.p,{children:"Optional. An array containing the bosses that should be used for the stage. This can include\nboth vanilla bosses and modded bosses."}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L384",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:384"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"versusscreen",children:"versusScreen"}),"\n",(0,n.jsxs)(t.p,{children:["\u2022 ",(0,n.jsx)(t.code,{children:"Optional"})," ",(0,n.jsx)(t.strong,{children:"versusScreen"}),": ",(0,n.jsx)(t.code,{children:"Object"})]}),"\n",(0,n.jsx)(t.p,{children:'Optional. A collection of colors used for in the boss "versus" screen for all of the bosses.'}),"\n",(0,n.jsxs)(t.p,{children:["Note that these graphics will only be applied if one or more bosses are specified in the\n",(0,n.jsx)(t.code,{children:"bossPool"})," field."]}),"\n",(0,n.jsx)(t.h4,{id:"type-declaration-3",children:"Type declaration"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"backgroundColor?"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["{ ",(0,n.jsx)(t.code,{children:"r"}),": ",(0,n.jsx)(t.code,{children:"number"})," ; ",(0,n.jsx)(t.code,{children:"g"}),": ",(0,n.jsx)(t.code,{children:"number"})," ; ",(0,n.jsx)(t.code,{children:"b"}),": ",(0,n.jsx)(t.code,{children:"number"})," ; ",(0,n.jsx)(t.code,{children:"a"}),": ",(0,n.jsx)(t.code,{children:"number"}),"  }"]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:['Optional. An object representing the color to use for the background of the boss "versus" screen. If not specified, the color for Basement 1 will be used. For a list of the colors that correspond to the vanilla stages, see ',(0,n.jsx)(t.code,{children:"versusScreenBackgroundColors.ts"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"backgroundColor.r"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})," 0 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})," 1"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"backgroundColor.g"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})," 0 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})," 1"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"backgroundColor.b"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})," 0 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})," 1"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"backgroundColor.a"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})," 0 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})," 1"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"dirtSpotColor?"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:["{ ",(0,n.jsx)(t.code,{children:"r"}),": ",(0,n.jsx)(t.code,{children:"number"})," ; ",(0,n.jsx)(t.code,{children:"g"}),": ",(0,n.jsx)(t.code,{children:"number"})," ; ",(0,n.jsx)(t.code,{children:"b"}),": ",(0,n.jsx)(t.code,{children:"number"})," ; ",(0,n.jsx)(t.code,{children:"a"}),": ",(0,n.jsx)(t.code,{children:"number"}),"  }"]}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:['Optional. An object representing the color to use for the dirt spots in the boss "versus" screen. (There are two dirt spots; one for the player and one for the boss.) If not specified, the color for Basement 1 will be used. For a list of the colors that correspond to the vanilla stages, see ',(0,n.jsx)(t.code,{children:"versusScreenDirtSpotColors.ts"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"dirtSpotColor.r"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})," 0 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})," 1"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"dirtSpotColor.g"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})," 0 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})," 1"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"dirtSpotColor.b"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})," 0 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})," 1"]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"dirtSpotColor.a"})}),(0,n.jsx)(t.td,{style:{textAlign:"left"},children:(0,n.jsx)(t.code,{children:"number"})}),(0,n.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Minimum"})})," 0 ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"Maximum"})})," 1"]})]})]})]}),"\n",(0,n.jsx)(t.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts#L392",children:"packages/isaacscript-common/src/interfaces/CustomStageTSConfig.ts:392"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},71184:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var n=s(14041);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);