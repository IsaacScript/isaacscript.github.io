"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[46845],{94115:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>a,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var d=i(31085),t=i(71184);const r={custom_edit_url:null},s="Level Grid",l={id:"isaacscript-common/functions/levelGrid",title:"Level Grid",description:"These functions have to do with the room grid index for the level (i.e. the position that the",source:"@site/docs/isaacscript-common/functions/levelGrid.md",sourceDirName:"isaacscript-common/functions",slug:"/isaacscript-common/functions/levelGrid",permalink:"/isaacscript-common/functions/levelGrid",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Level",permalink:"/isaacscript-common/functions/level"},next:{title:"Log",permalink:"/isaacscript-common/functions/log"}},o={},c=[{value:"Functions",id:"functions",level:2},{value:"getAdjacentExistingRoomGridIndexes",id:"getadjacentexistingroomgridindexes",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getAdjacentNonExistingRoomGridIndexes",id:"getadjacentnonexistingroomgridindexes",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getAdjacentRoomGridIndexes",id:"getadjacentroomgridindexes",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getAllRoomGridIndexes",id:"getallroomgridindexes",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getNewRoomCandidate",id:"getnewroomcandidate",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getNewRoomCandidatesBesideRoom",id:"getnewroomcandidatesbesideroom",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getNewRoomCandidatesForLevel",id:"getnewroomcandidatesforlevel",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"getRoomAdjacentGridIndexes",id:"getroomadjacentgridindexes",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"getRoomDescriptorsForType",id:"getroomdescriptorsfortype",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"getRoomGridIndexesForType",id:"getroomgridindexesfortype",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getRoomShapeAdjacentExistingGridIndexes",id:"getroomshapeadjacentexistinggridindexes",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getRoomShapeAdjacentGridIndexDeltas",id:"getroomshapeadjacentgridindexdeltas",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"getRoomShapeAdjacentGridIndexes",id:"getroomshapeadjacentgridindexes",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"getRoomShapeAdjacentNonExistingGridIndexes",id:"getroomshapeadjacentnonexistinggridindexes",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"inGrid",id:"ingrid",level:3},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"inRedKeyRoom",id:"inredkeyroom",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"isDeadEnd",id:"isdeadend",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"isDoorSlotValidAtGridIndex",id:"isdoorslotvalidatgridindex",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"isDoorSlotValidAtGridIndexForRedRoom",id:"isdoorslotvalidatgridindexforredroom",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"isRedKeyRoom",id:"isredkeyroom",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"isRoomInsideGrid",id:"isroominsidegrid",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"newRoom",id:"newroom",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"roomExists",id:"roomexists",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"roomGridIndexToVector",id:"roomgridindextovector",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"vectorToRoomGridIndex",id:"vectortoroomgridindex",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-24",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h1,{id:"level-grid",children:"Level Grid"}),"\n",(0,d.jsx)(n.p,{children:"These functions have to do with the room grid index for the level (i.e. the position that the\nroom is on the grid that represents the map for the level)."}),"\n",(0,d.jsx)(n.p,{children:'For functions having to do with the grid index inside of the room, see the "Room Grid" functions.'}),"\n",(0,d.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,d.jsx)(n.h3,{id:"getadjacentexistingroomgridindexes",children:"getAdjacentExistingRoomGridIndexes"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getAdjacentExistingRoomGridIndexes"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex?"}),"): readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get only the adjacent room grid indexes that exist (i.e. have room data)."}),"\n",(0,d.jsxs)(n.p,{children:["This is just a filtering of the results of the ",(0,d.jsx)(n.code,{children:"getAdjacentExistingRoomGridIndexes"})," function. See\nthat function for more information."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex?"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Default is the current room index."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:["readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L60",children:"packages/isaacscript-common/src/functions/levelGrid.ts:60"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getadjacentnonexistingroomgridindexes",children:"getAdjacentNonExistingRoomGridIndexes"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getAdjacentNonExistingRoomGridIndexes"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex?"}),"): readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get only the adjacent room grid indexes that do not exist (i.e. do not have\nroom data)."}),"\n",(0,d.jsxs)(n.p,{children:["This is just a filtering of the results of the ",(0,d.jsx)(n.code,{children:"getAdjacentExistingRoomGridIndexes"})," function. See\nthat function for more information."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex?"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:["readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L76",children:"packages/isaacscript-common/src/functions/levelGrid.ts:76"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getadjacentroomgridindexes",children:"getAdjacentRoomGridIndexes"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getAdjacentRoomGridIndexes"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex?"}),"): readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get all of the room grid indexes that are adjacent to a given room grid index\n(even if those room grid indexes do not have any rooms in them)."}),"\n",(0,d.jsx)(n.p,{children:"Adjacent room grid indexes that are outside of the grid will not be included in the returned\narray."}),"\n",(0,d.jsx)(n.p,{children:"If a room grid index is provided that is outside of the grid, then an empty array will be\nreturned."}),"\n",(0,d.jsx)(n.p,{children:"Note that this function does not take the shape of the room into account; it only looks at a\nsingle room grid index."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex?"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Default is the current room index."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:["readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L100",children:"packages/isaacscript-common/src/functions/levelGrid.ts:100"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getallroomgridindexes",children:"getAllRoomGridIndexes"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getAllRoomGridIndexes"}),"(): readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get the room safe grid index for every room on the entire floor. This includes\noff-grid rooms, such as the Devil Room."}),"\n",(0,d.jsx)(n.p,{children:"Rooms without any data are assumed to be non-existent and are not included."}),"\n",(0,d.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:["readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L124",children:"packages/isaacscript-common/src/functions/levelGrid.ts:124"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnewroomcandidate",children:"getNewRoomCandidate"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getNewRoomCandidate"}),"(",(0,d.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,d.jsx)(n.code,{children:"ensureDeadEnd?"}),"): { ",(0,d.jsx)(n.code,{children:"adjacentRoomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"})," ; ",(0,d.jsx)(n.code,{children:"doorSlot"}),": ",(0,d.jsx)(n.code,{children:"DoorSlot"})," ; ",(0,d.jsx)(n.code,{children:"newRoomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"}),"  } | ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to pick a random valid spot on the floor to insert a brand new room. Note that\nsome floors will not have any valid spots. If this is the case, this function will return\nundefined."}),"\n",(0,d.jsxs)(n.p,{children:["If you want to get an unseeded room, you must explicitly pass ",(0,d.jsx)(n.code,{children:"undefined"})," to the ",(0,d.jsx)(n.code,{children:"seedOrRNG"}),"\nparameter."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"seedOrRNG"})}),(0,d.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"RNG"})," | ",(0,d.jsx)(n.code,{children:"Seed"})]}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,d.jsx)(n.code,{children:"Seed"})," or ",(0,d.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,d.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,d.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,d.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"ensureDeadEnd"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Whether to pick a valid dead end attached to a normal room. If false, the function will randomly pick from any valid location that would have a red door."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:["{ ",(0,d.jsx)(n.code,{children:"adjacentRoomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"})," ; ",(0,d.jsx)(n.code,{children:"doorSlot"}),": ",(0,d.jsx)(n.code,{children:"DoorSlot"})," ; ",(0,d.jsx)(n.code,{children:"newRoomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"}),"  } | ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n",(0,d.jsxs)(n.p,{children:["Either a tuple of adjacent room grid index, ",(0,d.jsx)(n.code,{children:"DoorSlot"}),", and new room grid index, or\nundefined."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L146",children:"packages/isaacscript-common/src/functions/levelGrid.ts:146"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnewroomcandidatesbesideroom",children:"getNewRoomCandidatesBesideRoom"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getNewRoomCandidatesBesideRoom"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex?"}),", ",(0,d.jsx)(n.code,{children:"ensureDeadEnd?"}),"): ",(0,d.jsx)(n.code,{children:"ReadonlyArray"}),"<{ ",(0,d.jsx)(n.code,{children:"doorSlot"}),": ",(0,d.jsx)(n.code,{children:"DoorSlot"})," ; ",(0,d.jsx)(n.code,{children:"roomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"}),"  }>"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to iterate through the possible doors for a room and see if any of them would be\na valid spot to insert a brand new room on the floor."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex?"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Default is the current room index."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"ensureDeadEnd"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Whether to only include doors that lead to a valid dead end attached to a normal room. If false, the function will include all doors that would have a red door."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"ReadonlyArray"}),"<{ ",(0,d.jsx)(n.code,{children:"doorSlot"}),": ",(0,d.jsx)(n.code,{children:"DoorSlot"})," ; ",(0,d.jsx)(n.code,{children:"roomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"}),"  }>"]}),"\n",(0,d.jsxs)(n.p,{children:["A array of tuples of ",(0,d.jsx)(n.code,{children:"DoorSlot"})," and room grid index."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L174",children:"packages/isaacscript-common/src/functions/levelGrid.ts:174"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getnewroomcandidatesforlevel",children:"getNewRoomCandidatesForLevel"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getNewRoomCandidatesForLevel"}),"(",(0,d.jsx)(n.code,{children:"ensureDeadEnd?"}),"): ",(0,d.jsx)(n.code,{children:"ReadonlyArray"}),"<{ ",(0,d.jsx)(n.code,{children:"adjacentRoomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"})," ; ",(0,d.jsx)(n.code,{children:"doorSlot"}),": ",(0,d.jsx)(n.code,{children:"DoorSlot"})," ; ",(0,d.jsx)(n.code,{children:"newRoomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"}),"  }>"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get all of the spots on the floor to insert a brand new room."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"ensureDeadEnd"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Whether to only include spots that are a valid dead end attached to a normal room. If false, the function will include all valid spots that have a red door."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"ReadonlyArray"}),"<{ ",(0,d.jsx)(n.code,{children:"adjacentRoomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"})," ; ",(0,d.jsx)(n.code,{children:"doorSlot"}),": ",(0,d.jsx)(n.code,{children:"DoorSlot"})," ; ",(0,d.jsx)(n.code,{children:"newRoomGridIndex"}),": ",(0,d.jsx)(n.code,{children:"int"}),"  }>"]}),"\n",(0,d.jsxs)(n.p,{children:["A array of tuples containing the adjacent room grid index, the ",(0,d.jsx)(n.code,{children:"DoorSlot"}),", and the new\nroom grid index."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L237",children:"packages/isaacscript-common/src/functions/levelGrid.ts:237"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getroomadjacentgridindexes",children:"getRoomAdjacentGridIndexes"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getRoomAdjacentGridIndexes"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex?"}),"): ",(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get the grid indexes of all the rooms connected to the given room index,\ntaking the shape of the room into account. (This will only include rooms with valid data.)"}),"\n",(0,d.jsx)(n.p,{children:"Returns an empty map if the provided room grid index is out of bounds or has no associated room\ndata."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex?"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Default is the current room index."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsxs)(n.p,{children:["A map of ",(0,d.jsx)(n.code,{children:"DoorSlot"})," to the corresponding room grid index."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L291",children:"packages/isaacscript-common/src/functions/levelGrid.ts:291"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getroomdescriptorsfortype",children:"getRoomDescriptorsForType"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getRoomDescriptorsForType"}),"(",(0,d.jsx)(n.code,{children:"...roomTypes"}),"): readonly ",(0,d.jsx)(n.code,{children:"RoomDescriptor"}),"[]"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get an array of all of the room descriptors for rooms that match the specified\nroom type."}),"\n",(0,d.jsx)(n.p,{children:"This function only searches through rooms in the current dimension and rooms inside the grid."}),"\n",(0,d.jsx)(n.p,{children:"This function is variadic, meaning that you can specify N arguments to get the combined room\ndescriptors for N room types."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"...roomTypes"})}),(0,d.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,d.jsx)(n.code,{children:"RoomType"}),"[]"]})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:["readonly ",(0,d.jsx)(n.code,{children:"RoomDescriptor"}),"[]"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L320",children:"packages/isaacscript-common/src/functions/levelGrid.ts:320"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getroomgridindexesfortype",children:"getRoomGridIndexesForType"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getRoomGridIndexesForType"}),"(",(0,d.jsx)(n.code,{children:"...roomTypes"}),"): readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get an array of all of the safe grid indexes for rooms that match the\nspecified room type."}),"\n",(0,d.jsx)(n.p,{children:"This function only searches through rooms in the current dimension."}),"\n",(0,d.jsx)(n.p,{children:"This function is variadic, meaning that you can specify N arguments to get the combined grid\nindexes for N room types."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"...roomTypes"})}),(0,d.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,d.jsx)(n.code,{children:"RoomType"}),"[]"]})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:["readonly ",(0,d.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L342",children:"packages/isaacscript-common/src/functions/levelGrid.ts:342"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getroomshapeadjacentexistinggridindexes",children:"getRoomShapeAdjacentExistingGridIndexes"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getRoomShapeAdjacentExistingGridIndexes"}),"(",(0,d.jsx)(n.code,{children:"safeRoomGridIndex"}),", ",(0,d.jsx)(n.code,{children:"roomShape"}),"): ",(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get only the adjacent room grid indexes for a room shape that exist (i.e. have\nroom data)."}),"\n",(0,d.jsxs)(n.p,{children:["This is just a filtering of the results of the ",(0,d.jsx)(n.code,{children:"getRoomShapeAdjacentGridIndexes"})," function. See\nthat function for more information."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"safeRoomGridIndex"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomShape"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"RoomShape"})})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L356",children:"packages/isaacscript-common/src/functions/levelGrid.ts:356"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getroomshapeadjacentgridindexdeltas",children:"getRoomShapeAdjacentGridIndexDeltas"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getRoomShapeAdjacentGridIndexDeltas"}),"(",(0,d.jsx)(n.code,{children:"roomShape"}),"): ",(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get the room grid index delta that each hypothetical door in a given room\nshape would go to."}),"\n",(0,d.jsxs)(n.p,{children:["This is used by the ",(0,d.jsx)(n.code,{children:"getRoomShapeAdjacentGridIndexes"})," function."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomShape"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"RoomShape"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsxs)(n.p,{children:["A map of ",(0,d.jsx)(n.code,{children:"DoorSlot"})," to the corresponding room grid index delta."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L382",children:"packages/isaacscript-common/src/functions/levelGrid.ts:382"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getroomshapeadjacentgridindexes",children:"getRoomShapeAdjacentGridIndexes"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getRoomShapeAdjacentGridIndexes"}),"(",(0,d.jsx)(n.code,{children:"safeRoomGridIndex"}),", ",(0,d.jsx)(n.code,{children:"roomShape"}),"): ",(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get the room grid index that each hypothetical door in a given room shape\nwould go to. (This will not include room grid indexes that are outside of the grid.)"}),"\n",(0,d.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"safeRoomGridIndex"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"This must be the room safe grid index (i.e. the top-left room grid index for the respective room)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomShape"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"RoomShape"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"The shape of the hypothetical room."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsxs)(n.p,{children:["A map of ",(0,d.jsx)(n.code,{children:"DoorSlot"})," to the corresponding room grid index."]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L397",children:"packages/isaacscript-common/src/functions/levelGrid.ts:397"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"getroomshapeadjacentnonexistinggridindexes",children:"getRoomShapeAdjacentNonExistingGridIndexes"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"getRoomShapeAdjacentNonExistingGridIndexes"}),"(",(0,d.jsx)(n.code,{children:"safeRoomGridIndex"}),", ",(0,d.jsx)(n.code,{children:"roomShape"}),"): ",(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get only the adjacent room grid indexes for a room shape that do not exist\n(i.e. do not have room data)."}),"\n",(0,d.jsxs)(n.p,{children:["This is just a filtering of the results of the ",(0,d.jsx)(n.code,{children:"getRoomShapeAdjacentGridIndexes"})," function. See\nthat function for more information."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"safeRoomGridIndex"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomShape"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"RoomShape"})})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"ReadonlyMap"}),"<",(0,d.jsx)(n.code,{children:"DoorSlot"}),", ",(0,d.jsx)(n.code,{children:"int"}),">"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L422",children:"packages/isaacscript-common/src/functions/levelGrid.ts:422"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"ingrid",children:"inGrid"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"inGrid"}),"(): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to determine if the current room grid index is inside of the normal 13x13 level\ngrid."}),"\n",(0,d.jsx)(n.p,{children:"For example, Devil Rooms and the Mega Satan room are not considered to be inside the grid."}),"\n",(0,d.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L446",children:"packages/isaacscript-common/src/functions/levelGrid.ts:446"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"inredkeyroom",children:"inRedKeyRoom"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"inRedKeyRoom"}),"(): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to detect if the current room was created by the Red Key item."}),"\n",(0,d.jsxs)(n.p,{children:["Under the hood, this checks for the ",(0,d.jsx)(n.code,{children:"RoomDescriptorFlag.FLAG_RED_ROOM"})," flag."]}),"\n",(0,d.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L456",children:"packages/isaacscript-common/src/functions/levelGrid.ts:456"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isdeadend",children:"isDeadEnd"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"isDeadEnd"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex?"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to check if the given room grid index is a dead end. Specifically, this is\ndefined as having only one adjacent room that exists."}),"\n",(0,d.jsx)(n.p,{children:"Note that this function does not take the shape of the room into account; it only looks at a\nsingle room grid index."}),"\n",(0,d.jsx)(n.p,{children:"This function does not care if the given room grid index actually exists, so you can use it to\ncheck if a hypothetical room would be a dead end."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex?"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Default is the current room index."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L473",children:"packages/isaacscript-common/src/functions/levelGrid.ts:473"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isdoorslotvalidatgridindex",children:"isDoorSlotValidAtGridIndex"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"isDoorSlotValidAtGridIndex"}),"(",(0,d.jsx)(n.code,{children:"doorSlot"}),", ",(0,d.jsx)(n.code,{children:"roomGridIndex"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"doorSlot"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"DoorSlot"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L480",children:"packages/isaacscript-common/src/functions/levelGrid.ts:480"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isdoorslotvalidatgridindexforredroom",children:"isDoorSlotValidAtGridIndexForRedRoom"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"isDoorSlotValidAtGridIndexForRedRoom"}),"(",(0,d.jsx)(n.code,{children:"doorSlot"}),", ",(0,d.jsx)(n.code,{children:"roomGridIndex"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"doorSlot"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"DoorSlot"})})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L488",children:"packages/isaacscript-common/src/functions/levelGrid.ts:488"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isredkeyroom",children:"isRedKeyRoom"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"isRedKeyRoom"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to detect if the provided room was created by the Red Key item."}),"\n",(0,d.jsxs)(n.p,{children:["Under the hood, this checks for the ",(0,d.jsx)(n.code,{children:"RoomDescriptorFlag.FLAG_RED_ROOM"})," flag."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Default is the current room index."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L521",children:"packages/isaacscript-common/src/functions/levelGrid.ts:521"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"isroominsidegrid",children:"isRoomInsideGrid"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"isRoomInsideGrid"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex?"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to determine if a given room grid index is inside of the normal 13x13 level grid."}),"\n",(0,d.jsx)(n.p,{children:"For example, Devil Rooms and the Mega Satan room are not considered to be inside the grid."}),"\n",(0,d.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex?"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Default is the current room index."})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L533",children:"packages/isaacscript-common/src/functions/levelGrid.ts:533"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"newroom",children:"newRoom"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"newRoom"}),"(",(0,d.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,d.jsx)(n.code,{children:"ensureDeadEnd?"}),", ",(0,d.jsx)(n.code,{children:"customRoomData?"}),"): ",(0,d.jsx)(n.code,{children:"int"})," | ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to generate a new room on the floor."}),"\n",(0,d.jsxs)(n.p,{children:["If you want to generate an unseeded room, you must explicitly pass ",(0,d.jsx)(n.code,{children:"undefined"})," to the ",(0,d.jsx)(n.code,{children:"seedOrRNG"}),"\nparameter."]}),"\n",(0,d.jsxs)(n.p,{children:["Under the hood, this function uses the ",(0,d.jsx)(n.code,{children:"Level.MakeRedRoomDoor"})," method to create the room."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"seedOrRNG"})}),(0,d.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,d.jsx)(n.code,{children:"undefined"})," | ",(0,d.jsx)(n.code,{children:"RNG"})," | ",(0,d.jsx)(n.code,{children:"Seed"})]}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,d.jsx)(n.code,{children:"Seed"})," or ",(0,d.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,d.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,d.jsx)(n.code,{children:"RNG.Next"})," method will be called. Default is ",(0,d.jsx)(n.code,{children:"Level.GetDungeonPlacementSeed"}),". Note that the RNG is only used to select the random location to put the room on the floor; it does not influence the randomly chosen room contents. (That is performed by the game and can not be manipulated prior to its generation.)"]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"ensureDeadEnd"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. Whether to place the room at a valid dead end attached to a normal room. If false, it will randomly appear at any valid location that would have a red door."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"customRoomData?"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"RoomConfig"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. By default, the newly created room will have data corresponding to the game's randomly generated red room. If you provide this function with room data, it will be used to override the vanilla data."})]})]})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"int"})," | ",(0,d.jsx)(n.code,{children:"undefined"})]}),"\n",(0,d.jsx)(n.p,{children:"The room grid index of the new room or undefined if the floor had no valid dead ends to\nplace a room."}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L563",children:"packages/isaacscript-common/src/functions/levelGrid.ts:563"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"roomexists",children:"roomExists"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"roomExists"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex"}),"): ",(0,d.jsx)(n.code,{children:"boolean"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to check if a room exists at the given room grid index. (A room will exist if it\nhas non-undefined data in the room descriptor.)"}),"\n",(0,d.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-22",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"boolean"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L628",children:"packages/isaacscript-common/src/functions/levelGrid.ts:628"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"roomgridindextovector",children:"roomGridIndexToVector"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"roomGridIndexToVector"}),"(",(0,d.jsx)(n.code,{children:"roomGridIndex"}),"): ",(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"Vector"}),">"]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to get the coordinates of a given room grid index. The floor is represented by a\n13x13 grid."}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Since the starting room is in the center, the starting room grid index of 84 is equal to\ncoordinates of (6, 6)."}),"\n",(0,d.jsx)(n.li,{children:"The top-left grid index of 0 is equal to coordinates of: (12, 0)"}),"\n",(0,d.jsx)(n.li,{children:"The top-right grid index of 12 is equal to coordinates of: (0, 0)"}),"\n",(0,d.jsx)(n.li,{children:"The bottom-left grid index of 156 is equal to coordinates of: (0, 12)"}),"\n",(0,d.jsx)(n.li,{children:"The bottom-right grid index of 168 is equal to coordinates of: (12, 12)"}),"\n"]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomGridIndex"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-23",children:"Returns"}),"\n",(0,d.jsxs)(n.p,{children:[(0,d.jsx)(n.code,{children:"Readonly"}),"<",(0,d.jsx)(n.code,{children:"Vector"}),">"]}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L644",children:"packages/isaacscript-common/src/functions/levelGrid.ts:644"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h3,{id:"vectortoroomgridindex",children:"vectorToRoomGridIndex"}),"\n",(0,d.jsxs)(n.p,{children:["\u25b8 ",(0,d.jsx)(n.strong,{children:"vectorToRoomGridIndex"}),"(",(0,d.jsx)(n.code,{children:"roomVector"}),"): ",(0,d.jsx)(n.code,{children:"int"})]}),"\n",(0,d.jsx)(n.p,{children:"Helper function to convert a room grid index expressed as a vector back into an integer."}),"\n",(0,d.jsxs)(n.p,{children:["Also see the ",(0,d.jsx)(n.code,{children:"roomGridIndexToVector"})," helper function."]}),"\n",(0,d.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,d.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,d.jsx)(n.tbody,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"roomVector"})}),(0,d.jsx)(n.td,{style:{textAlign:"left"},children:(0,d.jsx)(n.code,{children:"Vector"})})]})})]}),"\n",(0,d.jsx)(n.h4,{id:"returns-24",children:"Returns"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.code,{children:"int"})}),"\n",(0,d.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/levelGrid.ts#L656",children:"packages/isaacscript-common/src/functions/levelGrid.ts:656"})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>l});var d=i(14041);const t={},r=d.createContext(t);function s(e){const n=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),d.createElement(r.Provider,{value:n},e.children)}}}]);