"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[72669],{66383:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>x,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var l=s(31085),t=s(71184);const i={custom_edit_url:null},r="Flag",d={id:"isaacscript-common/functions/flag",title:"Flag",description:"Functions",source:"@site/docs/isaacscript-common/functions/flag.md",sourceDirName:"isaacscript-common/functions",slug:"/isaacscript-common/functions/flag",permalink:"/isaacscript-common/functions/flag",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Familiars",permalink:"/isaacscript-common/functions/familiars"},next:{title:"Frames",permalink:"/isaacscript-common/functions/frames"}},c={},a=[{value:"Functions",id:"functions",level:2},{value:"addFlag",id:"addflag",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"bitFlags",id:"bitflags",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getFlagName",id:"getflagname",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"hasFlag",id:"hasflag",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"isEmptyFlag",id:"isemptyflag",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"isSelfDamage",id:"isselfdamage",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"removeFlag",id:"removeflag",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"flag",children:"Flag"}),"\n",(0,l.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,l.jsx)(n.h3,{id:"addflag",children:"addFlag"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"addFlag"}),"<",(0,l.jsx)(n.code,{children:"T"}),">(",(0,l.jsx)(n.code,{children:"flags"}),", ",(0,l.jsx)(n.code,{children:"...flagsToAdd"}),"): ",(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to add a bit flag to an existing set of bit flags."}),"\n",(0,l.jsx)(n.p,{children:"This is a variadic function, so pass as many flags as you want to add."}),"\n",(0,l.jsx)(n.p,{children:"Example 1:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// Give the player spectral tears\nconst player = Isaac.GetPlayer();\nplayer.TearFlags = addFlag(player.TearFlags, TearFlags.TEAR_SPECTRAL);\n"})}),"\n",(0,l.jsx)(n.p,{children:"Example 2:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// Give the player spectral and homing tears\nconst player = Isaac.GetPlayer();\nplayer.TearFlags = addFlag(player.TearFlags, TearFlags.TEAR_SPECTRAL, TearFlags.TEAR_HOMING);\n"})}),"\n",(0,l.jsx)(n.h4,{id:"type-parameters",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"T"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,l.jsx)(n.code,{children:"BitFlag"})," | ",(0,l.jsx)(n.code,{children:"BitFlag128"})]})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"flags"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:"T"})," | ",(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The existing set of bit flags."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"...flagsToAdd"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,l.jsx)(n.code,{children:"T"}),"[]"]}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"One or more bit flags to add, each as a separate argument."})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,l.jsx)(n.p,{children:"The combined bit flags."}),"\n",(0,l.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/flag.ts#L29",children:"packages/isaacscript-common/src/functions/flag.ts:29"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"bitflags",children:"bitFlags"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"bitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">(",(0,l.jsx)(n.code,{children:"flag"}),"): ",(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,l.jsxs)(n.p,{children:["Helper function for casting a flag enum value to a ",(0,l.jsx)(n.code,{children:"BitFlags"})," object."]}),"\n",(0,l.jsxs)(n.p,{children:["This is useful because the compiler will prevent you from assigning a specific flag to a\n",(0,l.jsx)(n.code,{children:"BitFlags"})," field. (It does this to ensure type safety, since ",(0,l.jsx)(n.code,{children:"BitFlags"})," can represent a zero\nvalue or a composition of N flags.)"]}),"\n",(0,l.jsx)(n.p,{children:"For example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"player.TearFlags = bitFlags(TearFlag.SPECTRAL);\n"})}),"\n",(0,l.jsx)(n.h4,{id:"type-parameters-1",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"T"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,l.jsx)(n.code,{children:"BitFlag"})," | ",(0,l.jsx)(n.code,{children:"BitFlag128"})]})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"flag"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"T"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/flag.ts#L55",children:"packages/isaacscript-common/src/functions/flag.ts:55"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getflagname",children:"getFlagName"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getFlagName"}),"<",(0,l.jsx)(n.code,{children:"T"}),">(",(0,l.jsx)(n.code,{children:"flag"}),", ",(0,l.jsx)(n.code,{children:"flagEnum"}),"): ",(0,l.jsx)(n.code,{children:"string"})," | ",(0,l.jsx)(n.code,{children:"undefined"})]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to get the key associated with a particular flag."}),"\n",(0,l.jsx)(n.p,{children:"(Since bit flags are represented by custom objects instead of normal TypeScript enums, you cannot\nuse the reverse mapping to find the associated key of a given enum value. Use this helper\nfunction instead of indexing the enum directly.)"}),"\n",(0,l.jsx)(n.h4,{id:"type-parameters-2",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"T"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,l.jsx)(n.code,{children:"BitFlag"})," | ",(0,l.jsx)(n.code,{children:"BitFlag128"})]})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"flag"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"BitFlag"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"flagEnum"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:"Readonly"}),"<",(0,l.jsx)(n.code,{children:"Record"}),"<",(0,l.jsx)(n.code,{children:"string"}),", ",(0,l.jsx)(n.code,{children:"T"}),">>"]})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"string"})," | ",(0,l.jsx)(n.code,{children:"undefined"})]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/flag.ts#L66",children:"packages/isaacscript-common/src/functions/flag.ts:66"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"hasflag",children:"hasFlag"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"hasFlag"}),"<",(0,l.jsx)(n.code,{children:"T"}),">(",(0,l.jsx)(n.code,{children:"flags"}),", ",(0,l.jsx)(n.code,{children:"...flagsToCheck"}),"): ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to determine if a particular bit flag is set to true."}),"\n",(0,l.jsx)(n.p,{children:"This is a variadic function, so pass as many flags as you want to check for. If passed multiple\nflags, it will only return true if all of the flags are set."}),"\n",(0,l.jsx)(n.p,{children:"For example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"const player = Isaac.GetPlayer();\nif (hasFlag(player.TearFlags, TearFlags.TEAR_SPECTRAL) {\n  // The player currently has spectral tears\n}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"type-parameters-3",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"T"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,l.jsx)(n.code,{children:"BitFlag"})," | ",(0,l.jsx)(n.code,{children:"BitFlag128"})]})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"flags"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:"T"})," | ",(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The existing set of bit flags."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"...flagsToCheck"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,l.jsx)(n.code,{children:"T"}),"[]"]}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"One or more bit flags to check for, each as a separate argument."})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/flag.ts#L97",children:"packages/isaacscript-common/src/functions/flag.ts:97"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"isemptyflag",children:"isEmptyFlag"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"isEmptyFlag"}),"<",(0,l.jsx)(n.code,{children:"T"}),">(",(0,l.jsx)(n.code,{children:"flag"}),"): ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to check if every bit in the flag is turned off."}),"\n",(0,l.jsx)(n.p,{children:"(This is equivalent to checking if the flag is equal to 0, but this is not possible without\ncasting the flag to a number.)"}),"\n",(0,l.jsx)(n.h4,{id:"type-parameters-4",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"T"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,l.jsx)(n.code,{children:"BitFlag"})," | ",(0,l.jsx)(n.code,{children:"BitFlag128"})]})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"flag"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"T"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/flag.ts#L118",children:"packages/isaacscript-common/src/functions/flag.ts:118"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"isselfdamage",children:"isSelfDamage"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"isSelfDamage"}),"(",(0,l.jsx)(n.code,{children:"damageFlags"}),"): ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsxs)(n.p,{children:["Helper function to determine whether damage to a player in the ",(0,l.jsx)(n.code,{children:"ENTITY_TAKE_DMG"})," callback was\nself-inflicted. For example, damage from a Curse Room door, a Razor, or a Blood Donation Machine\nwould count as self-inflicted damage."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"damageFlags"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:"DamageFlagValue"})," | ",(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"DamageFlagValue"}),">"]})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/flag.ts#L127",children:"packages/isaacscript-common/src/functions/flag.ts:127"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"removeflag",children:"removeFlag"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"removeFlag"}),"<",(0,l.jsx)(n.code,{children:"T"}),">(",(0,l.jsx)(n.code,{children:"flags"}),", ",(0,l.jsx)(n.code,{children:"...flagsToRemove"}),"): ",(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to remove a bit flag from an existing set of bit flags."}),"\n",(0,l.jsx)(n.p,{children:"This is a variadic function, so pass as many flags as you want to remove."}),"\n",(0,l.jsx)(n.p,{children:"For example:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"// Remove spectral tears from the player, if present\nconst player = Isaac.GetPlayer();\nplayer.TearFlags = removeFlag(player.TearFlags, TearFlags.TEAR_SPECTRAL);\n"})}),"\n",(0,l.jsx)(n.h4,{id:"type-parameters-5",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"T"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,l.jsx)(n.code,{children:"BitFlag"})," | ",(0,l.jsx)(n.code,{children:"BitFlag128"})]})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"flags"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,l.jsx)(n.code,{children:"T"})," | ",(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"The existing set of bit flags."})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"...flagsToRemove"})}),(0,l.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,l.jsx)(n.code,{children:"T"}),"[]"]}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:"One or more bit flags to remove, each as a separate argument."})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"BitFlags"}),"<",(0,l.jsx)(n.code,{children:"T"}),">"]}),"\n",(0,l.jsx)(n.p,{children:"The combined bit flags."}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/flag.ts#L155",children:"packages/isaacscript-common/src/functions/flag.ts:155"})})]})}function x(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var l=s(14041);const t={},i=l.createContext(t);function r(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);