"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[39907],{38486:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>o,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var l=t(31085),r=t(71184);const s={custom_edit_url:null},a="Player Health",i={id:"isaacscript-common/functions/playerHealth",title:"Player Health",description:"Functions",source:"@site/docs/isaacscript-common/functions/playerHealth.md",sourceDirName:"isaacscript-common/functions",slug:"/isaacscript-common/functions/playerHealth",permalink:"/isaacscript-common/functions/playerHealth",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Player Effects",permalink:"/isaacscript-common/functions/playerEffects"},next:{title:"Player Index",permalink:"/isaacscript-common/functions/playerIndex"}},c={},d=[{value:"Functions",id:"functions",level:2},{value:"addPlayerHealthType",id:"addplayerhealthtype",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"canPickEternalHearts",id:"canpicketernalhearts",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"doesPlayerHaveAllBlackHearts",id:"doesplayerhaveallblackhearts",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"doesPlayerHaveAllSoulHearts",id:"doesplayerhaveallsoulhearts",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getPlayerAvailableHeartSlots",id:"getplayeravailableheartslots",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getPlayerBlackHearts",id:"getplayerblackhearts",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getPlayerHealth",id:"getplayerhealth",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"getPlayerHealthType",id:"getplayerhealthtype",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"getPlayerHearts",id:"getplayerhearts",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"getPlayerLastHeart",id:"getplayerlastheart",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getPlayerMaxHeartContainers",id:"getplayermaxheartcontainers",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getPlayerSoulHearts",id:"getplayersoulhearts",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"getTaintedMagdaleneNonTemporaryMaxHearts",id:"gettaintedmagdalenenontemporarymaxhearts",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"newPlayerHealth",id:"newplayerhealth",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"playerConvertBlackHeartsToSoulHearts",id:"playerconvertblackheartstosoulhearts",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"playerConvertSoulHeartsToBlackHearts",id:"playerconvertsoulheartstoblackhearts",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"playerHasHealthLeft",id:"playerhashealthleft",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"removeAllPlayerHealth",id:"removeallplayerhealth",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"setPlayerHealth",id:"setplayerhealth",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"wouldDamageTaintedMagdaleneNonTemporaryHeartContainers",id:"woulddamagetaintedmagdalenenontemporaryheartcontainers",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-19",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"player-health",children:"Player Health"}),"\n",(0,l.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,l.jsx)(n.h3,{id:"addplayerhealthtype",children:"addPlayerHealthType"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"addPlayerHealthType"}),"(",(0,l.jsx)(n.code,{children:"player"}),", ",(0,l.jsx)(n.code,{children:"healthType"}),", ",(0,l.jsx)(n.code,{children:"numHearts"}),"): ",(0,l.jsx)(n.code,{children:"void"})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"healthType"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.a,{href:"/isaacscript-common/other/enums/HealthType",children:(0,l.jsx)(n.code,{children:"HealthType"})})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"numHearts"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"int"})})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"void"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L18",children:"packages/isaacscript-common/src/functions/playerHealth.ts:18"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"canpicketernalhearts",children:"canPickEternalHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"canPickEternalHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to see if the provided player can pick up an eternal heart. (If a player already\nhas an eternal heart and full heart containers, they are not able to pick up any additional\neternal hearts.)"}),"\n",(0,l.jsxs)(n.p,{children:["This function's name matches the existing ",(0,l.jsx)(n.code,{children:"EntityPlayer"})," methods."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L78",children:"packages/isaacscript-common/src/functions/playerHealth.ts:78"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"doesplayerhaveallblackhearts",children:"doesPlayerHaveAllBlackHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"doesPlayerHaveAllBlackHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns whether all of the player's soul-heart-type hearts are black hearts."}),"\n",(0,l.jsx)(n.p,{children:"Note that this function does not consider red heart containers."}),"\n",(0,l.jsx)(n.p,{children:"For example:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If the player has one black heart, this function would return true."}),"\n",(0,l.jsx)(n.li,{children:"If the player has one soul heart and two black hearts, this function would return false."}),"\n",(0,l.jsx)(n.li,{children:"If the player has no black hearts, this function will return false."}),"\n",(0,l.jsx)(n.li,{children:"If the player has one red heart container and three black hearts, this function would return\ntrue."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L99",children:"packages/isaacscript-common/src/functions/playerHealth.ts:99"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"doesplayerhaveallsoulhearts",children:"doesPlayerHaveAllSoulHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"doesPlayerHaveAllSoulHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns whether all of the player's soul-heart-type hearts are soul hearts."}),"\n",(0,l.jsx)(n.p,{children:"Note that this function does not consider red heart containers."}),"\n",(0,l.jsx)(n.p,{children:"For example:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"If the player has two soul hearts and one black heart, this function would return false."}),"\n",(0,l.jsx)(n.li,{children:"If the player has no soul hearts, this function will return false."}),"\n",(0,l.jsx)(n.li,{children:"If the player has one red heart container and three soul hearts, this function would return\ntrue."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L118",children:"packages/isaacscript-common/src/functions/playerHealth.ts:118"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getplayeravailableheartslots",children:"getPlayerAvailableHeartSlots"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getPlayerAvailableHeartSlots"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"int"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns the number of slots that the player has remaining for new heart containers, accounting\nfor broken hearts. For example, if the player is Judas and has 1 red heart containers and 2 full\nsoul hearts and 3 broken hearts, then this function would return 6 (i.e. 12 - 1 - 2 - 3)."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"int"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L130",children:"packages/isaacscript-common/src/functions/playerHealth.ts:130"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getplayerblackhearts",children:"getPlayerBlackHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getPlayerBlackHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"int"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns the number of black hearts that the player has, excluding any soul hearts. For example,\nif the player has one full black heart, one full soul heart, and one half black heart, this\nfunction returns 3."}),"\n",(0,l.jsxs)(n.p,{children:["This is different from the ",(0,l.jsx)(n.code,{children:"EntityPlayer.GetBlackHearts"})," method, since that returns a bitmask."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"int"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L151",children:"packages/isaacscript-common/src/functions/playerHealth.ts:151"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getplayerhealth",children:"getPlayerHealth"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getPlayerHealth"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"Readonly"}),"<",(0,l.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/PlayerHealth",children:(0,l.jsx)(n.code,{children:"PlayerHealth"})}),">"]}),"\n",(0,l.jsxs)(n.p,{children:["Helper function to get an object representing the player's health. You can use this in\ncombination with the ",(0,l.jsx)(n.code,{children:"setPlayerHealth"})," function to restore the player's health back to a certain\nconfiguration at a later time."]}),"\n",(0,l.jsxs)(n.p,{children:["This is based on the ",(0,l.jsx)(n.code,{children:"REVEL.StoreHealth"})," function in the Revelations mod."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"Readonly"}),"<",(0,l.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/PlayerHealth",children:(0,l.jsx)(n.code,{children:"PlayerHealth"})}),">"]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L165",children:"packages/isaacscript-common/src/functions/playerHealth.ts:165"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getplayerhealthtype",children:"getPlayerHealthType"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getPlayerHealthType"}),"(",(0,l.jsx)(n.code,{children:"player"}),", ",(0,l.jsx)(n.code,{children:"healthType"}),"): ",(0,l.jsx)(n.code,{children:"int"})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"healthType"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.a,{href:"/isaacscript-common/other/enums/HealthType",children:(0,l.jsx)(n.code,{children:"HealthType"})})})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"int"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L242",children:"packages/isaacscript-common/src/functions/playerHealth.ts:242"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getplayerhearts",children:"getPlayerHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getPlayerHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"int"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns the number of red hearts that the player has, excluding any rotten hearts. For example,\nif the player has one full black heart, one full soul heart, and one half black heart, this\nfunction returns 3."}),"\n",(0,l.jsxs)(n.p,{children:["This is different from the ",(0,l.jsx)(n.code,{children:"EntityPlayer.GetHearts"})," method, since that returns a value that\nincludes rotten hearts."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"int"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L306",children:"packages/isaacscript-common/src/functions/playerHealth.ts:306"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getplayerlastheart",children:"getPlayerLastHeart"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getPlayerLastHeart"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.a,{href:"/isaacscript-common/other/enums/HealthType",children:(0,l.jsx)(n.code,{children:"HealthType"})})]}),"\n",(0,l.jsx)(n.p,{children:"Helper function that returns the type of the rightmost heart. This does not including golden\nhearts or broken hearts, since they cannot be damaged directly."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"/isaacscript-common/other/enums/HealthType",children:(0,l.jsx)(n.code,{children:"HealthType"})})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L317",children:"packages/isaacscript-common/src/functions/playerHealth.ts:317"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getplayermaxheartcontainers",children:"getPlayerMaxHeartContainers"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getPlayerMaxHeartContainers"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"int"})]}),"\n",(0,l.jsxs)(n.p,{children:["Returns the maximum heart containers that the provided player can have. Normally, this is 12, but\nit can change depending on the character (e.g. Keeper) and other things (e.g. Mother's Kiss).\nThis function does not account for Broken Hearts; use the ",(0,l.jsx)(n.code,{children:"getPlayerAvailableHeartSlots"})," helper\nfunction for that."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"int"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L377",children:"packages/isaacscript-common/src/functions/playerHealth.ts:377"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"getplayersoulhearts",children:"getPlayerSoulHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getPlayerSoulHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"int"})]}),"\n",(0,l.jsx)(n.p,{children:"Returns the number of soul hearts that the player has, excluding any black hearts. For example,\nif the player has one full black heart, one full soul heart, and one half black heart, this\nfunction returns 2."}),"\n",(0,l.jsxs)(n.p,{children:["This is different from the ",(0,l.jsx)(n.code,{children:"EntityPlayer.GetSoulHearts"})," method, since that returns the combined\nnumber of soul hearts and black hearts."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"int"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L424",children:"packages/isaacscript-common/src/functions/playerHealth.ts:424"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"gettaintedmagdalenenontemporarymaxhearts",children:"getTaintedMagdaleneNonTemporaryMaxHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"getTaintedMagdaleneNonTemporaryMaxHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"int"})]}),"\n",(0,l.jsxs)(n.p,{children:["Helper function to determine how many heart containers that Tainted Magdalene has that will not\nbe automatically depleted over time. By default, this is 2, but this function will return 4 so\nthat it is consistent with the ",(0,l.jsx)(n.code,{children:"player.GetHearts"})," and ",(0,l.jsx)(n.code,{children:"player.GetMaxHearts"})," methods."]}),"\n",(0,l.jsx)(n.p,{children:"If Tainted Magdalene has Birthright, she will gained an additional non-temporary heart container."}),"\n",(0,l.jsx)(n.p,{children:"This function does not validate whether the provided player is Tainted Magdalene; that should be\naccomplished before invoking this function."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"int"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L441",children:"packages/isaacscript-common/src/functions/playerHealth.ts:441"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"newplayerhealth",children:"newPlayerHealth"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"newPlayerHealth"}),"(): ",(0,l.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/PlayerHealth",children:(0,l.jsx)(n.code,{children:"PlayerHealth"})})]}),"\n",(0,l.jsxs)(n.p,{children:["Returns a ",(0,l.jsx)(n.code,{children:"PlayerHealth"})," object with all zeros."]}),"\n",(0,l.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/PlayerHealth",children:(0,l.jsx)(n.code,{children:"PlayerHealth"})})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L452",children:"packages/isaacscript-common/src/functions/playerHealth.ts:452"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"playerconvertblackheartstosoulhearts",children:"playerConvertBlackHeartsToSoulHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"playerConvertBlackHeartsToSoulHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"void"})]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to remove all of a player's black hearts and add the corresponding amount of soul\nhearts."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"void"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L472",children:"packages/isaacscript-common/src/functions/playerHealth.ts:472"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"playerconvertsoulheartstoblackhearts",children:"playerConvertSoulHeartsToBlackHearts"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"playerConvertSoulHeartsToBlackHearts"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"void"})]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to remove all of a player's soul hearts and add the corresponding amount of black\nhearts."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"void"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L494",children:"packages/isaacscript-common/src/functions/playerHealth.ts:494"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"playerhashealthleft",children:"playerHasHealthLeft"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"playerHasHealthLeft"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:"Helper function to see if the player is out of health."}),"\n",(0,l.jsx)(n.p,{children:"Specifically, this function will return false if the player has 0 red hearts, 0 soul/black\nhearts, and 0 bone hearts."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L518",children:"packages/isaacscript-common/src/functions/playerHealth.ts:518"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"removeallplayerhealth",children:"removeAllPlayerHealth"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"removeAllPlayerHealth"}),"(",(0,l.jsx)(n.code,{children:"player"}),"): ",(0,l.jsx)(n.code,{children:"void"})]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]})})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"void"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L526",children:"packages/isaacscript-common/src/functions/playerHealth.ts:526"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"setplayerhealth",children:"setPlayerHealth"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"setPlayerHealth"}),"(",(0,l.jsx)(n.code,{children:"player"}),", ",(0,l.jsx)(n.code,{children:"playerHealth"}),"): ",(0,l.jsx)(n.code,{children:"void"})]}),"\n",(0,l.jsxs)(n.p,{children:["Helper function to set a player's health to a specific state. You can use this in combination\nwith the ",(0,l.jsx)(n.code,{children:"getPlayerHealth"})," function to restore the player's health back to a certain\nconfiguration at a later time."]}),"\n",(0,l.jsxs)(n.p,{children:["Based on the ",(0,l.jsx)(n.code,{children:"REVEL.LoadHealth"})," function in the Revelations mod."]}),"\n",(0,l.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"playerHealth"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/PlayerHealth",children:(0,l.jsx)(n.code,{children:"PlayerHealth"})})})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"void"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L559",children:"packages/isaacscript-common/src/functions/playerHealth.ts:559"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"woulddamagetaintedmagdalenenontemporaryheartcontainers",children:"wouldDamageTaintedMagdaleneNonTemporaryHeartContainers"}),"\n",(0,l.jsxs)(n.p,{children:["\u25b8 ",(0,l.jsx)(n.strong,{children:"wouldDamageTaintedMagdaleneNonTemporaryHeartContainers"}),"(",(0,l.jsx)(n.code,{children:"player"}),", ",(0,l.jsx)(n.code,{children:"damageAmount"}),"): ",(0,l.jsx)(n.code,{children:"boolean"})]}),"\n",(0,l.jsx)(n.p,{children:'Helper function to see if a certain damage amount would deal "permanent" damage to Tainted\nMagdalene.'}),"\n",(0,l.jsx)(n.p,{children:'Tainted Magdalene has "permanent" health and "temporary" health. When standing still and doing\nnothing, all of Tainted Magdalene\'s temporary health will eventually go away.'}),"\n",(0,l.jsx)(n.p,{children:"Before using this function, it is expected that you check to see if the player is Tainted\nMagdalene first, or else it will give a nonsensical result."}),"\n",(0,l.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,l.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"player"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"EntityPlayer"})})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"damageAmount"})}),(0,l.jsx)(n.td,{style:{textAlign:"left"},children:(0,l.jsx)(n.code,{children:"float"})})]})]})]}),"\n",(0,l.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"boolean"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/playerHealth.ts#L695",children:"packages/isaacscript-common/src/functions/playerHealth.ts:695"})})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var l=t(14041);const r={},s=l.createContext(r);function a(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);