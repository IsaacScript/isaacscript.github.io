"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[66224],{4959:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=n(31085),t=n(71184);const r={custom_edit_url:null},i="JSONRoomsFile",c={id:"isaacscript-common/other/interfaces/JSONRoomsFile",title:"JSONRoomsFile",description:"The standard library has the feature to deploy a new room on-the-fly with the deployJSONRoom",source:"@site/docs/isaacscript-common/other/interfaces/JSONRoomsFile.md",sourceDirName:"isaacscript-common/other/interfaces",slug:"/isaacscript-common/other/interfaces/JSONRoomsFile",permalink:"/isaacscript-common/other/interfaces/JSONRoomsFile",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"JSONRooms",permalink:"/isaacscript-common/other/interfaces/JSONRooms"},next:{title:"JSONSpawn",permalink:"/isaacscript-common/other/interfaces/JSONSpawn"}},a={},l=[{value:"Properties",id:"properties",level:2},{value:"rooms",id:"rooms",level:3},{value:"Defined in",id:"defined-in",level:4}];function m(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.h1,{id:"jsonroomsfile",children:"JSONRoomsFile"}),"\n",(0,s.jsxs)(o.p,{children:["The standard library has the feature to deploy a new room on-the-fly with the ",(0,s.jsx)(o.code,{children:"deployJSONRoom"}),"\nhelper function. It requires a ",(0,s.jsx)(o.code,{children:"JSONRoomsFile"})," as an argument, which is simply an XML file\nconverted to JSON. (You can create XML room files using the Basement Renovator program.)"]}),"\n",(0,s.jsx)(o.p,{children:"You can convert your XML files using the following command:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-sh",children:"npx convert-xml-to-json foo.xml foo.json\n"})}),"\n",(0,s.jsxs)(o.p,{children:["Note that the custom stages feature of the standard library uses real XML/STB files, not JSON\nrooms, so you would only need to do this if you are using the ",(0,s.jsx)(o.code,{children:"deployJSONRoom"})," command\nspecifically."]}),"\n",(0,s.jsx)(o.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(o.h3,{id:"rooms",children:"rooms"}),"\n",(0,s.jsxs)(o.p,{children:["\u2022 ",(0,s.jsx)(o.strong,{children:"rooms"}),": ",(0,s.jsx)(o.a,{href:"/isaacscript-common/other/interfaces/JSONRooms",children:(0,s.jsx)(o.code,{children:"JSONRooms"})})]}),"\n",(0,s.jsx)(o.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/interfaces/JSONRoomsFile.ts#L17",children:"packages/isaacscript-common/src/interfaces/JSONRoomsFile.ts:17"})})]})}function d(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},71184:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>c});var s=n(14041);const t={},r=s.createContext(t);function i(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);