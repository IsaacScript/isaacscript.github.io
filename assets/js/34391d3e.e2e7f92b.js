"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[90885],{45120:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var t=i(31085),c=i(71184);const s={custom_edit_url:null},r="PickupIndex",o={id:"isaacscript-common/other/types/PickupIndex",title:"PickupIndex",description:"Type Aliases",source:"@site/docs/isaacscript-common/other/types/PickupIndex.md",sourceDirName:"isaacscript-common/other/types",slug:"/isaacscript-common/other/types/PickupIndex",permalink:"/isaacscript-common/other/types/PickupIndex",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"PickingUpItem",permalink:"/isaacscript-common/other/types/PickingUpItem"},next:{title:"PlayerIndex",permalink:"/isaacscript-common/other/types/PlayerIndex"}},p={},a=[{value:"Type Aliases",id:"type-aliases",level:2},{value:"PickupIndex",id:"pickupindex-1",level:3},{value:"Defined in",id:"defined-in",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"pickupindex",children:"PickupIndex"}),"\n",(0,t.jsx)(n.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,t.jsx)(n.h3,{id:"pickupindex-1",children:"PickupIndex"}),"\n",(0,t.jsxs)(n.p,{children:["\u01ac ",(0,t.jsx)(n.strong,{children:"PickupIndex"}),": ",(0,t.jsx)(n.code,{children:"int"})," & { ",(0,t.jsx)(n.code,{children:"__pickupIndexBrand"}),": ",(0,t.jsx)(n.code,{children:"symbol"}),"  }"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PickupIndex"})," is a specific type of number that represents a unique identifier for a pickup. Mods\ncan signify that data structures handle collectibles by using this type."]}),"\n",(0,t.jsxs)(n.p,{children:["For more information, see the documentation for the ",(0,t.jsx)(n.code,{children:"getPickupIndex"})," function."]}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"const pickupNameMap = new Map<PickupIndex, string>();\n"})}),"\n",(0,t.jsx)(n.p,{children:"This type is branded for extra type safety."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/types/PickupIndex.ts#L15",children:"packages/isaacscript-common/src/types/PickupIndex.ts:15"})})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(14041);const c={},s=t.createContext(c);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);