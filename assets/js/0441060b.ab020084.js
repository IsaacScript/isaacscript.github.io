"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[45850],{5962:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>o,frontMatter:()=>l,metadata:()=>d,toc:()=>a});var t=s(31085),i=s(71184);const l={custom_edit_url:null},r="Disable Inputs",d={id:"isaacscript-common/features/DisableInputs",title:"Disable Inputs",description:"Hierarchy",source:"@site/docs/isaacscript-common/features/DisableInputs.md",sourceDirName:"isaacscript-common/features",slug:"/isaacscript-common/features/DisableInputs",permalink:"/isaacscript-common/features/DisableInputs",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Disable All Sound",permalink:"/isaacscript-common/features/DisableAllSound"},next:{title:"Eden Starting Stats Health",permalink:"/isaacscript-common/features/EdenStartingStatsHealth"}},c={},a=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Methods",id:"methods",level:2},{value:"areInputsEnabled",id:"areinputsenabled",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"enableAllInputs",id:"enableallinputs",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"disableInputs",id:"disableinputs",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"disableAllInputs",id:"disableallinputs",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"enableAllInputsExceptFor",id:"enableallinputsexceptfor",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"disableAllInputsExceptFor",id:"disableallinputsexceptfor",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"disableMovementInputs",id:"disablemovementinputs",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"disableShootingInputs",id:"disableshootinginputs",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"disable-inputs",children:"Disable Inputs"}),"\n",(0,t.jsx)(n.h2,{id:"hierarchy",children:"Hierarchy"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Feature"})}),"\n",(0,t.jsxs)(n.p,{children:["\u21b3 ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"DisableInputs"})})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"areinputsenabled",children:"areInputsEnabled"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"areInputsEnabled"}),"(): ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n",(0,t.jsxs)(n.p,{children:["Helper function to check if the ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"})," feature is turned on in some\ncapacity."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"boolean"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/DisableInputs.ts#L123",children:"packages/isaacscript-common/src/classes/features/other/DisableInputs.ts:123"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"enableallinputs",children:"enableAllInputs"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"enableAllInputs"}),"(",(0,t.jsx)(n.code,{children:"key"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to enable all inputs. Use this function to set things back to normal after\nhaving used one of the other helper functions to disable inputs."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"key"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:'The name of the mod feature that is requesting the enable/disable. For example, if this was part of the code for a custom enemy called "Super Gaper", then you could use a key of "SuperGaper". The name is necessary so that multiple mod features can work in tandem.'})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/DisableInputs.ts#L144",children:"packages/isaacscript-common/src/classes/features/other/DisableInputs.ts:144"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"disableinputs",children:"disableInputs"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"disableInputs"}),"(",(0,t.jsx)(n.code,{children:"key"}),", ",(0,t.jsx)(n.code,{children:"...buttonActions"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to disable specific inputs, like opening the console."}),"\n",(0,t.jsxs)(n.p,{children:["This function is variadic, meaning that you can specify as many inputs as you want to disable.\n(To disable all inputs, see the ",(0,t.jsx)(n.code,{children:"disableAllInputs"})," function."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"enableAllInputs"})," helper function to set things back to normal."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"key"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:'The name of the mod feature that is requesting the enable/disable. For example, if this was part of the code for a custom enemy called "Super Gaper", then you could use a key of "SuperGaper". The name is necessary so that multiple mod features can work in tandem.'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"...buttonActions"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,t.jsx)(n.code,{children:"ButtonAction"}),"[]"]}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"An array of the actions to action."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/DisableInputs.ts#L167",children:"packages/isaacscript-common/src/classes/features/other/DisableInputs.ts:167"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"disableallinputs",children:"disableAllInputs"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"disableAllInputs"}),"(",(0,t.jsx)(n.code,{children:"key"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsxs)(n.p,{children:["Helper function to disable all inputs. This is useful because ",(0,t.jsx)(n.code,{children:"EntityPlayer.ControlsEnabled"}),"\ncan be changed by the game under certain conditions."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"enableAllInputs"})," helper function to set things back to normal."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"key"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:'The name of the mod feature that is requesting the enable/disable. For example, if this was part of the code for a custom enemy called "Super Gaper", then you could use a key of "SuperGaper". The name is necessary so that multiple mod features can work in tandem.'})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/DisableInputs.ts#L190",children:"packages/isaacscript-common/src/classes/features/other/DisableInputs.ts:190"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"enableallinputsexceptfor",children:"enableAllInputsExceptFor"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"enableAllInputsExceptFor"}),"(",(0,t.jsx)(n.code,{children:"key"}),", ",(0,t.jsx)(n.code,{children:"blacklist"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsxs)(n.p,{children:["Helper function to enable all inputs besides the ones provided. This is useful because\n",(0,t.jsx)(n.code,{children:"EntityPlayer.ControlsEnabled"})," can be changed by the game under certain conditions."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"enableAllInputs"})," helper function to set things back to normal."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"key"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:'The name of the mod feature that is requesting the enable/disable. For example, if this was part of the code for a custom enemy called "Super Gaper", then you could use a key of "SuperGaper". The name is necessary so that multiple mod features can work in tandem.'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"blacklist"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,t.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,t.jsx)(n.code,{children:"ButtonAction"}),">"]}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"A set of ButtonActions to disallow."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/DisableInputs.ts#L211",children:"packages/isaacscript-common/src/classes/features/other/DisableInputs.ts:211"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"disableallinputsexceptfor",children:"disableAllInputsExceptFor"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"disableAllInputsExceptFor"}),"(",(0,t.jsx)(n.code,{children:"key"}),", ",(0,t.jsx)(n.code,{children:"whitelist"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsxs)(n.p,{children:["Helper function to disable all inputs besides the ones provided. This is useful because\n",(0,t.jsx)(n.code,{children:"EntityPlayer.ControlsEnabled"})," can be changed by the game under certain conditions."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"enableAllInputs"})," helper function to set things back to normal."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"key"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:'The name of the mod feature that is requesting the enable/disable. For example, if this was part of the code for a custom enemy called "Super Gaper", then you could use a key of "SuperGaper". The name is necessary so that multiple mod features can work in tandem.'})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"whitelist"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,t.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,t.jsx)(n.code,{children:"ButtonAction"}),">"]}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"A set of ButtonActions to allow."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/DisableInputs.ts#L235",children:"packages/isaacscript-common/src/classes/features/other/DisableInputs.ts:235"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"disablemovementinputs",children:"disableMovementInputs"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"disableMovementInputs"}),"(",(0,t.jsx)(n.code,{children:"key"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsxs)(n.p,{children:["Helper function to disable only the inputs used for moving the character (or moving the cursor\nin the UI). This is useful because ",(0,t.jsx)(n.code,{children:"EntityPlayer.ControlsEnabled"})," can be changed by the game\nunder certain conditions."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"enableAllInputs"})," helper function to set things back to normal."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"key"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:'The name of the mod feature that is requesting the enable/disable. For example, if this was part of the code for a custom enemy called "Super Gaper", then you could use a key of "SuperGaper". The name is necessary so that multiple mod features can work in tandem.'})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/DisableInputs.ts#L259",children:"packages/isaacscript-common/src/classes/features/other/DisableInputs.ts:259"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"disableshootinginputs",children:"disableShootingInputs"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"disableShootingInputs"}),"(",(0,t.jsx)(n.code,{children:"key"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsxs)(n.p,{children:["Helper function to disable only the inputs used for shooting tears. This is useful because\n",(0,t.jsx)(n.code,{children:"EntityPlayer.ControlsEnabled"})," can be changed by the game under certain conditions."]}),"\n",(0,t.jsxs)(n.p,{children:["Use the ",(0,t.jsx)(n.code,{children:"enableAllInputs"})," helper function to set things back to normal."]}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with ",(0,t.jsx)(n.code,{children:"ISCFeature.DISABLE_INPUTS"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"key"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:'The name of the mod feature that is requesting the enable/disable. For example, if this was part of the code for a custom enemy called "Super Gaper", then you could use a key of "SuperGaper". The name is necessary so that multiple mod features can work in tandem.'})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/DisableInputs.ts#L278",children:"packages/isaacscript-common/src/classes/features/other/DisableInputs.ts:278"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>d});var t=s(14041);const i={},l=t.createContext(i);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);