"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[84467],{7249:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>o,frontMatter:()=>c,metadata:()=>a,toc:()=>r});var l=i(31085),s=i(71184);const c={custom_edit_url:null},d="ModCallback",a={id:"isaac-typescript-definitions/enums/ModCallback",title:"ModCallback",description:"Enumeration Members",source:"@site/docs/isaac-typescript-definitions/enums/ModCallback.md",sourceDirName:"isaac-typescript-definitions/enums",slug:"/isaac-typescript-definitions/enums/ModCallback",permalink:"/isaac-typescript-definitions/enums/ModCallback",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacTypeScriptDefinitions",previous:{title:"MinibossID",permalink:"/isaac-typescript-definitions/enums/MinibossID"},next:{title:"ModCallbackRepentogon",permalink:"/isaac-typescript-definitions/enums/ModCallbackRepentogon"}},t={},r=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"POST_NPC_UPDATE",id:"post_npc_update",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"POST_UPDATE",id:"post_update",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"POST_RENDER",id:"post_render",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"POST_USE_ITEM",id:"post_use_item",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"POST_PEFFECT_UPDATE",id:"post_peffect_update",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"POST_USE_CARD",id:"post_use_card",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"POST_FAMILIAR_UPDATE",id:"post_familiar_update",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"POST_FAMILIAR_INIT",id:"post_familiar_init",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"EVALUATE_CACHE",id:"evaluate_cache",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"POST_PLAYER_INIT",id:"post_player_init",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"POST_USE_PILL",id:"post_use_pill",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"ENTITY_TAKE_DMG",id:"entity_take_dmg",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"POST_CURSE_EVAL",id:"post_curse_eval",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"INPUT_ACTION",id:"input_action",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"POST_GAME_STARTED",id:"post_game_started",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"POST_GAME_END",id:"post_game_end",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"PRE_GAME_EXIT",id:"pre_game_exit",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"POST_NEW_LEVEL",id:"post_new_level",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"POST_NEW_ROOM",id:"post_new_room",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"GET_CARD",id:"get_card",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"GET_SHADER_PARAMS",id:"get_shader_params",level:3},{value:"Defined in",id:"defined-in-20",level:4},{value:"EXECUTE_CMD",id:"execute_cmd",level:3},{value:"Defined in",id:"defined-in-21",level:4},{value:"PRE_USE_ITEM",id:"pre_use_item",level:3},{value:"Defined in",id:"defined-in-22",level:4},{value:"PRE_ENTITY_SPAWN",id:"pre_entity_spawn",level:3},{value:"Defined in",id:"defined-in-23",level:4},{value:"POST_FAMILIAR_RENDER",id:"post_familiar_render",level:3},{value:"Defined in",id:"defined-in-24",level:4},{value:"PRE_FAMILIAR_COLLISION",id:"pre_familiar_collision",level:3},{value:"Defined in",id:"defined-in-25",level:4},{value:"POST_NPC_INIT",id:"post_npc_init",level:3},{value:"Defined in",id:"defined-in-26",level:4},{value:"POST_NPC_RENDER",id:"post_npc_render",level:3},{value:"Defined in",id:"defined-in-27",level:4},{value:"POST_NPC_DEATH",id:"post_npc_death",level:3},{value:"Defined in",id:"defined-in-28",level:4},{value:"PRE_NPC_COLLISION",id:"pre_npc_collision",level:3},{value:"Defined in",id:"defined-in-29",level:4},{value:"POST_PLAYER_UPDATE",id:"post_player_update",level:3},{value:"Defined in",id:"defined-in-30",level:4},{value:"POST_PLAYER_RENDER",id:"post_player_render",level:3},{value:"Defined in",id:"defined-in-31",level:4},{value:"PRE_PLAYER_COLLISION",id:"pre_player_collision",level:3},{value:"Defined in",id:"defined-in-32",level:4},{value:"POST_PICKUP_INIT",id:"post_pickup_init",level:3},{value:"Defined in",id:"defined-in-33",level:4},{value:"POST_PICKUP_UPDATE",id:"post_pickup_update",level:3},{value:"Defined in",id:"defined-in-34",level:4},{value:"POST_PICKUP_RENDER",id:"post_pickup_render",level:3},{value:"Defined in",id:"defined-in-35",level:4},{value:"POST_PICKUP_SELECTION",id:"post_pickup_selection",level:3},{value:"Defined in",id:"defined-in-36",level:4},{value:"PRE_PICKUP_COLLISION",id:"pre_pickup_collision",level:3},{value:"Defined in",id:"defined-in-37",level:4},{value:"POST_TEAR_INIT",id:"post_tear_init",level:3},{value:"Defined in",id:"defined-in-38",level:4},{value:"POST_TEAR_UPDATE",id:"post_tear_update",level:3},{value:"Defined in",id:"defined-in-39",level:4},{value:"POST_TEAR_RENDER",id:"post_tear_render",level:3},{value:"Defined in",id:"defined-in-40",level:4},{value:"PRE_TEAR_COLLISION",id:"pre_tear_collision",level:3},{value:"Defined in",id:"defined-in-41",level:4},{value:"POST_PROJECTILE_INIT",id:"post_projectile_init",level:3},{value:"Defined in",id:"defined-in-42",level:4},{value:"POST_PROJECTILE_UPDATE",id:"post_projectile_update",level:3},{value:"Defined in",id:"defined-in-43",level:4},{value:"POST_PROJECTILE_RENDER",id:"post_projectile_render",level:3},{value:"Defined in",id:"defined-in-44",level:4},{value:"PRE_PROJECTILE_COLLISION",id:"pre_projectile_collision",level:3},{value:"Defined in",id:"defined-in-45",level:4},{value:"POST_LASER_INIT",id:"post_laser_init",level:3},{value:"Defined in",id:"defined-in-46",level:4},{value:"POST_LASER_UPDATE",id:"post_laser_update",level:3},{value:"Defined in",id:"defined-in-47",level:4},{value:"POST_LASER_RENDER",id:"post_laser_render",level:3},{value:"Defined in",id:"defined-in-48",level:4},{value:"POST_KNIFE_INIT",id:"post_knife_init",level:3},{value:"Defined in",id:"defined-in-49",level:4},{value:"POST_KNIFE_UPDATE",id:"post_knife_update",level:3},{value:"Defined in",id:"defined-in-50",level:4},{value:"POST_KNIFE_RENDER",id:"post_knife_render",level:3},{value:"Defined in",id:"defined-in-51",level:4},{value:"PRE_KNIFE_COLLISION",id:"pre_knife_collision",level:3},{value:"Defined in",id:"defined-in-52",level:4},{value:"POST_EFFECT_INIT",id:"post_effect_init",level:3},{value:"Defined in",id:"defined-in-53",level:4},{value:"POST_EFFECT_UPDATE",id:"post_effect_update",level:3},{value:"Defined in",id:"defined-in-54",level:4},{value:"POST_EFFECT_RENDER",id:"post_effect_render",level:3},{value:"Defined in",id:"defined-in-55",level:4},{value:"POST_BOMB_INIT",id:"post_bomb_init",level:3},{value:"Defined in",id:"defined-in-56",level:4},{value:"POST_BOMB_UPDATE",id:"post_bomb_update",level:3},{value:"Defined in",id:"defined-in-57",level:4},{value:"POST_BOMB_RENDER",id:"post_bomb_render",level:3},{value:"Defined in",id:"defined-in-58",level:4},{value:"PRE_BOMB_COLLISION",id:"pre_bomb_collision",level:3},{value:"Defined in",id:"defined-in-59",level:4},{value:"POST_FIRE_TEAR",id:"post_fire_tear",level:3},{value:"Defined in",id:"defined-in-60",level:4},{value:"PRE_GET_COLLECTIBLE",id:"pre_get_collectible",level:3},{value:"Defined in",id:"defined-in-61",level:4},{value:"POST_GET_COLLECTIBLE",id:"post_get_collectible",level:3},{value:"Defined in",id:"defined-in-62",level:4},{value:"GET_PILL_COLOR",id:"get_pill_color",level:3},{value:"Defined in",id:"defined-in-63",level:4},{value:"GET_PILL_EFFECT",id:"get_pill_effect",level:3},{value:"Defined in",id:"defined-in-64",level:4},{value:"GET_TRINKET",id:"get_trinket",level:3},{value:"Defined in",id:"defined-in-65",level:4},{value:"POST_ENTITY_REMOVE",id:"post_entity_remove",level:3},{value:"Defined in",id:"defined-in-66",level:4},{value:"POST_ENTITY_KILL",id:"post_entity_kill",level:3},{value:"Defined in",id:"defined-in-67",level:4},{value:"PRE_NPC_UPDATE",id:"pre_npc_update",level:3},{value:"Defined in",id:"defined-in-68",level:4},{value:"PRE_SPAWN_CLEAR_AWARD",id:"pre_spawn_clear_award",level:3},{value:"Defined in",id:"defined-in-69",level:4},{value:"PRE_ROOM_ENTITY_SPAWN",id:"pre_room_entity_spawn",level:3},{value:"Defined in",id:"defined-in-70",level:4},{value:"PRE_ENTITY_DEVOLVE",id:"pre_entity_devolve",level:3},{value:"Defined in",id:"defined-in-71",level:4},{value:"PRE_MOD_UNLOAD",id:"pre_mod_unload",level:3},{value:"Defined in",id:"defined-in-72",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h1,{id:"modcallback",children:"ModCallback"}),"\n",(0,l.jsx)(n.h2,{id:"enumeration-members",children:"Enumeration Members"}),"\n",(0,l.jsx)(n.h3,{id:"post_npc_update",children:"POST_NPC_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_NPC_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"0"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postNPCUpdate(npc: EntityNPC): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L11",children:"ModCallback.ts:11"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_update",children:"POST_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"1"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postUpdate(): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L20",children:"ModCallback.ts:20"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_render",children:"POST_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_RENDER"})," = ",(0,l.jsx)(n.code,{children:"2"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postRender(): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L29",children:"ModCallback.ts:29"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_use_item",children:"POST_USE_ITEM"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_USE_ITEM"})," = ",(0,l.jsx)(n.code,{children:"3"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"CollectibleType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function useItem(\n  collectibleType: CollectibleType,\n  rng: RNG,\n  player: EntityPlayer,\n  useFlags: BitFlags<UseFlag>,\n  activeSlot: int,\n  customVarData: int,\n):\n  | boolean\n  | { Discharge: boolean; Remove: boolean; ShowAnim: boolean }\n  | undefined;\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L50",children:"ModCallback.ts:50"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_peffect_update",children:"POST_PEFFECT_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PEFFECT_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"4"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postPEffectUpdate(player: EntityPlayer): void {}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"Deprecated"})})}),"\n",(0,l.jsxs)(n.p,{children:["Consider using the ",(0,l.jsx)(n.code,{children:"ModCallbackCustom.POST_PEFFECT_UPDATE_REORDERED"})," callback from\n",(0,l.jsx)(n.code,{children:"isaacscript-common"})," instead, since it will fire in the correct order and prevent\nbugs relating to data structures not being properly initialized."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L65",children:"ModCallback.ts:65"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_use_card",children:"POST_USE_CARD"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_USE_CARD"})," = ",(0,l.jsx)(n.code,{children:"5"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"CardType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postUseCard(\n  cardType: CardType,\n  player: EntityPlayer,\n  useFlags: BitFlags<UseFlag>,\n): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L80",children:"ModCallback.ts:80"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_familiar_update",children:"POST_FAMILIAR_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_FAMILIAR_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"6"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postFamiliarUpdate(familiar: EntityFamiliar): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L91",children:"ModCallback.ts:91"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_familiar_init",children:"POST_FAMILIAR_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_FAMILIAR_INIT"})," = ",(0,l.jsx)(n.code,{children:"7"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postFamiliarInit(familiar: EntityFamiliar): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L110",children:"ModCallback.ts:110"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"evaluate_cache",children:"EVALUATE_CACHE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"EVALUATE_CACHE"})," = ",(0,l.jsx)(n.code,{children:"8"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"CacheFlag"})," provided."]}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["Note that you can only use single ",(0,l.jsx)(n.code,{children:"CacheFlag"})," values as a third argument. (You cannot use a\ncombination of two or more ",(0,l.jsx)(n.code,{children:"CacheFlag"}),".)"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function evaluateCache(player: EntityPlayer, cacheFlag: CacheFlag): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L124",children:"ModCallback.ts:124"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_player_init",children:"POST_PLAYER_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PLAYER_INIT"})," = ",(0,l.jsx)(n.code,{children:"9"})]}),"\n",(0,l.jsx)(n.p,{children:"This will fire at the beginning of a run, upon continuing a saved run, and when a player enters\na Genesis room."}),"\n",(0,l.jsxs)(n.p,{children:["For most cases of general purpose player initialization, you should use the\n",(0,l.jsx)(n.code,{children:"POST_PLAYER_INIT_FIRST"})," custom callback instead (in order to exclude the case of a player\ncontinuing a saved run)."]}),"\n",(0,l.jsxs)(n.p,{children:["This callback has a special property where most ",(0,l.jsx)(n.code,{children:"EntityPlayer"})," methods (such as e.g.\n",(0,l.jsx)(n.code,{children:"EntityPlayer.AddCollectible"}),") will silently fail if the player is continuing a saved run.\n(This behavior was introduced in Repentance.) See the docs for more details about which\nspecific methods are affected."]}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"isChildPlayer"})," helper function does not work in this callback (because\n",(0,l.jsx)(n.code,{children:"EntityPlayer.Parent"})," is not initialized yet at this point). If you want to exclude non-real\nplayers, use the ",(0,l.jsx)(n.code,{children:"POST_PLAYER_INIT_FIRST"})," or the ",(0,l.jsx)(n.code,{children:"POST_PLAYER_INIT_LATE"})," custom callbacks\ninstead."]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postPlayerInit(player: EntityPlayer): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L152",children:"ModCallback.ts:152"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_use_pill",children:"POST_USE_PILL"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_USE_PILL"})," = ",(0,l.jsx)(n.code,{children:"10"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PillEffect"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postUsePill(\n  pillEffect: PillEffect,\n  player: EntityPlayer,\n  useFlags: BitFlags<UseFlag>,\n): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L167",children:"ModCallback.ts:167"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"entity_take_dmg",children:"ENTITY_TAKE_DMG"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"ENTITY_TAKE_DMG"})," = ",(0,l.jsx)(n.code,{children:"11"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function entityTakeDmg(\n  entity: Entity,\n  amount: float,\n  damageFlags: BitFlags<DamageFlag>,\n  source: EntityRef,\n  countdownFrames: int,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L184",children:"ModCallback.ts:184"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_curse_eval",children:"POST_CURSE_EVAL"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_CURSE_EVAL"})," = ",(0,l.jsx)(n.code,{children:"12"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postCurseEval(curses: BitFlags<LevelCurse>): BitFlags<LevelCurse> | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L193",children:"ModCallback.ts:193"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"input_action",children:"INPUT_ACTION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"INPUT_ACTION"})," = ",(0,l.jsx)(n.code,{children:"13"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"InputHook"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function inputAction(\n  entity: Entity | undefined,\n  inputHook: InputHook,\n  buttonAction: ButtonAction,\n): boolean | float | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L208",children:"ModCallback.ts:208"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_game_started",children:"POST_GAME_STARTED"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_GAME_STARTED"})," = ",(0,l.jsx)(n.code,{children:"15"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postGameStarted(isContinued: boolean): void {}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"Deprecated"})})}),"\n",(0,l.jsxs)(n.p,{children:["Consider using the ",(0,l.jsx)(n.code,{children:"ModCallbackCustom.POST_GAME_STARTED_REORDERED"})," callback from\n",(0,l.jsx)(n.code,{children:"isaacscript-common"})," instead, since it will fire in the correct order and prevent\nbugs relating to data structures not being properly initialized."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L221",children:"ModCallback.ts:221"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_game_end",children:"POST_GAME_END"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_GAME_END"})," = ",(0,l.jsx)(n.code,{children:"16"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postGameEnd(isGameOver: boolean): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L230",children:"ModCallback.ts:230"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_game_exit",children:"PRE_GAME_EXIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_GAME_EXIT"})," = ",(0,l.jsx)(n.code,{children:"17"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preGameExit(shouldSave: boolean): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L239",children:"ModCallback.ts:239"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_new_level",children:"POST_NEW_LEVEL"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_NEW_LEVEL"})," = ",(0,l.jsx)(n.code,{children:"18"})]}),"\n",(0,l.jsxs)(n.p,{children:["Unlike the ",(0,l.jsx)(n.code,{children:"POST_GAME_STARTED"})," callback, this callback does not fire when resuming a saved run."]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postNewLevel(): void {}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"Deprecated"})})}),"\n",(0,l.jsxs)(n.p,{children:["Consider using the ",(0,l.jsx)(n.code,{children:"ModCallbackCustom.POST_NEW_LEVEL_REORDERED"})," callback from\n",(0,l.jsx)(n.code,{children:"isaacscript-common"})," instead, since it will fire in the correct order and prevent\nbugs relating to data structures not being properly initialized."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L254",children:"ModCallback.ts:254"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_new_room",children:"POST_NEW_ROOM"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_NEW_ROOM"})," = ",(0,l.jsx)(n.code,{children:"19"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postNewRoom(): void {}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"Deprecated"})})}),"\n",(0,l.jsxs)(n.p,{children:["Consider using the ",(0,l.jsx)(n.code,{children:"ModCallbackCustom.POST_NEW_ROOM_REORDERED"})," callback from\n",(0,l.jsx)(n.code,{children:"isaacscript-common"})," instead, since it will fire in the correct order and prevent\nbugs relating to data structures not being properly initialized."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L267",children:"ModCallback.ts:267"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"get_card",children:"GET_CARD"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"GET_CARD"})," = ",(0,l.jsx)(n.code,{children:"20"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function getCard(\n  rng: RNG,\n  cardType: CardType,\n  includePlayingCards: boolean,\n  includeRunes: boolean,\n  onlyRunes: boolean,\n): CardType | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L282",children:"ModCallback.ts:282"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"get_shader_params",children:"GET_SHADER_PARAMS"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"GET_SHADER_PARAMS"})," = ",(0,l.jsx)(n.code,{children:"21"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function getShaderParams(shaderName: string): Record<string, unknown> {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L291",children:"ModCallback.ts:291"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"execute_cmd",children:"EXECUTE_CMD"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"EXECUTE_CMD"})," = ",(0,l.jsx)(n.code,{children:"22"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function executeCmd(\n  command: string,\n  parameters: string,\n  player: EntityPlayer,\n): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L304",children:"ModCallback.ts:304"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_use_item",children:"PRE_USE_ITEM"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_USE_ITEM"})," = ",(0,l.jsx)(n.code,{children:"23"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"CollectibleType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preUseItem(\n  collectibleType: CollectibleType,\n  rng: RNG,\n  player: EntityPlayer,\n  useFlags: BitFlags<UseFlag>,\n  activeSlot: ActiveSlot,\n  customVarData: int,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L322",children:"ModCallback.ts:322"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_entity_spawn",children:"PRE_ENTITY_SPAWN"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_ENTITY_SPAWN"})," = ",(0,l.jsx)(n.code,{children:"24"})]}),"\n",(0,l.jsxs)(n.p,{children:["If you want to prevent an entity from spawning, you cannot return an ",(0,l.jsx)(n.code,{children:"EntityType"})," of 0, since\nthat will cause the game to crash."]}),"\n",(0,l.jsx)(n.p,{children:"Sometimes, if you return a type other than the original type (e.g. replacing a pickup with an\neffect), the game will crash. Thus, you should replace a pickup with a new pickup, and so on."}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preEntitySpawn(\n  entityType: EntityType,\n  variant: int,\n  subType: int,\n  position: Vector,\n  velocity: Vector,\n  spawner: Entity | undefined,\n  initSeed: Seed,\n): [entityType: EntityType, variant: int, subType: int, initSeed: Seed] | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L345",children:"ModCallback.ts:345"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_familiar_render",children:"POST_FAMILIAR_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_FAMILIAR_RENDER"})," = ",(0,l.jsx)(n.code,{children:"25"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postFamiliarRender(\n  entityFamiliar: EntityFamiliar,\n  renderOffset: Vector,\n): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L359",children:"ModCallback.ts:359"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_familiar_collision",children:"PRE_FAMILIAR_COLLISION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_FAMILIAR_COLLISION"})," = ",(0,l.jsx)(n.code,{children:"26"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preFamiliarCollision(\n  familiar: EntityFamiliar,\n  collider: Entity,\n  low: boolean,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-25",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L374",children:"ModCallback.ts:374"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_npc_init",children:"POST_NPC_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_NPC_INIT"})," = ",(0,l.jsx)(n.code,{children:"27"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postNPCInit(npc: EntityNPC): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-26",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L393",children:"ModCallback.ts:393"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_npc_render",children:"POST_NPC_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_NPC_RENDER"})," = ",(0,l.jsx)(n.code,{children:"28"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postNPCRender(npc: EntityNPC, renderOffset: Vector): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-27",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L404",children:"ModCallback.ts:404"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_npc_death",children:"POST_NPC_DEATH"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_NPC_DEATH"})," = ",(0,l.jsx)(n.code,{children:"29"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postNPCDeath(npc: EntityNPC): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-28",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L415",children:"ModCallback.ts:415"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_npc_collision",children:"PRE_NPC_COLLISION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_NPC_COLLISION"})," = ",(0,l.jsx)(n.code,{children:"30"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preNPCCollision(\n  npc: EntityNPC,\n  collider: Entity,\n  low: boolean,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-29",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L430",children:"ModCallback.ts:430"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_player_update",children:"POST_PLAYER_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PLAYER_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"31"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postPlayerUpdate(player: EntityPlayer): void {}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"Deprecated"})})}),"\n",(0,l.jsxs)(n.p,{children:["Consider using the ",(0,l.jsx)(n.code,{children:"ModCallbackCustom.POST_PLAYER_UPDATE_REORDERED"})," callback from\n",(0,l.jsx)(n.code,{children:"isaacscript-common"})," instead, since it will fire in the correct order and prevent\nbugs relating to data structures not being properly initialized."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-30",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L445",children:"ModCallback.ts:445"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_player_render",children:"POST_PLAYER_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PLAYER_RENDER"})," = ",(0,l.jsx)(n.code,{children:"32"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postPlayerRender(player: EntityPlayer, renderOffset: Vector): void {}\n"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"Deprecated"})})}),"\n",(0,l.jsxs)(n.p,{children:["Consider using the ",(0,l.jsx)(n.code,{children:"ModCallbackCustom.POST_PLAYER_RENDER_REORDERED"})," callback from\n",(0,l.jsx)(n.code,{children:"isaacscript-common"})," instead, since it will fire in the correct order and prevent\nbugs relating to data structures not being properly initialized."]}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-31",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L460",children:"ModCallback.ts:460"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_player_collision",children:"PRE_PLAYER_COLLISION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_PLAYER_COLLISION"})," = ",(0,l.jsx)(n.code,{children:"33"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function prePlayerCollision(\n  player: EntityPlayer,\n  collider: Entity,\n  low: boolean,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-32",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L475",children:"ModCallback.ts:475"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_pickup_init",children:"POST_PICKUP_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PICKUP_INIT"})," = ",(0,l.jsx)(n.code,{children:"34"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PickupVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postPickupInit(pickup: EntityPickup): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-33",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L494",children:"ModCallback.ts:494"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_pickup_update",children:"POST_PICKUP_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PICKUP_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"35"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PickupVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postPickupUpdate(pickup: EntityPickup): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-34",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L505",children:"ModCallback.ts:505"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_pickup_render",children:"POST_PICKUP_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PICKUP_RENDER"})," = ",(0,l.jsx)(n.code,{children:"36"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PickupVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postPickupRender(pickup: EntityPickup, renderOffset: Vector): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-35",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L516",children:"ModCallback.ts:516"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_pickup_selection",children:"POST_PICKUP_SELECTION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PICKUP_SELECTION"})," = ",(0,l.jsx)(n.code,{children:"37"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postPickupSelection(\n  pickup: EntityPickup,\n  variant: PickupVariant,\n  subType: int,\n): [pickupVariant: PickupVariant, subType: int] | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-36",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L529",children:"ModCallback.ts:529"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_pickup_collision",children:"PRE_PICKUP_COLLISION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_PICKUP_COLLISION"})," = ",(0,l.jsx)(n.code,{children:"38"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"PickupVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function prePickupCollision(\n  pickup: EntityPickup,\n  collider: Entity,\n  low: boolean,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-37",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L544",children:"ModCallback.ts:544"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_tear_init",children:"POST_TEAR_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_TEAR_INIT"})," = ",(0,l.jsx)(n.code,{children:"39"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"TearVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postTearInit(tear: EntityTear): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-38",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L563",children:"ModCallback.ts:563"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_tear_update",children:"POST_TEAR_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_TEAR_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"40"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"TearVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postTearUpdate(tear: EntityTear): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-39",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L574",children:"ModCallback.ts:574"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_tear_render",children:"POST_TEAR_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_TEAR_RENDER"})," = ",(0,l.jsx)(n.code,{children:"41"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"TearVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postTearRender(tear: EntityTear, renderOffset: Vector): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-40",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L585",children:"ModCallback.ts:585"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_tear_collision",children:"PRE_TEAR_COLLISION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_TEAR_COLLISION"})," = ",(0,l.jsx)(n.code,{children:"42"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"TearVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preTearCollision(\n  tear: EntityTear,\n  collider: Entity,\n  low: boolean,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-41",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L600",children:"ModCallback.ts:600"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_projectile_init",children:"POST_PROJECTILE_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PROJECTILE_INIT"})," = ",(0,l.jsx)(n.code,{children:"43"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"ProjectileVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postProjectileInit(projectile: EntityProjectile): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-42",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L619",children:"ModCallback.ts:619"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_projectile_update",children:"POST_PROJECTILE_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PROJECTILE_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"44"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"ProjectileVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postProjectileUpdate(projectile: EntityProjectile): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-43",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L630",children:"ModCallback.ts:630"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_projectile_render",children:"POST_PROJECTILE_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_PROJECTILE_RENDER"})," = ",(0,l.jsx)(n.code,{children:"45"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"ProjectileVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postProjectileRender(\n  projectile: EntityProjectile,\n  renderOffset: Vector,\n): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-44",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L644",children:"ModCallback.ts:644"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_projectile_collision",children:"PRE_PROJECTILE_COLLISION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_PROJECTILE_COLLISION"})," = ",(0,l.jsx)(n.code,{children:"46"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"ProjectileVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preProjectileCollision(\n  projectile: EntityProjectile,\n  collider: Entity,\n  low: boolean,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-45",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L659",children:"ModCallback.ts:659"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_laser_init",children:"POST_LASER_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_LASER_INIT"})," = ",(0,l.jsx)(n.code,{children:"47"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"LaserVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postLaserInit(laser: EntityLaser): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-46",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L678",children:"ModCallback.ts:678"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_laser_update",children:"POST_LASER_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_LASER_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"48"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"LaserVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postLaserUpdate(laser: EntityLaser): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-47",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L689",children:"ModCallback.ts:689"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_laser_render",children:"POST_LASER_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_LASER_RENDER"})," = ",(0,l.jsx)(n.code,{children:"49"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"LaserVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postLaserRender(laser: EntityLaser, renderOffset: Vector): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-48",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L700",children:"ModCallback.ts:700"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_knife_init",children:"POST_KNIFE_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_KNIFE_INIT"})," = ",(0,l.jsx)(n.code,{children:"50"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the sub-type provided. (This is bugged and is NOT the ",(0,l.jsx)(n.code,{children:"KnifeVariant"})," like you would\nexpect!)"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postKnifeInit(knife: EntityKnife): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-49",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L720",children:"ModCallback.ts:720"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_knife_update",children:"POST_KNIFE_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_KNIFE_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"51"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the sub-type provided. (This is bugged and is NOT the ",(0,l.jsx)(n.code,{children:"KnifeVariant"})," like you would\nexpect!)"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postKnifeUpdate(knife: EntityKnife): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-50",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L732",children:"ModCallback.ts:732"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_knife_render",children:"POST_KNIFE_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_KNIFE_RENDER"})," = ",(0,l.jsx)(n.code,{children:"52"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the sub-type provided. (This is bugged and is NOT the ",(0,l.jsx)(n.code,{children:"KnifeVariant"})," like you would\nexpect!)"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postKnifeRender(knife: EntityKnife, renderOffset: Vector): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-51",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L744",children:"ModCallback.ts:744"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_knife_collision",children:"PRE_KNIFE_COLLISION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_KNIFE_COLLISION"})," = ",(0,l.jsx)(n.code,{children:"53"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the sub-type provided. (This is bugged and is NOT the ",(0,l.jsx)(n.code,{children:"KnifeVariant"})," like you would\nexpect!)"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preKnifeCollision(\n  knife: EntityKnife,\n  collider: Entity,\n  low: boolean,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-52",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L760",children:"ModCallback.ts:760"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_effect_init",children:"POST_EFFECT_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_EFFECT_INIT"})," = ",(0,l.jsx)(n.code,{children:"54"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EffectVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postEffectInit(effect: EntityEffect): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-53",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L779",children:"ModCallback.ts:779"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_effect_update",children:"POST_EFFECT_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_EFFECT_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"55"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EffectVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postEffectUpdate(effect: EntityEffect): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-54",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L790",children:"ModCallback.ts:790"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_effect_render",children:"POST_EFFECT_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_EFFECT_RENDER"})," = ",(0,l.jsx)(n.code,{children:"56"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EffectVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postEffectRender(effect: EntityEffect, renderOffset: Vector): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-55",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L801",children:"ModCallback.ts:801"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_bomb_init",children:"POST_BOMB_INIT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_BOMB_INIT"})," = ",(0,l.jsx)(n.code,{children:"57"})]}),"\n",(0,l.jsx)(n.p,{children:"Unlike in Afterbirth+, in Repentance this callback properly populates the following fields:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Position"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerEntity"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerType"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"SpawnerVariant"})}),"\n",(0,l.jsx)(n.li,{children:(0,l.jsx)(n.code,{children:"Velocity"})}),"\n"]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"BombVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postBombInit(bomb: EntityBomb): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-56",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L820",children:"ModCallback.ts:820"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_bomb_update",children:"POST_BOMB_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_BOMB_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"58"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"BombVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postBombUpdate(bomb: EntityBomb): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-57",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L831",children:"ModCallback.ts:831"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_bomb_render",children:"POST_BOMB_RENDER"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_BOMB_RENDER"})," = ",(0,l.jsx)(n.code,{children:"59"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"BombVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postBombRender(bomb: EntityBomb, renderOffset: Vector): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-58",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L842",children:"ModCallback.ts:842"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_bomb_collision",children:"PRE_BOMB_COLLISION"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_BOMB_COLLISION"})," = ",(0,l.jsx)(n.code,{children:"60"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"BombVariant"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preBombCollision(\n  bomb: EntityBomb,\n  collider: Entity,\n  low: boolean,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-59",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L857",children:"ModCallback.ts:857"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_fire_tear",children:"POST_FIRE_TEAR"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_FIRE_TEAR"})," = ",(0,l.jsx)(n.code,{children:"61"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postFireTear(tear: EntityTear): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-60",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L866",children:"ModCallback.ts:866"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_get_collectible",children:"PRE_GET_COLLECTIBLE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_GET_COLLECTIBLE"})," = ",(0,l.jsx)(n.code,{children:"62"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preGetCollectible(\n  itemPoolType: ItemPoolType,\n  decrease: boolean,\n  seed: Seed,\n): CollectibleType | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-61",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L879",children:"ModCallback.ts:879"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_get_collectible",children:"POST_GET_COLLECTIBLE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_GET_COLLECTIBLE"})," = ",(0,l.jsx)(n.code,{children:"63"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postGetCollectible(\n  collectibleType: CollectibleType,\n  itemPoolType: ItemPoolType,\n  decrease: boolean,\n  seed: Seed,\n): CollectibleType | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-62",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L893",children:"ModCallback.ts:893"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"get_pill_color",children:"GET_PILL_COLOR"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"GET_PILL_COLOR"})," = ",(0,l.jsx)(n.code,{children:"64"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function getPillColor(seed: Seed): PillColor | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-63",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L902",children:"ModCallback.ts:902"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"get_pill_effect",children:"GET_PILL_EFFECT"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"GET_PILL_EFFECT"})," = ",(0,l.jsx)(n.code,{children:"65"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function getPillEffect(\n  pillEffect: PillEffect,\n  pillColor: PillColor,\n): PillEffect | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-64",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L914",children:"ModCallback.ts:914"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"get_trinket",children:"GET_TRINKET"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"GET_TRINKET"})," = ",(0,l.jsx)(n.code,{children:"66"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function getTrinket(\n  trinketType: TrinketType,\n  rng: RNG,\n): TrinketType | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-65",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L926",children:"ModCallback.ts:926"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_entity_remove",children:"POST_ENTITY_REMOVE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_ENTITY_REMOVE"})," = ",(0,l.jsx)(n.code,{children:"67"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postEntityRemove(entity: Entity): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-66",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L937",children:"ModCallback.ts:937"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"post_entity_kill",children:"POST_ENTITY_KILL"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"POST_ENTITY_KILL"})," = ",(0,l.jsx)(n.code,{children:"68"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function postEntityKill(entity: Entity): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-67",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L948",children:"ModCallback.ts:948"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_npc_update",children:"PRE_NPC_UPDATE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_NPC_UPDATE"})," = ",(0,l.jsx)(n.code,{children:"69"})]}),"\n",(0,l.jsxs)(n.p,{children:["When registering this callback with the ",(0,l.jsx)(n.code,{children:"Mod.AddCallback"})," method:"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,l.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preNPCUpdate(entity: Entity): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-68",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L959",children:"ModCallback.ts:959"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_spawn_clear_award",children:"PRE_SPAWN_CLEAR_AWARD"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_SPAWN_CLEAR_AWARD"})," = ",(0,l.jsx)(n.code,{children:"70"})]}),"\n",(0,l.jsxs)(n.p,{children:["In vanilla, this is ",(0,l.jsx)(n.code,{children:"PRE_SPAWN_CLEAN_AWARD"}),", which is a typo."]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preSpawnClearAward(\n  rng: RNG,\n  spawnPosition: Vector,\n): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-69",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L973",children:"ModCallback.ts:973"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_room_entity_spawn",children:"PRE_ROOM_ENTITY_SPAWN"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_ROOM_ENTITY_SPAWN"})," = ",(0,l.jsx)(n.code,{children:"71"})]}),"\n",(0,l.jsxs)(n.p,{children:["You can use the ",(0,l.jsx)(n.code,{children:"isGridEntityXMLType"})," helper function to convert the\n",(0,l.jsx)(n.code,{children:"entityTypeOrGridEntityXMLType"})," argument to an ",(0,l.jsx)(n.code,{children:"EntityType"})," or ",(0,l.jsx)(n.code,{children:"GridEntityXMLType"}),", if needed."]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preRoomEntitySpawn(\n  entityTypeOrGridEntityXMLType: EntityType | GridEntityXMLType,\n  variant: int,\n  subType: int,\n  gridIndex: int,\n  initSeed: Seed,\n): [type: EntityType | GridEntityXMLType, variant: int, subType: int] | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-70",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L991",children:"ModCallback.ts:991"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_entity_devolve",children:"PRE_ENTITY_DEVOLVE"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_ENTITY_DEVOLVE"})," = ",(0,l.jsx)(n.code,{children:"72"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preEntityDevolve(entity: Entity): boolean | undefined {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-71",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L1000",children:"ModCallback.ts:1000"})}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsx)(n.h3,{id:"pre_mod_unload",children:"PRE_MOD_UNLOAD"}),"\n",(0,l.jsxs)(n.p,{children:["\u2022 ",(0,l.jsx)(n.strong,{children:"PRE_MOD_UNLOAD"})," = ",(0,l.jsx)(n.code,{children:"73"})]}),"\n",(0,l.jsx)(n.p,{children:"You cannot filter this callback."}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ts",children:"function preModUnload(mod: Mod): void {}\n"})}),"\n",(0,l.jsx)(n.h4,{id:"defined-in-72",children:"Defined in"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallback.ts#L1009",children:"ModCallback.ts:1009"})})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>a});var l=i(14041);const s={},c=l.createContext(s);function d(e){const n=l.useContext(c);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),l.createElement(c.Provider,{value:n},e.children)}}}]);