"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[11073],{48019:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>o});var s=i(31085),c=i(71184);const t={custom_edit_url:null},l="Constants (Vanilla Collections)",a={id:"isaacscript-common/core/constantsVanilla",title:"Constants (Vanilla Collections)",description:"Constants relating to collections for various vanilla objects.",source:"@site/docs/isaacscript-common/core/constantsVanilla.md",sourceDirName:"isaacscript-common/core",slug:"/isaacscript-common/core/constantsVanilla",permalink:"/isaacscript-common/core/constantsVanilla",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Constants (First & Last)",permalink:"/isaacscript-common/core/constantsFirstLast"},next:{title:"Upgrading Your Mod",permalink:"/isaacscript-common/core/upgradeMod"}},r={},o=[{value:"Variables",id:"variables",level:2},{value:"VANILLA_COLLECTIBLE_TYPE_RANGE",id:"vanilla_collectible_type_range",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"VANILLA_COLLECTIBLE_TYPES",id:"vanilla_collectible_types",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"VANILLA_COLLECTIBLE_TYPES_SET",id:"vanilla_collectible_types_set",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"VANILLA_TRINKET_TYPE_RANGE",id:"vanilla_trinket_type_range",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"VANILLA_TRINKET_TYPES",id:"vanilla_trinket_types",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"VANILLA_TRINKET_TYPES_SET",id:"vanilla_trinket_types_set",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"VANILLA_CARD_TYPE_RANGE",id:"vanilla_card_type_range",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"VANILLA_CARD_TYPES",id:"vanilla_card_types",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"VANILLA_CARD_TYPES_SET",id:"vanilla_card_types_set",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"VANILLA_PILL_EFFECT_RANGE",id:"vanilla_pill_effect_range",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"VANILLA_PILL_EFFECTS",id:"vanilla_pill_effects",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"VANILLA_PILL_EFFECTS_SET",id:"vanilla_pill_effects_set",level:3},{value:"Defined in",id:"defined-in-11",level:4}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"constants-vanilla-collections",children:"Constants (Vanilla Collections)"}),"\n",(0,s.jsx)(n.p,{children:"Constants relating to collections for various vanilla objects."}),"\n",(0,s.jsx)(n.h2,{id:"variables",children:"Variables"}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_collectible_type_range",children:"VANILLA_COLLECTIBLE_TYPE_RANGE"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_COLLECTIBLE_TYPE_RANGE"}),": readonly ",(0,s.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"An array that represents the range from the first vanilla collectible type to the last vanilla\ncollectible type. This will include integers that do not represent any valid collectible types."}),"\n",(0,s.jsxs)(n.p,{children:["This function is only useful when building collectible type objects. For most purposes, you\nshould use the ",(0,s.jsx)(n.code,{children:"VANILLA_COLLECTIBLE_TYPES"})," or ",(0,s.jsx)(n.code,{children:"VANILLA_COLLECTIBLE_TYPES_SET"})," constants instead."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L44",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:44"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_collectible_types",children:"VANILLA_COLLECTIBLE_TYPES"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_COLLECTIBLE_TYPES"}),": readonly ",(0,s.jsx)(n.code,{children:"CollectibleType"}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array that contains every valid vanilla collectible type, as verified by the\n",(0,s.jsx)(n.code,{children:"ItemConfig.GetCollectible"})," method. Vanilla collectible types are not contiguous, so every valid\nmust be verified. (There are several gaps, e.g. 666.)"]}),"\n",(0,s.jsxs)(n.p,{children:["If you need to do O(1) lookups, use the ",(0,s.jsx)(n.code,{children:"VANILLA_COLLECTIBLE_TYPES_SET"})," constant instead."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L57",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:57"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_collectible_types_set",children:"VANILLA_COLLECTIBLE_TYPES_SET"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_COLLECTIBLE_TYPES_SET"}),": ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CollectibleType"}),">"]}),"\n",(0,s.jsxs)(n.p,{children:["A set that contains every valid vanilla collectible type, as verified by the\n",(0,s.jsx)(n.code,{children:"ItemConfig.GetCollectible"})," method. Vanilla collectible types are not contiguous, so every valid\nmust be verified. (There are several gaps, e.g. 666.)"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L69",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:69"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_trinket_type_range",children:"VANILLA_TRINKET_TYPE_RANGE"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_TRINKET_TYPE_RANGE"}),": readonly ",(0,s.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"An array that represents the range from the first vanilla trinket type to the last vanilla\ntrinket type. This will include integers that do not represent any valid trinket types."}),"\n",(0,s.jsxs)(n.p,{children:["This function is only useful when building trinket type objects. For most purposes, you should\nuse the ",(0,s.jsx)(n.code,{children:"VANILLA_TRINKET_TYPES"})," or ",(0,s.jsx)(n.code,{children:"VANILLA_TRINKET_TYPES_SET"})," constants instead."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L84",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:84"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_trinket_types",children:"VANILLA_TRINKET_TYPES"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_TRINKET_TYPES"}),": readonly ",(0,s.jsx)(n.code,{children:"TrinketType"}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array that contains every valid vanilla trinket type, as verified by the\n",(0,s.jsx)(n.code,{children:"ItemConfig.GetTrinket"})," method. Vanilla trinket types are not contiguous, so every valid must be\nverified. (The only gap is 47 for ",(0,s.jsx)(n.code,{children:"POLAROID_OBSOLETE"}),".)"]}),"\n",(0,s.jsxs)(n.p,{children:["If you need to do O(1) lookups, use the ",(0,s.jsx)(n.code,{children:"VANILLA_TRINKET_TYPES_SET"})," constant instead."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L97",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:97"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_trinket_types_set",children:"VANILLA_TRINKET_TYPES_SET"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_TRINKET_TYPES_SET"}),": ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"TrinketType"}),">"]}),"\n",(0,s.jsxs)(n.p,{children:["A set that contains every valid vanilla trinket type, as verified by the ",(0,s.jsx)(n.code,{children:"ItemConfig.GetTrinket"}),"\nmethod. Vanilla trinket types are not contiguous, so every valid must be verified. (The only gap\nis 47 for ",(0,s.jsx)(n.code,{children:"POLAROID_OBSOLETE"}),".)"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L109",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:109"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_card_type_range",children:"VANILLA_CARD_TYPE_RANGE"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_CARD_TYPE_RANGE"}),": readonly ",(0,s.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"An array that represents the range from the first vanilla card type to the last vanilla card\ntype."}),"\n",(0,s.jsxs)(n.p,{children:["This function is only useful when building card type objects. For most purposes, you should use\nthe ",(0,s.jsx)(n.code,{children:"VANILLA_CARD_TYPES"})," or ",(0,s.jsx)(n.code,{children:"VANILLA_CARD_TYPES_SET"})," constants instead."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L122",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:122"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_card_types",children:"VANILLA_CARD_TYPES"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_CARD_TYPES"}),": readonly ",(0,s.jsx)(n.code,{children:"CardType"}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array that contains every valid vanilla card type, as verified by the ",(0,s.jsx)(n.code,{children:"ItemConfig.GetCard"}),"\nmethod. Vanilla card types are contiguous, but we validate every entry to double check."]}),"\n",(0,s.jsxs)(n.p,{children:["If you need to do O(1) lookups, use the ",(0,s.jsx)(n.code,{children:"VANILLA_CARD_TYPES_SET"})," constant instead."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L134",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:134"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_card_types_set",children:"VANILLA_CARD_TYPES_SET"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_CARD_TYPES_SET"}),": ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"CardType"}),">"]}),"\n",(0,s.jsxs)(n.p,{children:["A set that contains every valid vanilla card type, as verified by the ",(0,s.jsx)(n.code,{children:"ItemConfig.GetCard"}),"\nmethod. Vanilla card types are contiguous, but we validate every entry to double check."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L145",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:145"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_pill_effect_range",children:"VANILLA_PILL_EFFECT_RANGE"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_PILL_EFFECT_RANGE"}),": readonly ",(0,s.jsx)(n.code,{children:"int"}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"An array that represents the range from the first vanilla pill effect to the last vanilla pill\neffect."}),"\n",(0,s.jsxs)(n.p,{children:["This function is only useful when building pill effect objects. For most purposes, you should use\nthe ",(0,s.jsx)(n.code,{children:"VANILLA_PILL_EFFECTS"})," or ",(0,s.jsx)(n.code,{children:"VANILLA_PILL_EFFECTS_SET"})," constants instead."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L158",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:158"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_pill_effects",children:"VANILLA_PILL_EFFECTS"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_PILL_EFFECTS"}),": readonly ",(0,s.jsx)(n.code,{children:"PillEffect"}),"[]"]}),"\n",(0,s.jsxs)(n.p,{children:["An array that contains every valid vanilla pill effect, as verified by the\n",(0,s.jsx)(n.code,{children:"ItemConfig.GetPillEffect"})," method. Vanilla pill effects are contiguous, but we validate every\nentry to double check."]}),"\n",(0,s.jsxs)(n.p,{children:["If you need to do O(1) lookups, use the ",(0,s.jsx)(n.code,{children:"VANILLA_PILL_EFFECT_SET"})," constant instead."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L171",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:171"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"vanilla_pill_effects_set",children:"VANILLA_PILL_EFFECTS_SET"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.code,{children:"Const"})," ",(0,s.jsx)(n.strong,{children:"VANILLA_PILL_EFFECTS_SET"}),": ",(0,s.jsx)(n.code,{children:"ReadonlySet"}),"<",(0,s.jsx)(n.code,{children:"PillEffect"}),">"]}),"\n",(0,s.jsxs)(n.p,{children:["A set that contains every valid vanilla pill effect, as verified by the\n",(0,s.jsx)(n.code,{children:"ItemConfig.GetPillEffect"})," method. Vanilla pill effects are contiguous, but we validate every\nentry to double check."]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/core/constantsVanilla.ts#L183",children:"packages/isaacscript-common/src/core/constantsVanilla.ts:183"})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(14041);const c={},t=s.createContext(c);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);