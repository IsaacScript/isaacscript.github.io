"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[55590],{76476:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var s=t(31085),i=t(71184);const o={custom_edit_url:null},r="JSON Room",l={id:"isaacscript-common/functions/jsonRoom",title:"JSON Room",description:"Functions",source:"@site/docs/isaacscript-common/functions/jsonRoom.md",sourceDirName:"isaacscript-common/functions",slug:"/isaacscript-common/functions/jsonRoom",permalink:"/isaacscript-common/functions/jsonRoom",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"JSON",permalink:"/isaacscript-common/functions/jsonHelpers"},next:{title:"KColor",permalink:"/isaacscript-common/functions/kColor"}},c={},d=[{value:"Functions",id:"functions",level:2},{value:"getJSONRoomDoorSlotFlags",id:"getjsonroomdoorslotflags",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getJSONRoomOfVariant",id:"getjsonroomofvariant",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getJSONRoomsOfSubType",id:"getjsonroomsofsubtype",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getRandomJSONEntity",id:"getrandomjsonentity",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getRandomJSONRoom",id:"getrandomjsonroom",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"json-room",children:"JSON Room"}),"\n",(0,s.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(n.h3,{id:"getjsonroomdoorslotflags",children:"getJSONRoomDoorSlotFlags"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getJSONRoomDoorSlotFlags"}),"(",(0,s.jsx)(n.code,{children:"jsonRoom"}),"): ",(0,s.jsx)(n.code,{children:"BitFlags"}),"<",(0,s.jsx)(n.code,{children:"DoorSlotFlag"}),">"]}),"\n",(0,s.jsxs)(n.p,{children:["Helper function to calculate what the resulting ",(0,s.jsx)(n.code,{children:"BitFlags<DoorSlotFlag>"})," value would be for a\ngiven JSON room."]}),"\n",(0,s.jsx)(n.p,{children:"(A JSON room is an XML file converted to JSON so that it can be directly imported into your mod.)"}),"\n",(0,s.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"jsonRoom"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})})})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"BitFlags"}),"<",(0,s.jsx)(n.code,{children:"DoorSlotFlag"}),">"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/jsonRoom.ts#L24",children:"packages/isaacscript-common/src/functions/jsonRoom.ts:24"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getjsonroomofvariant",children:"getJSONRoomOfVariant"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getJSONRoomOfVariant"}),"(",(0,s.jsx)(n.code,{children:"jsonRooms"}),", ",(0,s.jsx)(n.code,{children:"variant"}),"): ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})})," | ",(0,s.jsx)(n.code,{children:"undefined"})]}),"\n",(0,s.jsx)(n.p,{children:"Helper function to find a specific room from an array of JSON rooms."}),"\n",(0,s.jsx)(n.p,{children:"(A JSON room is an XML file converted to JSON so that it can be directly imported into your mod.)"}),"\n",(0,s.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"jsonRooms"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The array of rooms to search through."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"variant"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"int"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The room variant to select. (The room variant can be thought of as the ID of the room.)"})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})})," | ",(0,s.jsx)(n.code,{children:"undefined"})]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/jsonRoom.ts#L90",children:"packages/isaacscript-common/src/functions/jsonRoom.ts:90"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getjsonroomsofsubtype",children:"getJSONRoomsOfSubType"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getJSONRoomsOfSubType"}),"(",(0,s.jsx)(n.code,{children:"jsonRooms"}),", ",(0,s.jsx)(n.code,{children:"subType"}),"): readonly ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})}),"[]"]}),"\n",(0,s.jsx)(n.p,{children:"Helper function to find all of the JSON rooms that match the sub-type provided."}),"\n",(0,s.jsx)(n.p,{children:"(A JSON room is an XML file converted to JSON so that it can be directly imported into your mod.)"}),"\n",(0,s.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"jsonRooms"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The array of rooms to search through."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"subType"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"int"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The sub-type to match."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["readonly ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})}),"[]"]}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/jsonRoom.ts#L129",children:"packages/isaacscript-common/src/functions/jsonRoom.ts:129"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getrandomjsonentity",children:"getRandomJSONEntity"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getRandomJSONEntity"}),"(",(0,s.jsx)(n.code,{children:"jsonEntities"}),", ",(0,s.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,s.jsx)(n.code,{children:"verbose?"}),"): ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONEntity",children:(0,s.jsx)(n.code,{children:"JSONEntity"})})]}),"\n",(0,s.jsx)(n.p,{children:"Helper function to get a random JSON entity from an array of JSON entities."}),"\n",(0,s.jsx)(n.p,{children:"(A JSON entity is an entity inside of a JSON room. A JSON room is an XML file converted to JSON\nso that it can be directly imported into your mod.)"}),"\n",(0,s.jsxs)(n.p,{children:["Note that this function does not simply choose a random element in the provided array; it will\nproperly account for each room weight using the algorithm from:\n",(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/1761626/weighted-random-numbers",children:"https://stackoverflow.com/questions/1761626/weighted-random-numbers"})]}),"\n",(0,s.jsxs)(n.p,{children:["If you want an unseeded entity, you must explicitly pass ",(0,s.jsx)(n.code,{children:"undefined"})," to the ",(0,s.jsx)(n.code,{children:"seedOrRNG"}),"\nparameter."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"jsonEntities"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONEntity",children:(0,s.jsx)(n.code,{children:"JSONEntity"})}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The array of entities to randomly choose between."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"seedOrRNG"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"RNG"})," | ",(0,s.jsx)(n.code,{children:"Seed"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(n.code,{children:"Seed"})," or ",(0,s.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,s.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,s.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,s.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"verbose"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:'Optional. If specified, will write entries to the "log.txt" file that describe what the function is doing. Default is false.'})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONEntity",children:(0,s.jsx)(n.code,{children:"JSONEntity"})})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/jsonRoom.ts#L166",children:"packages/isaacscript-common/src/functions/jsonRoom.ts:166"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"getrandomjsonroom",children:"getRandomJSONRoom"}),"\n",(0,s.jsxs)(n.p,{children:["\u25b8 ",(0,s.jsx)(n.strong,{children:"getRandomJSONRoom"}),"(",(0,s.jsx)(n.code,{children:"jsonRooms"}),", ",(0,s.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,s.jsx)(n.code,{children:"verbose?"}),"): ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})})]}),"\n",(0,s.jsx)(n.p,{children:"Helper function to get a random JSON room from an array of JSON rooms."}),"\n",(0,s.jsx)(n.p,{children:"(A JSON room is an XML file converted to JSON so that it can be directly imported into your mod.)"}),"\n",(0,s.jsxs)(n.p,{children:["Note that this function does not simply choose a random element in the provided array; it will\nproperly account for each room weight using the algorithm from:\n",(0,s.jsx)(n.a,{href:"https://stackoverflow.com/questions/1761626/weighted-random-numbers",children:"https://stackoverflow.com/questions/1761626/weighted-random-numbers"})]}),"\n",(0,s.jsxs)(n.p,{children:["If you want an unseeded room, you must explicitly pass ",(0,s.jsx)(n.code,{children:"undefined"})," to the ",(0,s.jsx)(n.code,{children:"seedOrRNG"})," parameter."]}),"\n",(0,s.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,s.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"jsonRooms"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})}),"[]"]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:"The array of rooms to randomly choose between."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"seedOrRNG"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,s.jsx)(n.code,{children:"undefined"})," | ",(0,s.jsx)(n.code,{children:"RNG"})," | ",(0,s.jsx)(n.code,{children:"Seed"})]}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"undefined"})}),(0,s.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,s.jsx)(n.code,{children:"Seed"})," or ",(0,s.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,s.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,s.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,s.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"verbose"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{style:{textAlign:"left"},children:'Optional. If specified, will write entries to the "log.txt" file that describe what the function is doing. Default is false.'})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/isaacscript-common/other/interfaces/JSONRoom",children:(0,s.jsx)(n.code,{children:"JSONRoom"})})}),"\n",(0,s.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/jsonRoom.ts#L211",children:"packages/isaacscript-common/src/functions/jsonRoom.ts:211"})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(14041);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);