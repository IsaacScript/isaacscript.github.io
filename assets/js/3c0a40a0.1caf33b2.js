"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[13103],{73270:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var t=i(31085),l=i(71184);const s={custom_edit_url:null},d="ModCallbackRepentogon",r={id:"isaac-typescript-definitions/enums/ModCallbackRepentogon",title:"ModCallbackRepentogon",description:"Callbacks for REPENTOGON, an exe-hack which expands the modding API.",source:"@site/docs/isaac-typescript-definitions/enums/ModCallbackRepentogon.md",sourceDirName:"isaac-typescript-definitions/enums",slug:"/isaac-typescript-definitions/enums/ModCallbackRepentogon",permalink:"/isaac-typescript-definitions/enums/ModCallbackRepentogon",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacTypeScriptDefinitions",previous:{title:"ModCallback",permalink:"/isaac-typescript-definitions/enums/ModCallback"},next:{title:"ModConfigMenuOptionType",permalink:"/isaac-typescript-definitions/enums/ModConfigMenuOptionType"}},a={},c=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"PRE_ADD_COLLECTIBLE",id:"pre_add_collectible",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"POST_ADD_COLLECTIBLE",id:"post_add_collectible",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"POST_ENTITY_TAKE_DMG",id:"post_entity_take_dmg",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"PRE_ENTITY_TAKE_DMG",id:"pre_entity_take_dmg",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"PRE_PLAYER_TAKE_DMG",id:"pre_player_take_dmg",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"POST_GRID_ROCK_DESTROY",id:"post_grid_rock_destroy",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"PRE_GRID_HURT_DAMAGE",id:"pre_grid_hurt_damage",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"POST_GRID_HURT_DAMAGE",id:"post_grid_hurt_damage",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"HUD_UPDATE",id:"hud_update",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"HUD_POST_UPDATE",id:"hud_post_update",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"POST_HUD_RENDER",id:"post_hud_render",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"POST_MAIN_MENU_RENDER",id:"post_main_menu_render",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"PRE_SFX_PLAY",id:"pre_sfx_play",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"POST_SFX_PLAY",id:"post_sfx_play",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"PRE_MUSIC_PLAY",id:"pre_music_play",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"PRE_MUSIC_LAYER_TOGGLE",id:"pre_music_layer_toggle",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"PRE_RENDER_PLAYER_HEAD",id:"pre_render_player_head",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"PRE_RENDER_PLAYER_BODY",id:"pre_render_player_body",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"PRE_ENTITY_THROW",id:"pre_entity_throw",level:3},{value:"Defined in",id:"defined-in-18",level:4},{value:"POST_ENTITY_THROW",id:"post_entity_throw",level:3},{value:"Defined in",id:"defined-in-19",level:4},{value:"POST_PLAYER_LEVEL_STATS_INIT",id:"post_player_level_stats_init",level:3},{value:"Defined in",id:"defined-in-20",level:4},{value:"PRE_ROOM_EXIT",id:"pre_room_exit",level:3},{value:"Defined in",id:"defined-in-21",level:4},{value:"PRE_LEVEL_INIT",id:"pre_level_init",level:3},{value:"Defined in",id:"defined-in-22",level:4},{value:"PRE_TRIGGER_PLAYER_DEATH",id:"pre_trigger_player_death",level:3},{value:"Defined in",id:"defined-in-23",level:4},{value:"PRE_RESTOCK_SHOP",id:"pre_restock_shop",level:3},{value:"Defined in",id:"defined-in-24",level:4},{value:"POST_RESTOCK_SHOP",id:"post_restock_shop",level:3},{value:"Defined in",id:"defined-in-25",level:4},{value:"PRE_CHANGE_ROOM",id:"pre_change_room",level:3},{value:"Defined in",id:"defined-in-26",level:4},{value:"POST_PICKUP_SHOP_PURCHASE",id:"post_pickup_shop_purchase",level:3},{value:"Defined in",id:"defined-in-27",level:4},{value:"GET_FOLLOWER_PRIORITY",id:"get_follower_priority",level:3},{value:"Defined in",id:"defined-in-28",level:4},{value:"PRE_NPC_MORPH",id:"pre_npc_morph",level:3},{value:"Defined in",id:"defined-in-29",level:4},{value:"PRE_PICKUP_MORPH",id:"pre_pickup_morph",level:3},{value:"Defined in",id:"defined-in-30",level:4},{value:"POST_NPC_MORPH",id:"post_npc_morph",level:3},{value:"Defined in",id:"defined-in-31",level:4},{value:"POST_PICKUP_MORPH",id:"post_pickup_morph",level:3},{value:"Defined in",id:"defined-in-32",level:4},{value:"PRE_COMPLETION_MARKS_RENDER",id:"pre_completion_marks_render",level:3},{value:"Defined in",id:"defined-in-33",level:4},{value:"POST_COMPLETION_MARKS_RENDER",id:"post_completion_marks_render",level:3},{value:"Defined in",id:"defined-in-34",level:4},{value:"PRE_PAUSE_SCREEN_RENDER",id:"pre_pause_screen_render",level:3},{value:"Defined in",id:"defined-in-35",level:4},{value:"POST_PAUSE_SCREEN_RENDER",id:"post_pause_screen_render",level:3},{value:"Defined in",id:"defined-in-36",level:4},{value:"PRE_USE_CARD",id:"pre_use_card",level:3},{value:"Defined in",id:"defined-in-37",level:4},{value:"PRE_USE_PILL",id:"pre_use_pill",level:3},{value:"Defined in",id:"defined-in-38",level:4},{value:"GET_SHOP_ITEM_PRICE",id:"get_shop_item_price",level:3},{value:"Defined in",id:"defined-in-39",level:4},{value:"PLAYER_GET_HEALTH_TYPE",id:"player_get_health_type",level:3},{value:"Defined in",id:"defined-in-40",level:4},{value:"PRE_ROOM_TRIGGER_CLEAR",id:"pre_room_trigger_clear",level:3},{value:"Defined in",id:"defined-in-41",level:4},{value:"PRE_PLAYER_TRIGGER_ROOM_CLEAR",id:"pre_player_trigger_room_clear",level:3},{value:"Defined in",id:"defined-in-42",level:4},{value:"PRE_FAMILIAR_RENDER",id:"pre_familiar_render",level:3},{value:"Defined in",id:"defined-in-43",level:4},{value:"PRE_NPC_RENDER",id:"pre_npc_render",level:3},{value:"Defined in",id:"defined-in-44",level:4},{value:"PRE_PLAYER_RENDER",id:"pre_player_render",level:3},{value:"Defined in",id:"defined-in-45",level:4},{value:"PRE_PICKUP_RENDER",id:"pre_pickup_render",level:3},{value:"Defined in",id:"defined-in-46",level:4},{value:"PRE_TEAR_RENDER",id:"pre_tear_render",level:3},{value:"Defined in",id:"defined-in-47",level:4},{value:"PRE_PROJECTILE_RENDER",id:"pre_projectile_render",level:3},{value:"Defined in",id:"defined-in-48",level:4},{value:"PRE_KNIFE_RENDER",id:"pre_knife_render",level:3},{value:"Defined in",id:"defined-in-49",level:4},{value:"PRE_EFFECT_RENDER",id:"pre_effect_render",level:3},{value:"Defined in",id:"defined-in-50",level:4},{value:"PRE_BOMB_RENDER",id:"pre_bomb_render",level:3},{value:"Defined in",id:"defined-in-51",level:4},{value:"PRE_SLOT_RENDER",id:"pre_slot_render",level:3},{value:"Defined in",id:"defined-in-52",level:4},{value:"POST_SLOT_RENDER",id:"post_slot_render",level:3},{value:"Defined in",id:"defined-in-53",level:4},{value:"PRE_GRID_ENTITY_SPAWN",id:"pre_grid_entity_spawn",level:3},{value:"Defined in",id:"defined-in-54",level:4},{value:"POST_GRID_ENTITY_SPAWN",id:"post_grid_entity_spawn",level:3},{value:"Defined in",id:"defined-in-55",level:4},{value:"PLAYER_GET_ACTIVE_MAX_CHARGE",id:"player_get_active_max_charge",level:3},{value:"Defined in",id:"defined-in-56",level:4},{value:"PLAYER_GET_ACTIVE_MIN_USABLE_CHARGE",id:"player_get_active_min_usable_charge",level:3},{value:"Defined in",id:"defined-in-57",level:4},{value:"PLAYER_GET_HEART_LIMIT",id:"player_get_heart_limit",level:3},{value:"Defined in",id:"defined-in-58",level:4},{value:"POST_ITEM_OVERLAY_UPDATE",id:"post_item_overlay_update",level:3},{value:"Defined in",id:"defined-in-59",level:4},{value:"PRE_ITEM_OVERLAY_SHOW",id:"pre_item_overlay_show",level:3},{value:"Defined in",id:"defined-in-60",level:4},{value:"POST_PLAYER_NEW_ROOM_TEMP_EFFECTS",id:"post_player_new_room_temp_effects",level:3},{value:"Defined in",id:"defined-in-61",level:4},{value:"POST_PLAYER_NEW_LEVEL",id:"post_player_new_level",level:3},{value:"Defined in",id:"defined-in-62",level:4},{value:"POST_PLAYER_GET_MULTI_SHOT_PARAMS",id:"post_player_get_multi_shot_params",level:3},{value:"Defined in",id:"defined-in-63",level:4},{value:"PRE_REPLACE_SPRITESHEET",id:"pre_replace_spritesheet",level:3},{value:"Defined in",id:"defined-in-64",level:4},{value:"POST_REPLACE_SPRITESHEET",id:"post_replace_spritesheet",level:3},{value:"Defined in",id:"defined-in-65",level:4},{value:"PRE_PLANETARIUM_APPLY_STAGE_PENALTY",id:"pre_planetarium_apply_stage_penalty",level:3},{value:"Defined in",id:"defined-in-66",level:4},{value:"PRE_PLANETARIUM_APPLY_PLANETARIUM_PENALTY",id:"pre_planetarium_apply_planetarium_penalty",level:3},{value:"Defined in",id:"defined-in-67",level:4},{value:"PRE_PLANETARIUM_APPLY_TREASURE_PENALTY",id:"pre_planetarium_apply_treasure_penalty",level:3},{value:"Defined in",id:"defined-in-68",level:4},{value:"PRE_PLANETARIUM_APPLY_ITEMS",id:"pre_planetarium_apply_items",level:3},{value:"Defined in",id:"defined-in-69",level:4},{value:"PRE_PLANETARIUM_APPLY_TELESCOPE_LENS",id:"pre_planetarium_apply_telescope_lens",level:3},{value:"Defined in",id:"defined-in-70",level:4},{value:"POST_PLANETARIUM_CALCULATE",id:"post_planetarium_calculate",level:3},{value:"Defined in",id:"defined-in-71",level:4},{value:"POST_SLOT_INIT",id:"post_slot_init",level:3},{value:"Defined in",id:"defined-in-72",level:4},{value:"POST_SLOT_UPDATE",id:"post_slot_update",level:3},{value:"Defined in",id:"defined-in-73",level:4},{value:"PRE_SLOT_CREATE_EXPLOSION_DROPS",id:"pre_slot_create_explosion_drops",level:3},{value:"Defined in",id:"defined-in-74",level:4},{value:"POST_SLOT_CREATE_EXPLOSION_DROPS",id:"post_slot_create_explosion_drops",level:3},{value:"Defined in",id:"defined-in-75",level:4},{value:"PRE_SLOT_SET_PRIZE_COLLECTIBLE",id:"pre_slot_set_prize_collectible",level:3},{value:"Defined in",id:"defined-in-76",level:4},{value:"POST_SLOT_SET_PRIZE_COLLECTIBLE",id:"post_slot_set_prize_collectible",level:3},{value:"Defined in",id:"defined-in-77",level:4},{value:"PRE_DEVIL_APPLY_ITEMS",id:"pre_devil_apply_items",level:3},{value:"Defined in",id:"defined-in-78",level:4},{value:"PRE_DEVIL_APPLY_STAGE_PENALTY",id:"pre_devil_apply_stage_penalty",level:3},{value:"Defined in",id:"defined-in-79",level:4},{value:"PRE_DEVIL_APPLY_SPECIAL_ITEMS",id:"pre_devil_apply_special_items",level:3},{value:"Defined in",id:"defined-in-80",level:4},{value:"POST_DEVIL_CALCULATE",id:"post_devil_calculate",level:3},{value:"Defined in",id:"defined-in-81",level:4},{value:"PRE_COMPLETION_MARK_GET",id:"pre_completion_mark_get",level:3},{value:"Defined in",id:"defined-in-82",level:4},{value:"POST_COMPLETION_MARK_GET",id:"post_completion_mark_get",level:3},{value:"Defined in",id:"defined-in-83",level:4},{value:"PRE_COMPLETION_EVENT",id:"pre_completion_event",level:3},{value:"Defined in",id:"defined-in-84",level:4},{value:"POST_USE_PILL",id:"post_use_pill",level:3},{value:"Defined in",id:"defined-in-85",level:4},{value:"POST_PLAYER_HUD_RENDER_ACTIVE_ITEM",id:"post_player_hud_render_active_item",level:3},{value:"Defined in",id:"defined-in-86",level:4},{value:"POST_PLAYER_HUD_RENDER_HEARTS",id:"post_player_hud_render_hearts",level:3},{value:"Defined in",id:"defined-in-87",level:4},{value:"PRE_GET_LIGHTING_ALPHA",id:"pre_get_lighting_alpha",level:3},{value:"Defined in",id:"defined-in-88",level:4},{value:"PRE_RENDER_GRID_LIGHTING",id:"pre_render_grid_lighting",level:3},{value:"Defined in",id:"defined-in-89",level:4},{value:"PRE_RENDER_ENTITY_LIGHTING",id:"pre_render_entity_lighting",level:3},{value:"Defined in",id:"defined-in-90",level:4},{value:"PRE_PLAYER_APPLY_INNATE_COLLECTIBLE_NUM",id:"pre_player_apply_innate_collectible_num",level:3},{value:"Defined in",id:"defined-in-91",level:4},{value:"PRE_MUSIC_PLAY_JINGLE",id:"pre_music_play_jingle",level:3},{value:"Defined in",id:"defined-in-92",level:4},{value:"POST_TRIGGER_COLLECTIBLE_REMOVED",id:"post_trigger_collectible_removed",level:3},{value:"Defined in",id:"defined-in-93",level:4},{value:"POST_TRIGGER_TRINKET_ADDED",id:"post_trigger_trinket_added",level:3},{value:"Defined in",id:"defined-in-94",level:4},{value:"POST_TRIGGER_TRINKET_REMOVED",id:"post_trigger_trinket_removed",level:3},{value:"Defined in",id:"defined-in-95",level:4},{value:"POST_TRIGGER_WEAPON_FIRED",id:"post_trigger_weapon_fired",level:3},{value:"Defined in",id:"defined-in-96",level:4},{value:"POST_LEVEL_LAYOUT_GENERATED",id:"post_level_layout_generated",level:3},{value:"Defined in",id:"defined-in-97",level:4},{value:"POST_NIGHTMARE_SCENE_RENDER",id:"post_nightmare_scene_render",level:3},{value:"Defined in",id:"defined-in-98",level:4},{value:"POST_NIGHTMARE_SCENE_SHOW",id:"post_nightmare_scene_show",level:3},{value:"Defined in",id:"defined-in-99",level:4},{value:"MC_PRE_LEVEL_SELECT",id:"mc_pre_level_select",level:3},{value:"Defined in",id:"defined-in-100",level:4},{value:"POST_WEAPON_FIRE",id:"post_weapon_fire",level:3},{value:"Defined in",id:"defined-in-101",level:4},{value:"PRE_PLAYER_USE_BOMB",id:"pre_player_use_bomb",level:3},{value:"Defined in",id:"defined-in-102",level:4},{value:"POST_PLAYER_USE_BOMB",id:"post_player_use_bomb",level:3},{value:"Defined in",id:"defined-in-103",level:4},{value:"PRE_NPC_PICK_TARGET",id:"pre_npc_pick_target",level:3},{value:"Defined in",id:"defined-in-104",level:4},{value:"PRE_PLAYER_COLLISION",id:"pre_player_collision",level:3},{value:"Defined in",id:"defined-in-105",level:4},{value:"POST_PLAYER_COLLISION",id:"post_player_collision",level:3},{value:"Defined in",id:"defined-in-106",level:4},{value:"PRE_TEAR_COLLISION",id:"pre_tear_collision",level:3},{value:"Defined in",id:"defined-in-107",level:4},{value:"POST_TEAR_COLLISION",id:"post_tear_collision",level:3},{value:"Defined in",id:"defined-in-108",level:4},{value:"PRE_FAMILIAR_COLLISION",id:"pre_familiar_collision",level:3},{value:"Defined in",id:"defined-in-109",level:4},{value:"POST_FAMILIAR_COLLISION",id:"post_familiar_collision",level:3},{value:"Defined in",id:"defined-in-110",level:4},{value:"PRE_BOMB_COLLISION",id:"pre_bomb_collision",level:3},{value:"Defined in",id:"defined-in-111",level:4},{value:"POST_BOMB_COLLISION",id:"post_bomb_collision",level:3},{value:"Defined in",id:"defined-in-112",level:4},{value:"PRE_PICKUP_COLLISION",id:"pre_pickup_collision",level:3},{value:"Defined in",id:"defined-in-113",level:4},{value:"POST_PICKUP_COLLISION",id:"post_pickup_collision",level:3},{value:"Defined in",id:"defined-in-114",level:4},{value:"PRE_SLOT_COLLISION",id:"pre_slot_collision",level:3},{value:"Defined in",id:"defined-in-115",level:4},{value:"POST_SLOT_COLLISION",id:"post_slot_collision",level:3},{value:"Defined in",id:"defined-in-116",level:4},{value:"PRE_KNIFE_COLLISION",id:"pre_knife_collision",level:3},{value:"Defined in",id:"defined-in-117",level:4},{value:"POST_KNIFE_COLLISION",id:"post_knife_collision",level:3},{value:"Defined in",id:"defined-in-118",level:4},{value:"PRE_PROJECTILE_COLLISION",id:"pre_projectile_collision",level:3},{value:"Defined in",id:"defined-in-119",level:4},{value:"POST_PROJECTILE_COLLISION",id:"post_projectile_collision",level:3},{value:"Defined in",id:"defined-in-120",level:4},{value:"PRE_NPC_COLLISION",id:"pre_npc_collision",level:3},{value:"Defined in",id:"defined-in-121",level:4},{value:"POST_NPC_COLLISION",id:"post_npc_collision",level:3},{value:"Defined in",id:"defined-in-122",level:4},{value:"PRE_LASER_COLLISION",id:"pre_laser_collision",level:3},{value:"Defined in",id:"defined-in-123",level:4},{value:"POST_LASER_COLLISION",id:"post_laser_collision",level:3},{value:"Defined in",id:"defined-in-124",level:4},{value:"CONSOLE_AUTOCOMPLETE",id:"console_autocomplete",level:3},{value:"Defined in",id:"defined-in-125",level:4},{value:"PLAYER_INIT_PRE_LEVEL_INIT_STATS",id:"player_init_pre_level_init_stats",level:3},{value:"Defined in",id:"defined-in-126",level:4},{value:"PRE_NEW_ROOM",id:"pre_new_room",level:3},{value:"Defined in",id:"defined-in-127",level:4},{value:"PRE_MEGA_SATAN_ENDING",id:"pre_mega_satan_ending",level:3},{value:"Defined in",id:"defined-in-128",level:4},{value:"POST_MODS_LOADED",id:"post_mods_loaded",level:3},{value:"Defined in",id:"defined-in-129",level:4},{value:"POST_ITEM_OVERLAY_SHOW",id:"post_item_overlay_show",level:3},{value:"Defined in",id:"defined-in-130",level:4},{value:"PRE_LEVEL_PLACE_ROOM",id:"pre_level_place_room",level:3},{value:"Defined in",id:"defined-in-131",level:4},{value:"PRE_NPC_SPLIT",id:"pre_npc_split",level:3},{value:"Defined in",id:"defined-in-132",level:4},{value:"PRE_ROOM_GRID_ENTITY_SPAWN",id:"pre_room_grid_entity_spawn",level:3},{value:"Defined in",id:"defined-in-133",level:4},{value:"POST_FAMILIAR_FIRE_PROJECTILE",id:"post_familiar_fire_projectile",level:3},{value:"Defined in",id:"defined-in-134",level:4},{value:"POST_FIRE_BOMB",id:"post_fire_bomb",level:3},{value:"Defined in",id:"defined-in-135",level:4},{value:"POST_FIRE_BONE_CLUB",id:"post_fire_bone_club",level:3},{value:"Defined in",id:"defined-in-136",level:4},{value:"POST_FIRE_BRIMSTONE",id:"post_fire_brimstone",level:3},{value:"Defined in",id:"defined-in-137",level:4},{value:"POST_FIRE_BRIMSTONE_BALL",id:"post_fire_brimstone_ball",level:3},{value:"Defined in",id:"defined-in-138",level:4},{value:"POST_FIRE_KNIFE",id:"post_fire_knife",level:3},{value:"Defined in",id:"defined-in-139",level:4},{value:"POST_FIRE_SWORD",id:"post_fire_sword",level:3},{value:"Defined in",id:"defined-in-140",level:4},{value:"POST_FIRE_TECH_LASER",id:"post_fire_tech_laser",level:3},{value:"Defined in",id:"defined-in-141",level:4},{value:"POST_FIRE_TECH_X_LASER",id:"post_fire_tech_x_laser",level:3},{value:"Defined in",id:"defined-in-142",level:4},{value:"POST_FAMILIAR_FIRE_BRIMSTONE",id:"post_familiar_fire_brimstone",level:3},{value:"Defined in",id:"defined-in-143",level:4},{value:"POST_FAMILIAR_FIRE_TECH_LASER",id:"post_familiar_fire_tech_laser",level:3},{value:"Defined in",id:"defined-in-144",level:4},{value:"GET_IS_PERSISTENT_ROOM_ENTITY",id:"get_is_persistent_room_entity",level:3},{value:"Defined in",id:"defined-in-145",level:4},{value:"PRE_PLAYER_HUD_TRINKET_RENDER",id:"pre_player_hud_trinket_render",level:3},{value:"Defined in",id:"defined-in-146",level:4},{value:"PRE_GRID_ENTITY_DECORATION_UPDATE",id:"pre_grid_entity_decoration_update",level:3},{value:"Defined in",id:"defined-in-147",level:4},{value:"POST_GRID_ENTITY_DECORATION_UPDATE",id:"post_grid_entity_decoration_update",level:3},{value:"Defined in",id:"defined-in-148",level:4},{value:"PRE_GRID_ENTITY_DOOR_UPDATE",id:"pre_grid_entity_door_update",level:3},{value:"Defined in",id:"defined-in-149",level:4},{value:"POST_GRID_ENTITY_DOOR_UPDATE",id:"post_grid_entity_door_update",level:3},{value:"Defined in",id:"defined-in-150",level:4},{value:"PRE_GRID_ENTITY_FIRE_UPDATE",id:"pre_grid_entity_fire_update",level:3},{value:"Defined in",id:"defined-in-151",level:4},{value:"POST_GRID_ENTITY_FIRE_UPDATE",id:"post_grid_entity_fire_update",level:3},{value:"Defined in",id:"defined-in-152",level:4},{value:"PRE_GRID_ENTITY_GRAVITY_UPDATE",id:"pre_grid_entity_gravity_update",level:3},{value:"Defined in",id:"defined-in-153",level:4},{value:"POST_GRID_ENTITY_GRAVITY_UPDATE",id:"post_grid_entity_gravity_update",level:3},{value:"Defined in",id:"defined-in-154",level:4},{value:"PRE_GRID_ENTITY_LOCK_UPDATE",id:"pre_grid_entity_lock_update",level:3},{value:"Defined in",id:"defined-in-155",level:4},{value:"POST_GRID_ENTITY_LOCK_UPDATE",id:"post_grid_entity_lock_update",level:3},{value:"Defined in",id:"defined-in-156",level:4},{value:"PRE_GRID_ENTITY_PIT_UPDATE",id:"pre_grid_entity_pit_update",level:3},{value:"Defined in",id:"defined-in-157",level:4},{value:"POST_GRID_ENTITY_PIT_UPDATE",id:"post_grid_entity_pit_update",level:3},{value:"Defined in",id:"defined-in-158",level:4},{value:"PRE_GRID_ENTITY_POOP_UPDATE",id:"pre_grid_entity_poop_update",level:3},{value:"Defined in",id:"defined-in-159",level:4},{value:"POST_GRID_ENTITY_POOP_UPDATE",id:"post_grid_entity_poop_update",level:3},{value:"Defined in",id:"defined-in-160",level:4},{value:"PRE_GRID_ENTITY_PRESSURE_PLATE_UPDATE",id:"pre_grid_entity_pressure_plate_update",level:3},{value:"Defined in",id:"defined-in-161",level:4},{value:"POST_GRID_ENTITY_PRESSURE_PLATE_UPDATE",id:"post_grid_entity_pressure_plate_update",level:3},{value:"Defined in",id:"defined-in-162",level:4},{value:"PRE_GRID_ENTITY_ROCK_UPDATE",id:"pre_grid_entity_rock_update",level:3},{value:"Defined in",id:"defined-in-163",level:4},{value:"POST_GRID_ENTITY_ROCK_UPDATE",id:"post_grid_entity_rock_update",level:3},{value:"Defined in",id:"defined-in-164",level:4},{value:"PRE_GRID_ENTITY_SPIKES_UPDATE",id:"pre_grid_entity_spikes_update",level:3},{value:"Defined in",id:"defined-in-165",level:4},{value:"POST_GRID_ENTITY_SPIKES_UPDATE",id:"post_grid_entity_spikes_update",level:3},{value:"Defined in",id:"defined-in-166",level:4},{value:"PRE_GRID_ENTITY_STAIRCASE_UPDATE",id:"pre_grid_entity_staircase_update",level:3},{value:"Defined in",id:"defined-in-167",level:4},{value:"POST_GRID_ENTITY_STAIRCASE_UPDATE",id:"post_grid_entity_staircase_update",level:3},{value:"Defined in",id:"defined-in-168",level:4},{value:"PRE_GRID_ENTITY_STATUE_UPDATE",id:"pre_grid_entity_statue_update",level:3},{value:"Defined in",id:"defined-in-169",level:4},{value:"POST_GRID_ENTITY_STATUE_UPDATE",id:"post_grid_entity_statue_update",level:3},{value:"Defined in",id:"defined-in-170",level:4},{value:"PRE_GRID_ENTITY_TELEPORTER_UPDATE",id:"pre_grid_entity_teleporter_update",level:3},{value:"Defined in",id:"defined-in-171",level:4},{value:"POST_GRID_ENTITY_TELEPORTER_UPDATE",id:"post_grid_entity_teleporter_update",level:3},{value:"Defined in",id:"defined-in-172",level:4},{value:"PRE_GRID_ENTITY_TRAPDOOR_UPDATE",id:"pre_grid_entity_trapdoor_update",level:3},{value:"Defined in",id:"defined-in-173",level:4},{value:"POST_GRID_ENTITY_TRAPDOOR_UPDATE",id:"post_grid_entity_trapdoor_update",level:3},{value:"Defined in",id:"defined-in-174",level:4},{value:"PRE_GRID_ENTITY_WEB_UPDATE",id:"pre_grid_entity_web_update",level:3},{value:"Defined in",id:"defined-in-175",level:4},{value:"POST_GRID_ENTITY_WEB_UPDATE",id:"post_grid_entity_web_update",level:3},{value:"Defined in",id:"defined-in-176",level:4},{value:"PRE_GRID_ENTITY_SPIKES_RENDER",id:"pre_grid_entity_spikes_render",level:3},{value:"Defined in",id:"defined-in-177",level:4},{value:"POST_GRID_ENTITY_SPIKES_RENDER",id:"post_grid_entity_spikes_render",level:3},{value:"Defined in",id:"defined-in-178",level:4},{value:"PRE_GRID_ENTITY_WEB_RENDER",id:"pre_grid_entity_web_render",level:3},{value:"Defined in",id:"defined-in-179",level:4},{value:"POST_GRID_ENTITY_WEB_RENDER",id:"post_grid_entity_web_render",level:3},{value:"Defined in",id:"defined-in-180",level:4},{value:"PRE_GRID_ENTITY_TNT_RENDER",id:"pre_grid_entity_tnt_render",level:3},{value:"Defined in",id:"defined-in-181",level:4},{value:"POST_GRID_ENTITY_TNT_RENDER",id:"post_grid_entity_tnt_render",level:3},{value:"Defined in",id:"defined-in-182",level:4},{value:"PRE_GRID_ENTITY_TRAPDOOR_RENDER",id:"pre_grid_entity_trapdoor_render",level:3},{value:"Defined in",id:"defined-in-183",level:4},{value:"POST_GRID_ENTITY_TRAPDOOR_RENDER",id:"post_grid_entity_trapdoor_render",level:3},{value:"Defined in",id:"defined-in-184",level:4},{value:"PRE_GRID_ENTITY_STAIRCASE_RENDER",id:"pre_grid_entity_staircase_render",level:3},{value:"Defined in",id:"defined-in-185",level:4},{value:"POST_GRID_ENTITY_STAIRCASE_RENDER",id:"post_grid_entity_staircase_render",level:3},{value:"Defined in",id:"defined-in-186",level:4},{value:"PRE_GRID_ENTITY_DECORATION_RENDER",id:"pre_grid_entity_decoration_render",level:3},{value:"Defined in",id:"defined-in-187",level:4},{value:"POST_GRID_ENTITY_DECORATION_RENDER",id:"post_grid_entity_decoration_render",level:3},{value:"Defined in",id:"defined-in-188",level:4},{value:"PRE_GRID_ENTITY_DOOR_RENDER",id:"pre_grid_entity_door_render",level:3},{value:"Defined in",id:"defined-in-189",level:4},{value:"POST_GRID_ENTITY_DOOR_RENDER",id:"post_grid_entity_door_render",level:3},{value:"Defined in",id:"defined-in-190",level:4},{value:"PRE_GRID_ENTITY_FIRE_RENDER",id:"pre_grid_entity_fire_render",level:3},{value:"Defined in",id:"defined-in-191",level:4},{value:"POST_GRID_ENTITY_FIRE_RENDER",id:"post_grid_entity_fire_render",level:3},{value:"Defined in",id:"defined-in-192",level:4},{value:"PRE_GRID_ENTITY_LOCK_RENDER",id:"pre_grid_entity_lock_render",level:3},{value:"Defined in",id:"defined-in-193",level:4},{value:"POST_GRID_ENTITY_LOCK_RENDER",id:"post_grid_entity_lock_render",level:3},{value:"Defined in",id:"defined-in-194",level:4},{value:"PRE_GRID_ENTITY_TELEPORTER_RENDER",id:"pre_grid_entity_teleporter_render",level:3},{value:"Defined in",id:"defined-in-195",level:4},{value:"POST_GRID_ENTITY_TELEPORTER_RENDER",id:"post_grid_entity_teleporter_render",level:3},{value:"Defined in",id:"defined-in-196",level:4},{value:"PRE_GRID_ENTITY_PIT_RENDER",id:"pre_grid_entity_pit_render",level:3},{value:"Defined in",id:"defined-in-197",level:4},{value:"POST_GRID_ENTITY_PIT_RENDER",id:"post_grid_entity_pit_render",level:3},{value:"Defined in",id:"defined-in-198",level:4},{value:"PRE_GRID_ENTITY_POOP_RENDER",id:"pre_grid_entity_poop_render",level:3},{value:"Defined in",id:"defined-in-199",level:4},{value:"POST_GRID_ENTITY_POOP_RENDER",id:"post_grid_entity_poop_render",level:3},{value:"Defined in",id:"defined-in-200",level:4},{value:"PRE_GRID_ENTITY_ROCK_RENDER",id:"pre_grid_entity_rock_render",level:3},{value:"Defined in",id:"defined-in-201",level:4},{value:"POST_GRID_ENTITY_ROCK_RENDER",id:"post_grid_entity_rock_render",level:3},{value:"Defined in",id:"defined-in-202",level:4},{value:"PRE_GRID_ENTITY_PRESSURE_PLATE_RENDER",id:"pre_grid_entity_pressure_plate_render",level:3},{value:"Defined in",id:"defined-in-203",level:4},{value:"POST_GRID_ENTITY_PRESSURE_PLATE_RENDER",id:"post_grid_entity_pressure_plate_render",level:3},{value:"Defined in",id:"defined-in-204",level:4},{value:"PRE_GRID_ENTITY_WALL_RENDER",id:"pre_grid_entity_wall_render",level:3},{value:"Defined in",id:"defined-in-205",level:4},{value:"POST_GRID_ENTITY_WALL_RENDER",id:"post_grid_entity_wall_render",level:3},{value:"Defined in",id:"defined-in-206",level:4},{value:"POST_SAVE_SLOT_LOAD",id:"post_save_slot_load",level:3},{value:"Defined in",id:"defined-in-207",level:4}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"modcallbackrepentogon",children:"ModCallbackRepentogon"}),"\n",(0,t.jsx)(n.p,{children:"Callbacks for REPENTOGON, an exe-hack which expands the modding API."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"See"})})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://repentogon.com/index.html",children:"https://repentogon.com/index.html"})}),"\n",(0,t.jsx)(n.h2,{id:"enumeration-members",children:"Enumeration Members"}),"\n",(0,t.jsx)(n.h3,{id:"pre_add_collectible",children:"PRE_ADD_COLLECTIBLE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_ADD_COLLECTIBLE"})," = ",(0,t.jsx)(n.code,{children:"1004"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires when a collectible is being added to a player. Return ",(0,t.jsx)(n.code,{children:"CollectibleType"})," to override the\ncollectible given. Alternatively, you can return an array of parameters to further modify the\ngiven collectible."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"CollectibleType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preAddCollectible(\n  collectible: CollectibleType,\n  charge: int,\n  firstTime: boolean,\n  slot: ActiveSlot,\n  varData: int,\n  player: EntityPlayer\n): CollectibleType | [CollectibleType, int, boolean, ActiveSlot, int] | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L27",children:"ModCallbackRepentogon.ts:27"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_add_collectible",children:"POST_ADD_COLLECTIBLE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_ADD_COLLECTIBLE"})," = ",(0,t.jsx)(n.code,{children:"1005"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a collectible is added to a player."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"CollectibleType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postAddCollectible(\n  collectible: CollectibleType,\n  charge: int,\n  firstTime: boolean,\n  slot: ActiveSlot,\n  varData: int,\n  player: EntityPlayer\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L47",children:"ModCallbackRepentogon.ts:47"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_entity_take_dmg",children:"POST_ENTITY_TAKE_DMG"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_ENTITY_TAKE_DMG"})," = ",(0,t.jsx)(n.code,{children:"1006"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after an entity takes damage."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postEntityTakeDmg(\n  entity: Entity,\n  damage: number,\n  damageFlags: BitFlags<DamageFlag>,\n  source: EntityRef,\n  damageCountdown: int\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L66",children:"ModCallbackRepentogon.ts:66"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_entity_take_dmg",children:"PRE_ENTITY_TAKE_DMG"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_ENTITY_TAKE_DMG"})," = ",(0,t.jsx)(n.code,{children:"1007"})]}),"\n",(0,t.jsxs)(n.p,{children:["Behaves like ",(0,t.jsx)(n.code,{children:"ModCallback.ENTITY_TAKE_DMG"})," but with additional functionality. You can return an\narray of parameters to override how the entity takes damage."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preEntityTakeDmg(\n  entity: Entity,\n  damage: number,\n  damageFlags: BitFlags<DamageFlag>,\n  source: EntityRef,\n  damageCountdown: int\n): [int, BitFlags<DamageFlag>, int] | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L86",children:"ModCallbackRepentogon.ts:86"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_player_take_dmg",children:"PRE_PLAYER_TAKE_DMG"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLAYER_TAKE_DMG"})," = ",(0,t.jsx)(n.code,{children:"1008"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires when a player is about to take damage. This callback fires earlier than\n",(0,t.jsx)(n.code,{children:"ModCallback.ENTITY_TAKE_DAMAGE"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Return false to cancel the damage, which is useful for giving player invincibility that takes\nprecedence over other damage negation effects, such as Holy Mantle."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlayerTakeDmg(\n  player: EntityPlayer,\n  damage: number,\n  damageFlags: BitFlags<DamageFlag>,\n  source: EntityRef,\n  damageCountdown: int,\n): false | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L109",children:"ModCallbackRepentogon.ts:109"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_rock_destroy",children:"POST_GRID_ROCK_DESTROY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ROCK_DESTROY"})," = ",(0,t.jsx)(n.code,{children:"1011"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a rock GridEntity is destroyed."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridRockDestroy(\n  rock: GridEntityRock,\n  gridType: GridEntityType,\n  immediate: boolean,\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L126",children:"ModCallbackRepentogon.ts:126"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_hurt_damage",children:"PRE_GRID_HURT_DAMAGE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_HURT_DAMAGE"})," = ",(0,t.jsx)(n.code,{children:"1012"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when an entity is about to be hurt from a GridEntity. Return false to ignore damage."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridHurtDamage(\n  gridEntity: GridEntityRock,\n  tookDamage: Entity,\n  damageAmount: int,\n  damageFlags: BitFlags<DamageFlag>\n): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L144",children:"ModCallbackRepentogon.ts:144"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_hurt_damage",children:"POST_GRID_HURT_DAMAGE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_HURT_DAMAGE"})," = ",(0,t.jsx)(n.code,{children:"1013"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after an entity is hurt from a GridEntity."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridHurtDamage(\n  gridEntity: GridEntityRock,\n  tookDamage: Entity,\n  damageAmount: int,\n  damageFlags: BitFlags<DamageFlag>\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L162",children:"ModCallbackRepentogon.ts:162"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"hud_update",children:"HUD_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"HUD_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1020"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires when ",(0,t.jsx)(n.code,{children:"HUD.Update()"})," is called. The game will always call the function every frame."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function hudUpdate(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L171",children:"ModCallbackRepentogon.ts:171"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"hud_post_update",children:"HUD_POST_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"HUD_POST_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1021"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires when ",(0,t.jsx)(n.code,{children:"HUD.PostUpdate()"})," is called. The game will call the function after ",(0,t.jsx)(n.code,{children:"HUD.Update()"}),"\nis called except for a few cases, such as the game being paused."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function hudPostUpdate(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L181",children:"ModCallbackRepentogon.ts:181"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_hud_render",children:"POST_HUD_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_HUD_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1022"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires every frame the HUD is rendered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postHUDRender(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L190",children:"ModCallbackRepentogon.ts:190"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_main_menu_render",children:"POST_MAIN_MENU_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_MAIN_MENU_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1023"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires every frame the main menu is rendered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postMainMenuRender(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L199",children:"ModCallbackRepentogon.ts:199"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_sfx_play",children:"PRE_SFX_PLAY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_SFX_PLAY"})," = ",(0,t.jsx)(n.code,{children:"1030"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when a sound effect is about to play. Return false to prevent the sound from playing.\nAlternatively, return an array of parameters to modify the sound before it plays."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SoundEffect"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preSFXPlay(\n  id: SoundEffect,\n  volume: number,\n  frameDelay: int,\n  pitch: number,\n  pan: number\n): SoundEffect | boolean | [SoundEffect, number, int, number, number] | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L219",children:"ModCallbackRepentogon.ts:219"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_sfx_play",children:"POST_SFX_PLAY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_SFX_PLAY"})," = ",(0,t.jsx)(n.code,{children:"1031"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a sound effect plays."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SoundEffect"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postSFXPlay(\n  id: SoundEffect,\n  volume: number,\n  frameDelay: int,\n  pitch: number,\n  pan: number\n): SoundEffect | boolean | [SoundEffect, number, int, number, number] | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L238",children:"ModCallbackRepentogon.ts:238"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_music_play",children:"PRE_MUSIC_PLAY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_MUSIC_PLAY"})," = ",(0,t.jsx)(n.code,{children:"1034"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires when a music track is about to play. This callback is fired for both\n",(0,t.jsx)(n.code,{children:"MusicManager.Play()"})," and ",(0,t.jsx)(n.code,{children:"MusicManager.CrossFade()"}),". Use the ",(0,t.jsx)(n.code,{children:"isFade"})," parameter to\ndifferentiate the two."]}),"\n",(0,t.jsxs)(n.p,{children:["Return false to prevent the music from playing. Alternatively, return ",(0,t.jsx)(n.code,{children:"Music"})," to override the\ntrack played without changing the volume or fade rate. Return an array of parameters to further\nmodify the music track."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"Music"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preMusicPlay(\n  id: Music,\n  volumeOrFadeRate: number,\n  isFade: boolean\n): Music | [Music, number] | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L261",children:"ModCallbackRepentogon.ts:261"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_music_layer_toggle",children:"PRE_MUSIC_LAYER_TOGGLE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_MUSIC_LAYER_TOGGLE"})," = ",(0,t.jsx)(n.code,{children:"1035"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Add an enum for the layer."}),"\n",(0,t.jsx)(n.p,{children:"Fires when the currently playing music track is about to have its layer toggled. Return an\ninteger to override which layer is played. Return false to prevent the layer from being\ntoggled."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"int"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preMusicLayerToggle(\n  layerId: int,\n  currentState: boolean\n): int | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L281",children:"ModCallbackRepentogon.ts:281"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_render_player_head",children:"PRE_RENDER_PLAYER_HEAD"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_RENDER_PLAYER_HEAD"})," = ",(0,t.jsx)(n.code,{children:"1038"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the player's head is about to render. Return a Vector to override what position the\nhead renders at. Return false to prevent the head from rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRenderPlayerHead(\n  player: EntityPlayer,\n  renderPosition: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L298",children:"ModCallbackRepentogon.ts:298"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_render_player_body",children:"PRE_RENDER_PLAYER_BODY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_RENDER_PLAYER_BODY"})," = ",(0,t.jsx)(n.code,{children:"1039"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the player's body is about to render. Return a Vector to override what position the\nbody renders at. Return false to prevent the body from rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRenderPlayerBody(\n  player: EntityPlayer,\n  renderPosition: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L315",children:"ModCallbackRepentogon.ts:315"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_entity_throw",children:"PRE_ENTITY_THROW"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_ENTITY_THROW"})," = ",(0,t.jsx)(n.code,{children:"1040"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the player is about to throw an entity. Return a Vector to override the velocity of\nthe thrown entity."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preEntityThrow(\n  throwingPlayer: EntityPlayer,\n  heldEntity: Entity,\n  velocity: Vector\n): Vector | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L329",children:"ModCallbackRepentogon.ts:329"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_entity_throw",children:"POST_ENTITY_THROW"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_ENTITY_THROW"})," = ",(0,t.jsx)(n.code,{children:"1041"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires the player throws an entity."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postEntityThrow(\n  throwingPlayer: EntityPlayer,\n  heldEntity: Entity,\n  velocity: Vector\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L342",children:"ModCallbackRepentogon.ts:342"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_player_level_stats_init",children:"POST_PLAYER_LEVEL_STATS_INIT"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLAYER_LEVEL_STATS_INIT"})," = ",(0,t.jsx)(n.code,{children:"1042"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when a player's special tear type is about to be initialized, such as Azazel's brimstone."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlayerLevelStatsInit(player: EntityPlayer): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L355",children:"ModCallbackRepentogon.ts:355"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_room_exit",children:"PRE_ROOM_EXIT"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_ROOM_EXIT"})," = ",(0,t.jsx)(n.code,{children:"1043"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the current room is about to be changed."}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"newLevel"})," parameter is true when entering a new level or exiting a run, otherwise it's\nfalse."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRoomExit(playerWhoExited: EntityPlayer, newLevel: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L367",children:"ModCallbackRepentogon.ts:367"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_level_init",children:"PRE_LEVEL_INIT"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_LEVEL_INIT"})," = ",(0,t.jsx)(n.code,{children:"1060"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when a level is about to be initialized."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preLevelInit(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-22",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L376",children:"ModCallbackRepentogon.ts:376"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_trigger_player_death",children:"PRE_TRIGGER_PLAYER_DEATH"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_TRIGGER_PLAYER_DEATH"})," = ",(0,t.jsx)(n.code,{children:"1050"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires right before the game over screen appears. Return false to cancel the death and revive\nthe player with half a heart."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Bug:"})," Much like the vanilla Revive function, this removes the current run's ability to save\nand continue later."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preTriggerPlayerDeath(player: EntityPlayer): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-23",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L389",children:"ModCallbackRepentogon.ts:389"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_restock_shop",children:"PRE_RESTOCK_SHOP"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_RESTOCK_SHOP"})," = ",(0,t.jsx)(n.code,{children:"1070"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when a shop is about to be restocked. Return false to cancel the restock, blocking shop\nrerolls from restock machines or restocks from Restock altogether."}),"\n",(0,t.jsxs)(n.p,{children:["This callback is fired for both ",(0,t.jsx)(n.code,{children:"Room.ShopRestockFull"})," and ",(0,t.jsx)(n.code,{children:"Room.ShopRestockPartial"}),". The\n",(0,t.jsx)(n.code,{children:"partial"})," parameter is true if ",(0,t.jsx)(n.code,{children:"Room.ShopRestockPartial"})," was called, otherwise it's false."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRestockShop(partial: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-24",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L402",children:"ModCallbackRepentogon.ts:402"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_restock_shop",children:"POST_RESTOCK_SHOP"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_RESTOCK_SHOP"})," = ",(0,t.jsx)(n.code,{children:"1071"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a shop has been restocked."}),"\n",(0,t.jsxs)(n.p,{children:["This callback is fired for both ",(0,t.jsx)(n.code,{children:"Room.ShopRestockFull"})," and ",(0,t.jsx)(n.code,{children:"Room.ShopRestockPartial"}),". The\n",(0,t.jsx)(n.code,{children:"partial"})," parameter is true if ",(0,t.jsx)(n.code,{children:"Room.ShopRestockPartial"})," was called, otherwise it's false."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postRestockShop(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-25",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L414",children:"ModCallbackRepentogon.ts:414"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_change_room",children:"PRE_CHANGE_ROOM"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_CHANGE_ROOM"})," = ",(0,t.jsx)(n.code,{children:"1061"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the current room is about to change. Return an array containing a room index and\ndimension to override where the player ends up."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preChangeRoom(targetRoomIdx: int, dimension: int): [int, int] | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-26",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L424",children:"ModCallbackRepentogon.ts:424"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_pickup_shop_purchase",children:"POST_PICKUP_SHOP_PURCHASE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PICKUP_SHOP_PURCHASE"})," = ",(0,t.jsx)(n.code,{children:"1062"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when a pickup has been purchased from the shop."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PickupVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPickupShopPurchase(\n  pickup: EntityPickup,\n  player: EntityPlayer,\n  moneySpent: int\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-27",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L441",children:"ModCallbackRepentogon.ts:441"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"get_follower_priority",children:"GET_FOLLOWER_PRIORITY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"GET_FOLLOWER_PRIORITY"})," = ",(0,t.jsx)(n.code,{children:"1063"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires when a familiar's follower priority is about to be assigned. Return ",(0,t.jsx)(n.code,{children:"FollowerPriority"})," or\nan integer to override the familiar's follow priority."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPickupShopPurchase(\n  familiar: EntityFamiliar\n): FollowerPriority | int | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-28",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L457",children:"ModCallbackRepentogon.ts:457"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_npc_morph",children:"PRE_NPC_MORPH"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_NPC_MORPH"})," = ",(0,t.jsx)(n.code,{children:"1212"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when a NPC is about to morph. Return an array of parameters to override what the NPC\nmorphs into. Return false to cancel the morph."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preNPCMorph(\n  entityType: EntityType,\n  variant: int,\n  subType: int,\n  championColor: ChampionColor\n): [EntityType, int, int, ChampionColor] | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-29",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L472",children:"ModCallbackRepentogon.ts:472"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_pickup_morph",children:"PRE_PICKUP_MORPH"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PICKUP_MORPH"})," = ",(0,t.jsx)(n.code,{children:"1213"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when a pickup is about to morph. Return an array of parameters to override what the\npickup morphs to. Otherwise, return false to cancel the morph."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePickupMorph(\n  pickup: EntityPickup,\n  entityType: int,\n  variant: int,\n  subType: int,\n  keepPrice: boolean,\n  keepSeed: boolean,\n  ignoreModifiers: boolean\n):\n     [EntityType, int, int, boolean, boolean, boolean]\n     | [EntityType, int, int]\n     | boolean\n     | undefined\n{}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-30",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L495",children:"ModCallbackRepentogon.ts:495"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_npc_morph",children:"POST_NPC_MORPH"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_NPC_MORPH"})," = ",(0,t.jsx)(n.code,{children:"1214"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a NPC morphs."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postNPCMorph(\n  previousType: EntityType,\n  previousVariant: int,\n  previousSubType: int\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-31",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L508",children:"ModCallbackRepentogon.ts:508"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_pickup_morph",children:"POST_PICKUP_MORPH"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PICKUP_MORPH"})," = ",(0,t.jsx)(n.code,{children:"1215"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a pickup has been morphed."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPickupMorph(\n  pickup: EntityPickup,\n  previousType: EntityType,\n  previousVariant: int,\n  subType: int,\n  keptPrice: boolean,\n  keptSeed: int,\n  ignoredModifiers: boolean\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-32",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L525",children:"ModCallbackRepentogon.ts:525"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_completion_marks_render",children:"PRE_COMPLETION_MARKS_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_COMPLETION_MARKS_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1216"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the completion marks paper is rendered. Return false to prevent the sprite from\nrendering."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preCompletionMarksRender(\n  completionMarksSprite: Sprite,\n  renderPos: Vector,\n  renderScale: Vector,\n  playerType: PlayerType\n): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-33",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L540",children:"ModCallbackRepentogon.ts:540"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_completion_marks_render",children:"POST_COMPLETION_MARKS_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_COMPLETION_MARKS_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1217"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the completion marks paper is rendered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preCompletionMarksRender(\n  completionMarksSprite: Sprite,\n  renderPos: Vector,\n  renderScale: Vector,\n  playerType: PlayerType\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-34",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L554",children:"ModCallbackRepentogon.ts:554"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_pause_screen_render",children:"PRE_PAUSE_SCREEN_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PAUSE_SCREEN_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1218"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the pause screen renders. Return false to prevent the pause screen from rendering\nand darkening the screen."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePauseScreenRender(pauseBody: Sprite, pauseStats: Sprite): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-35",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L564",children:"ModCallbackRepentogon.ts:564"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_pause_screen_render",children:"POST_PAUSE_SCREEN_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PAUSE_SCREEN_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1219"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the pause screen renders."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePauseScreenRender(pauseBody: Sprite, pauseStats: Sprite): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-36",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L573",children:"ModCallbackRepentogon.ts:573"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_use_card",children:"PRE_USE_CARD"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_USE_CARD"})," = ",(0,t.jsx)(n.code,{children:"1064"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a card is used. Return true to cancel the card from being used."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preUseCard(\n  card: CardType,\n  player: EntityPlayer,\n  useFlags: BitFlags<UseFlag>\n): boolean | undefined\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-37",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L586",children:"ModCallbackRepentogon.ts:586"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_use_pill",children:"PRE_USE_PILL"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_USE_PILL"})," = ",(0,t.jsx)(n.code,{children:"1065"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a pill is used. Return true to cancel the card from being used."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preUsePill(\n  pill: PillEffect,\n  color: PillColor,\n  player: EntityPlayer,\n  useFlags: BitFlags<UseFlag>\n): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-38",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L600",children:"ModCallbackRepentogon.ts:600"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"get_shop_item_price",children:"GET_SHOP_ITEM_PRICE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"GET_SHOP_ITEM_PRICE"})," = ",(0,t.jsx)(n.code,{children:"1066"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a shop item has its price assigned. Return an integer to override the price."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You can provide an optional third argument that will make the callback only fire if it\nmatches the integer provided."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getShopItemPrice(\n  variant: PickupVariant,\n  subType: int,\n  shopItemID: int\n): int {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-39",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L617",children:"ModCallbackRepentogon.ts:617"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"player_get_health_type",children:"PLAYER_GET_HEALTH_TYPE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PLAYER_GET_HEALTH_TYPE"})," = ",(0,t.jsx)(n.code,{children:"1067"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires when the player's health type is being loaded. Return ",(0,t.jsx)(n.code,{children:"PlayerHealthType"})," to override the\nplayer's health type."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function playerGetHealthType(player: EntityPlayer): PlayerHealthType | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-40",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L631",children:"ModCallbackRepentogon.ts:631"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_room_trigger_clear",children:"PRE_ROOM_TRIGGER_CLEAR"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_ROOM_TRIGGER_CLEAR"})," = ",(0,t.jsx)(n.code,{children:"1068"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the room clear is triggered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRoomTriggerClear(playSound: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-41",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L640",children:"ModCallbackRepentogon.ts:640"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_player_trigger_room_clear",children:"PRE_PLAYER_TRIGGER_ROOM_CLEAR"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLAYER_TRIGGER_ROOM_CLEAR"})," = ",(0,t.jsx)(n.code,{children:"1069"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a player triggers the room clear. Return false to cancel the room clear effects."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRenderPlayerBody(player: EntityPlayer): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-42",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L653",children:"ModCallbackRepentogon.ts:653"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_familiar_render",children:"PRE_FAMILIAR_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_FAMILIAR_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1080"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a familiar renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the familiar."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preFamiliarRender(\n  familiar: EntityFamiliar,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-43",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L673",children:"ModCallbackRepentogon.ts:673"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_npc_render",children:"PRE_NPC_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_NPC_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1081"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a npc renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the npc."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preNPCRender(npc: EntityNPC, offset: Vector): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-44",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L690",children:"ModCallbackRepentogon.ts:690"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_player_render",children:"PRE_PLAYER_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLAYER_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1082"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a player renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the player."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlayerRender(player: EntityPlayer, offset: Vector): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-45",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L707",children:"ModCallbackRepentogon.ts:707"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_pickup_render",children:"PRE_PICKUP_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PICKUP_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1083"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a pickup renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the pickup."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PickupVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePickupRender(pickup: EntityPickup, offset: Vector): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-46",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L724",children:"ModCallbackRepentogon.ts:724"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_tear_render",children:"PRE_TEAR_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_TEAR_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1084"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a tear renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the tear."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"TearVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preTearRender(tear: EntityTear, offset: Vector): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-47",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L741",children:"ModCallbackRepentogon.ts:741"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_projectile_render",children:"PRE_PROJECTILE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PROJECTILE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1085"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a projectile renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the projectile."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"ProjectileVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preProjectileRender(\n  projectile: ProjectileVariant,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-48",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L761",children:"ModCallbackRepentogon.ts:761"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_knife_render",children:"PRE_KNIFE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_KNIFE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1086"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a knife renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the knife."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"KnifeVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preKnifeRender(knife: EntityKnife, offset: Vector): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-49",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L778",children:"ModCallbackRepentogon.ts:778"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_effect_render",children:"PRE_EFFECT_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_EFFECT_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1087"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a effect renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the effect."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EffectVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preEffectRender(effect: EntityEffect, offset: Vector): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-50",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L795",children:"ModCallbackRepentogon.ts:795"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_bomb_render",children:"PRE_BOMB_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_BOMB_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1088"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a bomb renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the bomb."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"BombVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preBombRender(bomb: EntityBomb, offset: Vector): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-51",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L812",children:"ModCallbackRepentogon.ts:812"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_slot_render",children:"PRE_SLOT_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_SLOT_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1089"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a slot renders. Return a Vector to modify the rendered sprite's offset.\nAlternatively, return false to cancel rendering the slot."}),"\n",(0,t.jsxs)(n.p,{children:["Canceling this callback will not stop rendering of entity shadows. This is being investigated,\nbut in the meantime call ",(0,t.jsx)(n.code,{children:"Entity.SetShadowSize(0)"})," on the entity in ",(0,t.jsx)(n.code,{children:"ModCallback.POST_UPDATE"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preSlotRender(slot: EntitySlot, offset: Vector): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-52",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L829",children:"ModCallbackRepentogon.ts:829"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_slot_render",children:"POST_SLOT_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_SLOT_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1090"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a slot renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postSlotRender(slot: EntitySlot, offset: Vector): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-53",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L842",children:"ModCallbackRepentogon.ts:842"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_spawn",children:"PRE_GRID_ENTITY_SPAWN"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_SPAWN"})," = ",(0,t.jsx)(n.code,{children:"1100"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a GridEntity is spawned outside of room initialization. Return false to cancel\nspawning the grid. Alternatively, return an array of parameters or a GridEntityDesc to override\nthe GridEntity spawned."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntitySpawn(\n  gridEntityType: GridEntityType,\n  variant: int,\n  varData: int,\n  gridIndex: int,\n  spawnSeed: Seed,\n  desc: GridEntityDesc\n): [GridEntityType, int, int, Seed] | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-54",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L864",children:"ModCallbackRepentogon.ts:864"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_spawn",children:"POST_GRID_ENTITY_SPAWN"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_SPAWN"})," = ",(0,t.jsx)(n.code,{children:"1101"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a GridEntity is spawned outside of room initialization."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntitySpawn(\n  gridEntityType: GridEntityType,\n  variant: int,\n  varData: int,\n  gridIndex: int,\n  spawnSeed: Seed,\n  desc: GridEntityDesc\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-55",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L884",children:"ModCallbackRepentogon.ts:884"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"player_get_active_max_charge",children:"PLAYER_GET_ACTIVE_MAX_CHARGE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PLAYER_GET_ACTIVE_MAX_CHARGE"})," = ",(0,t.jsx)(n.code,{children:"1072"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a collectible belonging to a player has its max charges loaded. Return an integer\nto override the item's chargebar."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"CollectibleType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function playerGetActiveMaxCharge(\n  collectible: Collectible,\n  player: EntityPlayer,\n  varData: int\n): int | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-56",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L902",children:"ModCallbackRepentogon.ts:902"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"player_get_active_min_usable_charge",children:"PLAYER_GET_ACTIVE_MIN_USABLE_CHARGE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PLAYER_GET_ACTIVE_MIN_USABLE_CHARGE"})," = ",(0,t.jsx)(n.code,{children:"1073"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a collectible belonging to a player has its minimum usable charges loaded. If the\nitem has the minimum amount of charge, it will show the white outline around the chargebar\nsprite."}),"\n",(0,t.jsx)(n.p,{children:"Return an integer to override the minimum charges."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"CollectibleType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function playerGetActiveMinUsableCharge(slot: ActiveSlot): int | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-57",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L919",children:"ModCallbackRepentogon.ts:919"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"player_get_heart_limit",children:"PLAYER_GET_HEART_LIMIT"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PLAYER_GET_HEART_LIMIT"})," = ",(0,t.jsx)(n.code,{children:"1074"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires every frame. Return an integer to override the player's heart limit."}),"\n",(0,t.jsx)(n.p,{children:"You can set the limit to any arbitrary amount but the game can only render up to 4 lines of\nhearts in the HUD. However, even if they're not visible, the hearts still work properly."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function playerGetHeartLimit(\n  player: EntityPlayer,\n  heartLimit: int,\n  isKeeper: boolean\n): int undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-58",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L939",children:"ModCallbackRepentogon.ts:939"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_item_overlay_update",children:"POST_ITEM_OVERLAY_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_ITEM_OVERLAY_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1075"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns every an item overlay is rendered."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GiantbookType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postItemOverlayUpdate(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-59",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L952",children:"ModCallbackRepentogon.ts:952"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_item_overlay_show",children:"PRE_ITEM_OVERLAY_SHOW"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_ITEM_OVERLAY_SHOW"})," = ",(0,t.jsx)(n.code,{children:"1076"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires before an item overlay is shown. Return ",(0,t.jsx)(n.code,{children:"GiantBookType"})," to override the overlay shown.\nAlternatively, return true to cancel the item overlay."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GiantbookType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preItemOverlayShow(\n  giantbookType: GiantbookType,\n  delay: int,\n  player: EntityPlayer\n): GiantbookType | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-60",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L970",children:"ModCallbackRepentogon.ts:970"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_player_new_room_temp_effects",children:"POST_PLAYER_NEW_ROOM_TEMP_EFFECTS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLAYER_NEW_ROOM_TEMP_EFFECTS"})," = ",(0,t.jsx)(n.code,{children:"1077"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me!"}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlayerNewRoomTempEffects(player: EntityPlayer): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-61",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L983",children:"ModCallbackRepentogon.ts:983"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_player_new_level",children:"POST_PLAYER_NEW_LEVEL"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLAYER_NEW_LEVEL"})," = ",(0,t.jsx)(n.code,{children:"1078"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me!"}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlayerNewLevel(player: EntityPlayer): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-62",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L996",children:"ModCallbackRepentogon.ts:996"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_player_get_multi_shot_params",children:"POST_PLAYER_GET_MULTI_SHOT_PARAMS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLAYER_GET_MULTI_SHOT_PARAMS"})," = ",(0,t.jsx)(n.code,{children:"1251"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires every frame. Return a ",(0,t.jsx)(n.code,{children:"MultiShotParams"})," object to change the properties of the player's\nshooting behavior in regards to the MultiShotParams object."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlayerGetMultiShotParams(player: EntityPlayer): MultiShotParams | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-63",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1010",children:"ModCallbackRepentogon.ts:1010"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_replace_spritesheet",children:"PRE_REPLACE_SPRITESHEET"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_REPLACE_SPRITESHEET"})," = ",(0,t.jsx)(n.code,{children:"1116"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a spritesheet in a sprite is replaced."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You can provide an optional third argument that will make the callback only fire if it\nmatches the anm2 file name provided."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preReplaceSpritesheet(layerId: int, fileName: string): string | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-64",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1023",children:"ModCallbackRepentogon.ts:1023"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_replace_spritesheet",children:"POST_REPLACE_SPRITESHEET"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_REPLACE_SPRITESHEET"})," = ",(0,t.jsx)(n.code,{children:"1117"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a spritesheet in a sprite is replaced."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You can provide an optional third argument that will make the callback only fire if it\nmatches the anm2 file name provided."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postReplaceSpritesheet(layerId: int, fileName: string): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-65",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1036",children:"ModCallbackRepentogon.ts:1036"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_planetarium_apply_stage_penalty",children:"PRE_PLANETARIUM_APPLY_STAGE_PENALTY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLANETARIUM_APPLY_STAGE_PENALTY"})," = ",(0,t.jsx)(n.code,{children:"1110"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires at the start of planetarium calculation. Before calculating, the game first checks if the\ncurrent floor is valid to spawn a planetarium. If the current floor is invalid, all further\ncalculation (and thus, all further callbacks) will be canceled."}),"\n",(0,t.jsx)(n.p,{children:"By default, planetariums cannot spawn past Depths 2, or Womb 2 with Telescope Lens."}),"\n",(0,t.jsx)(n.p,{children:"This callback can be used, for example, to add custom planetarium spawn rules on custom floors,\nor to add new items like Telescope Lens which can augment the rules."}),"\n",(0,t.jsx)(n.p,{children:"Return false to bypass the stage penalty."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlanetariumStagePenalty(): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-66",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1054",children:"ModCallbackRepentogon.ts:1054"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_planetarium_apply_planetarium_penalty",children:"PRE_PLANETARIUM_APPLY_PLANETARIUM_PENALTY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLANETARIUM_APPLY_PLANETARIUM_PENALTY"})," = ",(0,t.jsx)(n.code,{children:"1111"})]}),"\n",(0,t.jsxs)(n.p,{children:["After ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_PLANETARIUM_APPLY_STAGE_PENALTY"})," is fired and the stage is valid for a\nplanetarium to generate, the callback checks if a planetarium has been entered before. If so,\nthe chance is locked at 1%, or 10% with Telescope Lens."]}),"\n",(0,t.jsx)(n.p,{children:"Return false to bypass the planetarium enter penalty."}),"\n",(0,t.jsx)(n.p,{children:"This callback can be used, for example, to add custom planetarium spawn rules on custom floors,\nor to add new items like Telescope Lens which can augment the rules."}),"\n",(0,t.jsx)(n.p,{children:"Return false to bypass the stage penalty."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlanetariumApplyPlanetariumPenalty(): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-67",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1072",children:"ModCallbackRepentogon.ts:1072"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_planetarium_apply_treasure_penalty",children:"PRE_PLANETARIUM_APPLY_TREASURE_PENALTY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLANETARIUM_APPLY_TREASURE_PENALTY"})," = ",(0,t.jsx)(n.code,{children:"1112"})]}),"\n",(0,t.jsx)(n.p,{children:"After ensuring planetariums haven't been entered before, the game then checks how many treasure\nrooms entered is greater than or equal to the current stage number, the chance will be locked\nat 1%, or 10% with Telescope Lens."}),"\n",(0,t.jsxs)(n.p,{children:["If you're looking to add an item like Telescope Lens which modifies the base chance, look at\n",(0,t.jsx)(n.code,{children:"ModCallback.PRE_PLANETARIUM_APPLY_TELESCOPE_LENS"})," instead."]}),"\n",(0,t.jsx)(n.p,{children:"Return false to bypass the planetarium treasure room penalty entirely, meaning the game will\nact as if no treasure rooms have been entered. Alternatively, return an integer to modify how\nmany treasure rooms the game will believe has been entered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlanetariumApplyTreasurePenalty(\n  treasureRoomsEntered: int\n): boolean | int | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-68",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1092",children:"ModCallbackRepentogon.ts:1092"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_planetarium_apply_items",children:"PRE_PLANETARIUM_APPLY_ITEMS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLANETARIUM_APPLY_ITEMS"})," = ",(0,t.jsx)(n.code,{children:"1113"})]}),"\n",(0,t.jsx)(n.p,{children:"After checking the amount of treasure rooms entered, the game applies flat item chances. This\nis where Crystal Ball, Magic 8 Ball, and Sausage's chances get added, as well as Telescope\nLens' additional 15% chance."}),"\n",(0,t.jsxs)(n.p,{children:["If you're looking to add an item like Telescope Lens which modifies the base chance, have a\nlook at ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_PLANETARIUM_APPLY_TELESCOPE_LENS"})," instead."]}),"\n",(0,t.jsx)(n.p,{children:"Return a number to modify the chance in this step of the calculation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlanetariumApplyItems(chance: number): number | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-69",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1108",children:"ModCallbackRepentogon.ts:1108"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_planetarium_apply_telescope_lens",children:"PRE_PLANETARIUM_APPLY_TELESCOPE_LENS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLANETARIUM_APPLY_TELESCOPE_LENS"})," = ",(0,t.jsx)(n.code,{children:"1114"})]}),"\n",(0,t.jsx)(n.p,{children:"After all previous planetarium chance calculations callbacks fire, Telescope Lens adds an\nadditional 9% chance to the base chance, bringing the base generation chance at 10%."}),"\n",(0,t.jsx)(n.p,{children:"Return a number to modify the chance in this step of the calculation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlanetariumApplyTelescopeLens(chance: number): number | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-70",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1120",children:"ModCallbackRepentogon.ts:1120"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_planetarium_calculate",children:"POST_PLANETARIUM_CALCULATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLANETARIUM_CALCULATE"})," = ",(0,t.jsx)(n.code,{children:"1115"})]}),"\n",(0,t.jsx)(n.p,{children:"This will override all previous calculation values, ultimately dictating the planetarium\nchance. Return a number to modify the chance."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlanetariumCalculate(chance: number): number | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-71",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1130",children:"ModCallbackRepentogon.ts:1130"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_slot_init",children:"POST_SLOT_INIT"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_SLOT_INIT"})," = ",(0,t.jsx)(n.code,{children:"1121"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after an EntitySlot initializes."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postSlotUpdate(slot: EntitySlot): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-72",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1143",children:"ModCallbackRepentogon.ts:1143"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_slot_update",children:"POST_SLOT_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_SLOT_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1122"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after an EntitySlot updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postSlotUpdate(slot: EntitySlot): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-73",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1156",children:"ModCallbackRepentogon.ts:1156"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_slot_create_explosion_drops",children:"PRE_SLOT_CREATE_EXPLOSION_DROPS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_SLOT_CREATE_EXPLOSION_DROPS"})," = ",(0,t.jsx)(n.code,{children:"1123"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before pickups are spawned from blowing up the slot. Return false to prevent the\ncollectibles from spawning."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preSlotCreateExplosionDrops(slot: EntitySlot): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-74",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1170",children:"ModCallbackRepentogon.ts:1170"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_slot_create_explosion_drops",children:"POST_SLOT_CREATE_EXPLOSION_DROPS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_SLOT_CREATE_EXPLOSION_DROPS"})," = ",(0,t.jsx)(n.code,{children:"1124"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after pickups are spawned from blowing up the slot."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postSlotCreateExplosionDrops(slot: EntitySlot): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-75",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1183",children:"ModCallbackRepentogon.ts:1183"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_slot_set_prize_collectible",children:"PRE_SLOT_SET_PRIZE_COLLECTIBLE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_SLOT_SET_PRIZE_COLLECTIBLE"})," = ",(0,t.jsx)(n.code,{children:"1125"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the slot's prize collectible is set. This is used by Shell Game and Hell Game."}),"\n",(0,t.jsx)(n.p,{children:"Return a CollectibleType to override what the slot will pay out with."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preSlotSetPrizeCollectible(slot: EntitySlot): Collectible | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-76",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1198",children:"ModCallbackRepentogon.ts:1198"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_slot_set_prize_collectible",children:"POST_SLOT_SET_PRIZE_COLLECTIBLE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_SLOT_SET_PRIZE_COLLECTIBLE"})," = ",(0,t.jsx)(n.code,{children:"1126"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the slot's prize collectible is set. This is used by Shell Game and Hell Game."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postSlotSetPrizeCollectible(slot: EntitySlot): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-77",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1211",children:"ModCallbackRepentogon.ts:1211"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_devil_apply_items",children:"PRE_DEVIL_APPLY_ITEMS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_DEVIL_APPLY_ITEMS"})," = ",(0,t.jsx)(n.code,{children:"1130"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the game starts to tally up vanilla items for devil deal calculation. This is called\nbefore the stage penalty."}),"\n",(0,t.jsx)(n.p,{children:"Most items that affect devil deal chances perform their changes here."}),"\n",(0,t.jsx)(n.p,{children:"Return a number to modify the chance in this step of calculation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preDevilApplyItems(): number {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-78",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1225",children:"ModCallbackRepentogon.ts:1225"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_devil_apply_stage_penalty",children:"PRE_DEVIL_APPLY_STAGE_PENALTY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_DEVIL_APPLY_STAGE_PENALTY"})," = ",(0,t.jsx)(n.code,{children:"1131"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires after ",(0,t.jsx)(n.code,{children:"RepentogonCallback.PRE_DEVIL_APPLY_ITEMS"}),", where the game calculates the stage\npenalty."]}),"\n",(0,t.jsx)(n.p,{children:"If a deal is spawned anywhere on the previous two floors, the game decays the resulting chance\nby 50% or 25% depending on the amount of deals taken."}),"\n",(0,t.jsx)(n.p,{children:'Note that even though the game displays a value of ~66% or ~33% for the 50% and 25% chances\nrespectively, this is because devil chance is not clamped to a value between 0 and 1, and\n"100%" without items generally means a value of ~133%.'}),"\n",(0,t.jsx)(n.p,{children:"Return false to bypass the stage penalty."}),"\n",(0,t.jsx)(n.p,{children:"Return a number to modify the chance in this step of calculation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preDevilApplyStagePenalty(): boolean {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-79",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1246",children:"ModCallbackRepentogon.ts:1246"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_devil_apply_special_items",children:"PRE_DEVIL_APPLY_SPECIAL_ITEMS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_DEVIL_APPLY_SPECIAL_ITEMS"})," = ",(0,t.jsx)(n.code,{children:"1132"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires after ",(0,t.jsx)(n.code,{children:"RepentogonCallback.PRE_DEVIL_APPLY_STAGE_PENALTY"}),", where the game calculates items\nwhich bypass the stage penalty like Goat Head and Eucharist."]}),"\n",(0,t.jsx)(n.p,{children:"Return a number to modify the chance in this step of the calculation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preDevilApplySpecialItems(): int {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-80",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1258",children:"ModCallbackRepentogon.ts:1258"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_devil_calculate",children:"POST_DEVIL_CALCULATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_DEVIL_CALCULATE"})," = ",(0,t.jsx)(n.code,{children:"1133"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires after ",(0,t.jsx)(n.code,{children:"RepentogonCallback.PRE_DEVIL_APPLY_SPECIAL_ITEMS"}),". This dictates the final devil\ndeal chance."]}),"\n",(0,t.jsx)(n.p,{children:"Return a number to modify the chance."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postDevilCalculate(): int {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-81",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1270",children:"ModCallbackRepentogon.ts:1270"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_completion_mark_get",children:"PRE_COMPLETION_MARK_GET"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_COMPLETION_MARK_GET"})," = ",(0,t.jsx)(n.code,{children:"1047"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a player gets a completion mark. Return false to prevent the mark from being\ngiven."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preCompletionMarkGet(\n  completionType: CompletionType,\n  playerType: PlayerType\n): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-82",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1287",children:"ModCallbackRepentogon.ts:1287"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_completion_mark_get",children:"POST_COMPLETION_MARK_GET"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_COMPLETION_MARK_GET"})," = ",(0,t.jsx)(n.code,{children:"1048"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player gets a completion mark."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postCompletionMarkGet(completionType: CompletionType, playerType: PlayerType): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-83",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1300",children:"ModCallbackRepentogon.ts:1300"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_completion_event",children:"PRE_COMPLETION_EVENT"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_COMPLETION_EVENT"})," = ",(0,t.jsx)(n.code,{children:"1049"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a completion event is triggered. Return false to cancel the event, preventing all\nmarks and completion event related stuff to trigger for all players."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preCompletionEvent(completionType: CompletionType): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-84",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1310",children:"ModCallbackRepentogon.ts:1310"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_use_pill",children:"POST_USE_PILL"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_USE_PILL"})," = ",(0,t.jsx)(n.code,{children:"1001"})]}),"\n",(0,t.jsxs)(n.p,{children:["Behaves the same as ",(0,t.jsx)(n.code,{children:"ModCallback.POST_USE_PILL"})," with the addition of PillColor being passed as\nan argument."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PillEffect"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postUsePill(\n  effect: PillEffect,\n  player: EntityPlayer,\n  flags: BitFlags<UseFlag>,\n  color: PillColor\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-85",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1329",children:"ModCallbackRepentogon.ts:1329"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_player_hud_render_active_item",children:"POST_PLAYER_HUD_RENDER_ACTIVE_ITEM"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLAYER_HUD_RENDER_ACTIVE_ITEM"})," = ",(0,t.jsx)(n.code,{children:"1079"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after an active item is rendered on the screen."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlayerHUDRenderActiveItem(\n  player: EntityPlayer,\n  slot: ActiveSlot,\n  offset: Vector,\n  alpha: number\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-86",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1343",children:"ModCallbackRepentogon.ts:1343"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_player_hud_render_hearts",children:"POST_PLAYER_HUD_RENDER_HEARTS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLAYER_HUD_RENDER_HEARTS"})," = ",(0,t.jsx)(n.code,{children:"1091"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the health HUD is rendered."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlayerHUDRenderHearts(\n  offset: Vector,\n  heartsSprite: Sprite,\n  position: Vector\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-87",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1356",children:"ModCallbackRepentogon.ts:1356"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_get_lighting_alpha",children:"PRE_GET_LIGHTING_ALPHA"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GET_LIGHTING_ALPHA"})," = ",(0,t.jsx)(n.code,{children:"1150"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires every frame. Return a number to modify the lighting's alpha. This is generally between 0\nand 1 but you can technically go higher than this."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGetLightingAlpha(originalAlpha: number): number | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-88",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1366",children:"ModCallbackRepentogon.ts:1366"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_render_grid_lighting",children:"PRE_RENDER_GRID_LIGHTING"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_RENDER_GRID_LIGHTING"})," = ",(0,t.jsx)(n.code,{children:"1151"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me fully! Return a Vector to override the offset. Alternatively, return false to\nstop the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRenderGridLighting(\n  gridEntity: GridEntity,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-89",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1383",children:"ModCallbackRepentogon.ts:1383"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_render_entity_lighting",children:"PRE_RENDER_ENTITY_LIGHTING"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_RENDER_ENTITY_LIGHTING"})," = ",(0,t.jsx)(n.code,{children:"1152"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me fully! Return a Vector to override the offset. Alternatively, return false to\nstop the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRenderEntityLighting(\n  entity: Entity,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-90",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1400",children:"ModCallbackRepentogon.ts:1400"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_player_apply_innate_collectible_num",children:"PRE_PLAYER_APPLY_INNATE_COLLECTIBLE_NUM"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLAYER_APPLY_INNATE_COLLECTIBLE_NUM"})," = ",(0,t.jsx)(n.code,{children:"1092"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me fully!"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlayerApplyInnateCollectibleNum(\n  modCount: int,\n  player: EntityPlayer,\n  collectible: CollectibleType,\n  onlyCountTrueItems: boolean\n): int | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-91",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1414",children:"ModCallbackRepentogon.ts:1414"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_music_play_jingle",children:"PRE_MUSIC_PLAY_JINGLE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_MUSIC_PLAY_JINGLE"})," = ",(0,t.jsx)(n.code,{children:"1094"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires before the jingle track plays. Return ",(0,t.jsx)(n.code,{children:"Music"})," to change the track. Alternatively, return\nfalse to prevent the track from playing."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"Music"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preMusicPlayJingle(id: Music): boolean | Music | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-92",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1428",children:"ModCallbackRepentogon.ts:1428"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_trigger_collectible_removed",children:"POST_TRIGGER_COLLECTIBLE_REMOVED"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_TRIGGER_COLLECTIBLE_REMOVED"})," = ",(0,t.jsx)(n.code,{children:"1095"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a collectible has been removed."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"CollectibleType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postTriggerCollectibleRemoved(\n  player: EntityPlayer,\n  collectible: CollectibleType\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-93",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1444",children:"ModCallbackRepentogon.ts:1444"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_trigger_trinket_added",children:"POST_TRIGGER_TRINKET_ADDED"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_TRIGGER_TRINKET_ADDED"})," = ",(0,t.jsx)(n.code,{children:"1096"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a trinket has been added to a player."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"TrinketType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postTriggerTrinketAdded(\n  player: EntityPlayer,\n  trinketType: TrinketType,\n  firstTimePickingUp: boolean\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-94",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1461",children:"ModCallbackRepentogon.ts:1461"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_trigger_trinket_removed",children:"POST_TRIGGER_TRINKET_REMOVED"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_TRIGGER_TRINKET_REMOVED"})," = ",(0,t.jsx)(n.code,{children:"1097"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a trinket has been removed from a player."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"TrinketType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postTriggerTrinketRemoved(\n  player: EntityPlayer,\n  trinketType: TrinketType,\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-95",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1477",children:"ModCallbackRepentogon.ts:1477"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_trigger_weapon_fired",children:"POST_TRIGGER_WEAPON_FIRED"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_TRIGGER_WEAPON_FIRED"})," = ",(0,t.jsx)(n.code,{children:"1098"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me!"}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"WeaponType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postTriggerWeaponFired(\n  fireDirection: Vector,\n  fireAmount: int,\n  owner: Entity\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-96",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1494",children:"ModCallbackRepentogon.ts:1494"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_level_layout_generated",children:"POST_LEVEL_LAYOUT_GENERATED"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_LEVEL_LAYOUT_GENERATED"})," = ",(0,t.jsx)(n.code,{children:"1099"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the level's layout has been generated. You can access the LevelGenerator class from\nhere."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postLevelLayoutGenerated(levelGenerator: LevelGenerator): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-97",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1504",children:"ModCallbackRepentogon.ts:1504"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_nightmare_scene_render",children:"POST_NIGHTMARE_SCENE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_NIGHTMARE_SCENE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1102"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires every frame the nightmare scene is rendering."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postNightmareSceneRender(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-98",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1513",children:"ModCallbackRepentogon.ts:1513"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_nightmare_scene_show",children:"POST_NIGHTMARE_SCENE_SHOW"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_NIGHTMARE_SCENE_SHOW"})," = ",(0,t.jsx)(n.code,{children:"1103"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the nightmare scene is shown."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postNightmareSceneShow(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-99",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1522",children:"ModCallbackRepentogon.ts:1522"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"mc_pre_level_select",children:"MC_PRE_LEVEL_SELECT"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"MC_PRE_LEVEL_SELECT"})," = ",(0,t.jsx)(n.code,{children:"1104"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the game selects which stage to load, usually when the player enters a trapdoor.\nReturn an array containing the LevelStage and StageType respectively to override which level\nthe player ends up on."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preLevelSelect(\n  level: LevelStage,\n  stageType: StageType\n): [LevelStage?, StageType?] | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-100",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1536",children:"ModCallbackRepentogon.ts:1536"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_weapon_fire",children:"POST_WEAPON_FIRE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_WEAPON_FIRE"})," = ",(0,t.jsx)(n.code,{children:"1105"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me!"}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"WeaponType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postWeaponFire(\n  weapon: Weapon,\n  fireDirection: Vector,\n  isShooting: boolean,\n  isInterpolated: boolean\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-101",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1554",children:"ModCallbackRepentogon.ts:1554"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_player_use_bomb",children:"PRE_PLAYER_USE_BOMB"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLAYER_USE_BOMB"})," = ",(0,t.jsx)(n.code,{children:"1220"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a player uses a bomb. Return false to stop the player from using a bomb."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlayerUseBomb(player: EntityPlayer): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-102",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1567",children:"ModCallbackRepentogon.ts:1567"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_player_use_bomb",children:"POST_PLAYER_USE_BOMB"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLAYER_USE_BOMB"})," = ",(0,t.jsx)(n.code,{children:"1221"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player uses a bomb."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlayerUseBomb(player: EntityPlayer, bomb: EntityBomb): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-103",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1580",children:"ModCallbackRepentogon.ts:1580"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_npc_pick_target",children:"PRE_NPC_PICK_TARGET"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_NPC_PICK_TARGET"})," = ",(0,t.jsx)(n.code,{children:"1222"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires before a NPC picks its target, such as when ",(0,t.jsx)(n.code,{children:"EntityNPC.GetPlayerTarget()"})," is called.\nReturn an Entity to override what the NPC targets instead."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preNPCPickTarget(\n  npc: EntityNPC,\n  currentTarget: Entity | undefined\n): Entity | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-104",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1597",children:"ModCallbackRepentogon.ts:1597"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_player_collision",children:"PRE_PLAYER_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLAYER_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1230"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_PLAYER_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlayerCollision(\n  player: EntityPlayer,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-105",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1614",children:"ModCallbackRepentogon.ts:1614"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_player_collision",children:"POST_PLAYER_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PLAYER_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1231"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPlayerCollision(player: EntityPlayer, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-106",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1628",children:"ModCallbackRepentogon.ts:1628"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_tear_collision",children:"PRE_TEAR_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_TEAR_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1232"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_TEAR_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"TearVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preTearCollision(\n  tear: EntityTear,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-107",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1645",children:"ModCallbackRepentogon.ts:1645"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_tear_collision",children:"POST_TEAR_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_TEAR_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1233"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"TearVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postTearCollision(tear: EntityTear, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-108",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1659",children:"ModCallbackRepentogon.ts:1659"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_familiar_collision",children:"PRE_FAMILIAR_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_FAMILIAR_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1234"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_FAMILIAR_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preFamiliarCollision(\n  familiar: EntityFamiliar,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-109",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1676",children:"ModCallbackRepentogon.ts:1676"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_familiar_collision",children:"POST_FAMILIAR_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FAMILIAR_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1235"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFamiliarCollision(familiar: EntityFamiliar, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-110",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1690",children:"ModCallbackRepentogon.ts:1690"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_bomb_collision",children:"PRE_BOMB_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_BOMB_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1236"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_BOMB_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"BombVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preBombCollision(\n  bomb: EntityBomb,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-111",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1707",children:"ModCallbackRepentogon.ts:1707"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_bomb_collision",children:"POST_BOMB_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_BOMB_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1237"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"BombVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postBombCollision(bomb: EntityBomb, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-112",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1721",children:"ModCallbackRepentogon.ts:1721"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_pickup_collision",children:"PRE_PICKUP_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PICKUP_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1238"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_PICKUP_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PickupVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePickupCollision(\n  pickup: EntityPickup,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-113",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1738",children:"ModCallbackRepentogon.ts:1738"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_pickup_collision",children:"POST_PICKUP_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PICKUP_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1239"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PickupVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postPickupCollision(pickup: EntityPickup, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-114",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1752",children:"ModCallbackRepentogon.ts:1752"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_slot_collision",children:"PRE_SLOT_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_SLOT_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1240"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires when the player collides with a slot."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preSlotCollision(\n  slot: EntitySlot,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-115",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1769",children:"ModCallbackRepentogon.ts:1769"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_slot_collision",children:"POST_SLOT_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_SLOT_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1241"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"SlotVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postSlotCollision(slot: EntitySlot, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-116",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1783",children:"ModCallbackRepentogon.ts:1783"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_knife_collision",children:"PRE_KNIFE_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_KNIFE_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1242"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_KNIFE_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"KnifeVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preKnifeCollision(\n  knife: EntityKnife,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-117",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1800",children:"ModCallbackRepentogon.ts:1800"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_knife_collision",children:"POST_KNIFE_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_KNIFE_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1243"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"KnifeVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postKnifeCollision(knife: EntityKnife, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-118",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1814",children:"ModCallbackRepentogon.ts:1814"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_projectile_collision",children:"PRE_PROJECTILE_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PROJECTILE_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1244"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_PROJECTILE_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"ProjectileVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preProjectileCollision(\n  projectile: EntityProjectile,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-119",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1831",children:"ModCallbackRepentogon.ts:1831"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_projectile_collision",children:"POST_PROJECTILE_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_PROJECTILE_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1245"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"ProjectileVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postProjectileCollision(\n  projectile: EntityProjectile,\n  collider: Entity,\n  low: boolean\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-120",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1849",children:"ModCallbackRepentogon.ts:1849"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_npc_collision",children:"PRE_NPC_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_NPC_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1246"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_NPC_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preNPCCollision(\n  npc: EntityNPC,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-121",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1866",children:"ModCallbackRepentogon.ts:1866"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_npc_collision",children:"POST_NPC_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_NPC_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1247"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postNPCCollision(npc: EntityNPC, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-122",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1880",children:"ModCallbackRepentogon.ts:1880"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_laser_collision",children:"PRE_LASER_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_LASER_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1248"})]}),"\n",(0,t.jsxs)(n.p,{children:["Acts like ",(0,t.jsx)(n.code,{children:"ModCallback.PRE_LASER_COLLISION"})," except it supports returning a dictionary."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"LaserVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preLaserCollision(\n  laser: EntityLaser,\n  collider: Entity,\n  low: boolean\n): boolean | { Collide: boolean, SkipCollisionEffects: boolean } | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-123",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1897",children:"ModCallbackRepentogon.ts:1897"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_laser_collision",children:"POST_LASER_COLLISION"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_LASER_COLLISION"})," = ",(0,t.jsx)(n.code,{children:"1249"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the on-collision code of the entity was ran, assuming it wasn't skipped in its\npre-collision callback."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"LaserVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postLaserCollision(laser: EntityLaser, collider: Entity, low: boolean): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-124",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1911",children:"ModCallbackRepentogon.ts:1911"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"console_autocomplete",children:"CONSOLE_AUTOCOMPLETE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"CONSOLE_AUTOCOMPLETE"})," = ",(0,t.jsx)(n.code,{children:"1120"})]}),"\n",(0,t.jsxs)(n.p,{children:["Fires every time the console input changes whenever a function with the\n",(0,t.jsx)(n.code,{children:"AutocompleteType.CUSTOM"})," enum is being entered into the console."]}),"\n",(0,t.jsxs)(n.p,{children:["You can return an array which can hold up to two strings, with the first string being the\nparameter for the command's autocomplete and the second being a description. The description\ncan be used in autocomplete as well, however pressing the tab key will properly autocomplete\nthe ID, not the description (Think the ",(0,t.jsx)(n.code,{children:"giveitem"})," command as an example; ",(0,t.jsx)(n.code,{children:"c1"}),' would be The Sad\nOnion\'s "parameter" and "The Sad Onion" would be the description, and both work. Pressing the\ntab key would turn the command into ',(0,t.jsx)(n.code,{children:"give c1"}),")."]}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"You can provide an optional third argument that will make the callback only fire if it\nmatches the string provided."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function consoleAutocomplete(command: string, params: string): [string, string?] {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-125",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1932",children:"ModCallbackRepentogon.ts:1932"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"player_init_pre_level_init_stats",children:"PLAYER_INIT_PRE_LEVEL_INIT_STATS"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PLAYER_INIT_PRE_LEVEL_INIT_STATS"})," = ",(0,t.jsx)(n.code,{children:"1127"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me!"}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"PlayerType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function playerInitPreLevelInitStates(player: EntityPlayer): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-126",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1945",children:"ModCallbackRepentogon.ts:1945"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_new_room",children:"PRE_NEW_ROOM"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_NEW_ROOM"})," = ",(0,t.jsx)(n.code,{children:"1200"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a new room is loaded."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preNewRoom(room: Room, descriptor: RoomDescriptor): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-127",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1954",children:"ModCallbackRepentogon.ts:1954"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_mega_satan_ending",children:"PRE_MEGA_SATAN_ENDING"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_MEGA_SATAN_ENDING"})," = ",(0,t.jsx)(n.code,{children:"1201"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the game forcefully ends upon defeating Mega Satan. Return true to prevent the\nending, guaranteeing a portal to the Void while retaining the completion marks."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preMegaSatanEnding(): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-128",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1964",children:"ModCallbackRepentogon.ts:1964"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_mods_loaded",children:"POST_MODS_LOADED"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_MODS_LOADED"})," = ",(0,t.jsx)(n.code,{children:"1210"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after all Lua scripts have been loaded."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postModsLoaded(): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-129",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1973",children:"ModCallbackRepentogon.ts:1973"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_item_overlay_show",children:"POST_ITEM_OVERLAY_SHOW"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_ITEM_OVERLAY_SHOW"})," = ",(0,t.jsx)(n.code,{children:"1134"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after an item overlay is shown."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GiantBook"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postItemOverlayShow(giantBook: GiantBook, delay: int, player: EntityPlayer): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-130",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L1986",children:"ModCallbackRepentogon.ts:1986"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_level_place_room",children:"PRE_LEVEL_PLACE_ROOM"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_LEVEL_PLACE_ROOM"})," = ",(0,t.jsx)(n.code,{children:"1137"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a room is placed onto the level. Return a room config to replace the room that\nwill be place. It must have the same shape and the new available door slots must be compatible\nwith the original room doors."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GiantBook"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preLevelPlaceRoom(\n  slot: LevelGeneratorRoom,\n  roomConfig: RoomConfig,\n  seed: Seed\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-131",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2005",children:"ModCallbackRepentogon.ts:2005"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_npc_split",children:"PRE_NPC_SPLIT"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_NPC_SPLIT"})," = ",(0,t.jsx)(n.code,{children:"1191"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before a npc is split, such as when the Meat Cleaver item is used. Return true to prevent\nthe split. Alternatively, false to allow the split even if the npc is normally blacklisted by\nthe game."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"EntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preNPCSplit(npc: EntityNPC, isBlacklisted: boolean): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-132",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2020",children:"ModCallbackRepentogon.ts:2020"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_room_grid_entity_spawn",children:"PRE_ROOM_GRID_ENTITY_SPAWN"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_ROOM_GRID_ENTITY_SPAWN"})," = ",(0,t.jsx)(n.code,{children:"1192"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires during room initialization when grid entities from the layout are being spawned."}),"\n",(0,t.jsx)(n.p,{children:"Return false to cancel spawning the grid entity. Alternatively, return an array containing the\nGridEntityType, variant, var data, and spawn seed to override it."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preRoomGridEntitySpawn(\n  gridEntityType: GridEntityType,\n  variant: int,\n  varData: int,\n  gridIndex: int,\n  spawnSeed: Seed\n): boolean | [GridEntityType, int, int, int, Seed] | undefined\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-133",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2042",children:"ModCallbackRepentogon.ts:2042"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_familiar_fire_projectile",children:"POST_FAMILIAR_FIRE_PROJECTILE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FAMILIAR_FIRE_PROJECTILE"})," = ",(0,t.jsx)(n.code,{children:"1252"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a familiar fires a projectile."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"FamiliarVariant"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFamiliarFireProjectile(tear: EntityTear): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-134",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2055",children:"ModCallbackRepentogon.ts:2055"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_fire_bomb",children:"POST_FIRE_BOMB"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FIRE_BOMB"})," = ",(0,t.jsx)(n.code,{children:"1253"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player fires a Dr. Fetus bomb."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFireBomb(bomb: EntityBomb): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-135",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2064",children:"ModCallbackRepentogon.ts:2064"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_fire_bone_club",children:"POST_FIRE_BONE_CLUB"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FIRE_BONE_CLUB"})," = ",(0,t.jsx)(n.code,{children:"1254"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player fires The Forgotten's bone club."}),"\n",(0,t.jsx)(n.p,{children:"This is only called when the club is initially spawned, not when swung or charged and shot."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFireBoneClub(club: EntityKnife): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-136",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2075",children:"ModCallbackRepentogon.ts:2075"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_fire_brimstone",children:"POST_FIRE_BRIMSTONE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FIRE_BRIMSTONE"})," = ",(0,t.jsx)(n.code,{children:"1255"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player fires a brimstone laser. This is also fired for delayed brimstone."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFireBrimstone(brimstone: EntityLaser): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-137",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2084",children:"ModCallbackRepentogon.ts:2084"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_fire_brimstone_ball",children:"POST_FIRE_BRIMSTONE_BALL"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FIRE_BRIMSTONE_BALL"})," = ",(0,t.jsx)(n.code,{children:"1256"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player fires a brimstone ball."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFireBrimstoneBall(ball: EntityEffect): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-138",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2093",children:"ModCallbackRepentogon.ts:2093"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_fire_knife",children:"POST_FIRE_KNIFE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FIRE_KNIFE"})," = ",(0,t.jsx)(n.code,{children:"1257"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player fires a knife from Mom's Knife."}),"\n",(0,t.jsx)(n.p,{children:"This is only fired when the knife is initially spawned, not when charged and shot."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFireKnife(knife: EntityKnife): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-139",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2104",children:"ModCallbackRepentogon.ts:2104"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_fire_sword",children:"POST_FIRE_SWORD"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FIRE_SWORD"})," = ",(0,t.jsx)(n.code,{children:"1258"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player swings the Spirit Sword."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFireSword(sword: EntityKnife): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-140",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2113",children:"ModCallbackRepentogon.ts:2113"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_fire_tech_laser",children:"POST_FIRE_TECH_LASER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FIRE_TECH_LASER"})," = ",(0,t.jsx)(n.code,{children:"1259"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player fires a Tech laser."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFireTechLaser(laser: EntityLaser): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-141",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2122",children:"ModCallbackRepentogon.ts:2122"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_fire_tech_x_laser",children:"POST_FIRE_TECH_X_LASER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FIRE_TECH_X_LASER"})," = ",(0,t.jsx)(n.code,{children:"1260"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a player fires a Tech X laser."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFireTechXLaser(laser: EntityLaser): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-142",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2131",children:"ModCallbackRepentogon.ts:2131"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_familiar_fire_brimstone",children:"POST_FAMILIAR_FIRE_BRIMSTONE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FAMILIAR_FIRE_BRIMSTONE"})," = ",(0,t.jsx)(n.code,{children:"1261"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a familiar fires a brimstone laser."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFamiliarFireBrimstone(brimstone: EntityLaser): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-143",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2140",children:"ModCallbackRepentogon.ts:2140"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_familiar_fire_tech_laser",children:"POST_FAMILIAR_FIRE_TECH_LASER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_FAMILIAR_FIRE_TECH_LASER"})," = ",(0,t.jsx)(n.code,{children:"1262"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a familiar fires a tech laser."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postFamiliarFireTechLaser(laser: EntityLaser): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-144",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2149",children:"ModCallbackRepentogon.ts:2149"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"get_is_persistent_room_entity",children:"GET_IS_PERSISTENT_ROOM_ENTITY"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"GET_IS_PERSISTENT_ROOM_ENTITY"})," = ",(0,t.jsx)(n.code,{children:"1263"})]}),"\n",(0,t.jsx)(n.p,{children:"TODO: Document me fully! Return true to allow the entity to respawn."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function getIsPersistentRoomEntity(\n  entityType: EntityType,\n  variant: int\n): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-145",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2161",children:"ModCallbackRepentogon.ts:2161"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_player_hud_trinket_render",children:"PRE_PLAYER_HUD_TRINKET_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_PLAYER_HUD_TRINKET_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1264"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the trinket is rendered. Return an array containing the position and scale\nrespectively to override how the trinket hud is rendered. Alternatively, return true to prevent\nit from rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"TrinketSlot"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function prePlayerHudTrinketRender(\n  slot: TrinketSlot,\n  position: Vector,\n  scale: number,\n  player: EntityPlayer\n): [Vector, number] | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-146",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2181",children:"ModCallbackRepentogon.ts:2181"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_decoration_update",children:"PRE_GRID_ENTITY_DECORATION_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_DECORATION_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1400"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the decoration grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityDecorationUpdate(\n  decoration: GridEntityDecoration\n): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-147",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2196",children:"ModCallbackRepentogon.ts:2196"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_decoration_update",children:"POST_GRID_ENTITY_DECORATION_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_DECORATION_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1401"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the decoration grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityDecorationUpdate(decoration: GridEntityDecoration): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-148",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2209",children:"ModCallbackRepentogon.ts:2209"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_door_update",children:"PRE_GRID_ENTITY_DOOR_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_DOOR_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1402"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the door grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityDoorUpdate(door: GridEntityDoor): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-149",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2222",children:"ModCallbackRepentogon.ts:2222"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_door_update",children:"POST_GRID_ENTITY_DOOR_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_DOOR_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1403"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the door grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityDoorUpdate(door: GridEntityDoor): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-150",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2235",children:"ModCallbackRepentogon.ts:2235"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_fire_update",children:"PRE_GRID_ENTITY_FIRE_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_FIRE_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1404"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the fire grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsx)(n.p,{children:"Fire grid entities are largely unused, and in most cases you'll want to target the EntityNPC\nfireplaces."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityFireUpdate(fire: GridEntityFire): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-151",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2251",children:"ModCallbackRepentogon.ts:2251"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_fire_update",children:"POST_GRID_ENTITY_FIRE_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_FIRE_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1405"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the fire grid entity updates."}),"\n",(0,t.jsx)(n.p,{children:"Fire grid entities are largely unused, and in most cases you'll want to target the EntityNPC\nfireplaces."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityFireUpdate(fire: GridEntityFire): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-152",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2267",children:"ModCallbackRepentogon.ts:2267"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_gravity_update",children:"PRE_GRID_ENTITY_GRAVITY_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_GRAVITY_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1406"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the gravity grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityGravityUpdate(gravity: GridEntityGravity): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-153",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2280",children:"ModCallbackRepentogon.ts:2280"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_gravity_update",children:"POST_GRID_ENTITY_GRAVITY_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_GRAVITY_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1407"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the gravity grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityGravityUpdate(gravity: GridEntityGravity): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-154",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2293",children:"ModCallbackRepentogon.ts:2293"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_lock_update",children:"PRE_GRID_ENTITY_LOCK_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_LOCK_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1408"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the lock grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityLockUpdate(lock: GridEntityLock): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-155",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2306",children:"ModCallbackRepentogon.ts:2306"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_lock_update",children:"POST_GRID_ENTITY_LOCK_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_LOCK_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1409"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the lock grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityLockUpdate(lock: GridEntityLock): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-156",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2319",children:"ModCallbackRepentogon.ts:2319"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_pit_update",children:"PRE_GRID_ENTITY_PIT_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_PIT_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1410"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the pit grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityPitUpdate(pit: GridEntityPit): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-157",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2332",children:"ModCallbackRepentogon.ts:2332"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_pit_update",children:"POST_GRID_ENTITY_PIT_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_PIT_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1411"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the pit grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityPitUpdate(pit: GridEntityPit): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-158",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2345",children:"ModCallbackRepentogon.ts:2345"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_poop_update",children:"PRE_GRID_ENTITY_POOP_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_POOP_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1412"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the poop grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsx)(n.p,{children:"This callback does not include the EntityNPC poops used by Tainted Blue Baby."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityPoopUpdate(poop: GridEntityPoop): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-159",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2360",children:"ModCallbackRepentogon.ts:2360"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_poop_update",children:"POST_GRID_ENTITY_POOP_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_POOP_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1413"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the poop grid entity updates."}),"\n",(0,t.jsx)(n.p,{children:"This callback does not include the EntityNPC poops used by Tainted Blue Baby."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityPoopUpdate(poop: GridEntityPoop): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-160",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2375",children:"ModCallbackRepentogon.ts:2375"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_pressure_plate_update",children:"PRE_GRID_ENTITY_PRESSURE_PLATE_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_PRESSURE_PLATE_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1414"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the pressure plate grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityPressurePlateUpdate(\n  pressurePlate: GridEntityPressurePlate\n): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-161",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2390",children:"ModCallbackRepentogon.ts:2390"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_pressure_plate_update",children:"POST_GRID_ENTITY_PRESSURE_PLATE_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_PRESSURE_PLATE_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1415"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the pressure plate grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityPressurePlateUpdate(pressurePlate: GridEntityPressurePlate): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-162",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2403",children:"ModCallbackRepentogon.ts:2403"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_rock_update",children:"PRE_GRID_ENTITY_ROCK_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_ROCK_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1416"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the rock grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityRockUpdate(rock: GridEntityRock): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-163",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2416",children:"ModCallbackRepentogon.ts:2416"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_rock_update",children:"POST_GRID_ENTITY_ROCK_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_ROCK_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1417"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the rock grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityRockUpdate(rock: GridEntityRock): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-164",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2429",children:"ModCallbackRepentogon.ts:2429"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_spikes_update",children:"PRE_GRID_ENTITY_SPIKES_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_SPIKES_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1418"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the spikes grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntitySpikesUpdate(spikes: GridEntitySpikes): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-165",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2442",children:"ModCallbackRepentogon.ts:2442"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_spikes_update",children:"POST_GRID_ENTITY_SPIKES_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_SPIKES_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1419"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the spikes grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntitySpikesUpdate(spikes: GridEntitySpikes): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-166",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2455",children:"ModCallbackRepentogon.ts:2455"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_staircase_update",children:"PRE_GRID_ENTITY_STAIRCASE_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_STAIRCASE_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1420"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the staircase grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityStaircaseUpdate(stairCase: GridEntityStaircase): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-167",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2468",children:"ModCallbackRepentogon.ts:2468"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_staircase_update",children:"POST_GRID_ENTITY_STAIRCASE_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_STAIRCASE_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1421"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the staircase grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityStaircaseUpdate(stairCase: GridEntityStaircase): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-168",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2481",children:"ModCallbackRepentogon.ts:2481"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_statue_update",children:"PRE_GRID_ENTITY_STATUE_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_STATUE_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1422"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the statue grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityStatueUpdate(statue: GridEntityStatue): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-169",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2494",children:"ModCallbackRepentogon.ts:2494"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_statue_update",children:"POST_GRID_ENTITY_STATUE_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_STATUE_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1423"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the statue grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityStatueUpdate(statue: GridEntityStatue): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-170",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2507",children:"ModCallbackRepentogon.ts:2507"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_teleporter_update",children:"PRE_GRID_ENTITY_TELEPORTER_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_TELEPORTER_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1424"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the teleporter grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityTeleporterUpdate(\n  teleporter: GridEntityTeleporter\n): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-171",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2522",children:"ModCallbackRepentogon.ts:2522"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_teleporter_update",children:"POST_GRID_ENTITY_TELEPORTER_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_TELEPORTER_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1425"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the teleporter grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityTeleporterUpdate(\n  teleporter: GridEntityTeleporter\n): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-172",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2537",children:"ModCallbackRepentogon.ts:2537"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_trapdoor_update",children:"PRE_GRID_ENTITY_TRAPDOOR_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_TRAPDOOR_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1426"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the trapdoor grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityTrapdoorUpdate(trapdoor: GridEntityTrapdoor): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-173",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2550",children:"ModCallbackRepentogon.ts:2550"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_trapdoor_update",children:"POST_GRID_ENTITY_TRAPDOOR_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_TRAPDOOR_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1427"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the trapdoor grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityTrapdoorUpdate(trapdoor: GridEntityTrapdoor): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-174",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2563",children:"ModCallbackRepentogon.ts:2563"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_web_update",children:"PRE_GRID_ENTITY_WEB_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_WEB_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1428"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the web grid entity updates. Return false to cancel the update."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityWebUpdate(web: GridEntityWeb): boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-175",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2576",children:"ModCallbackRepentogon.ts:2576"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_web_update",children:"POST_GRID_ENTITY_WEB_UPDATE"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_WEB_UPDATE"})," = ",(0,t.jsx)(n.code,{children:"1429"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the web grid entity updates."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityWebUpdate(web: GridEntityWeb): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-176",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2589",children:"ModCallbackRepentogon.ts:2589"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_spikes_render",children:"PRE_GRID_ENTITY_SPIKES_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_SPIKES_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1432"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the spikes grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntitySpikesRender(\n  grid: GridEntitySpikes,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-177",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2606",children:"ModCallbackRepentogon.ts:2606"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_spikes_render",children:"POST_GRID_ENTITY_SPIKES_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_SPIKES_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1433"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the spikes grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntitySpikesRender(grid: GridEntitySpikes): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-178",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2619",children:"ModCallbackRepentogon.ts:2619"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_web_render",children:"PRE_GRID_ENTITY_WEB_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_WEB_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1434"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the web grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityWebRender(\n  grid: GridEntityWeb,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-179",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2636",children:"ModCallbackRepentogon.ts:2636"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_web_render",children:"POST_GRID_ENTITY_WEB_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_WEB_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1435"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the web grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityWebRender(grid: GridEntityWeb): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-180",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2649",children:"ModCallbackRepentogon.ts:2649"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_tnt_render",children:"PRE_GRID_ENTITY_TNT_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_TNT_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1436"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the TNT grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityTNTRender(\n  grid: GridEntityTNT,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-181",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2666",children:"ModCallbackRepentogon.ts:2666"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_tnt_render",children:"POST_GRID_ENTITY_TNT_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_TNT_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1437"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the TNT grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityTNTRender(grid: GridEntityTNT): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-182",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2679",children:"ModCallbackRepentogon.ts:2679"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_trapdoor_render",children:"PRE_GRID_ENTITY_TRAPDOOR_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_TRAPDOOR_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1438"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the trapdoor grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityTrapdoorRender(\n  grid: GridEntityTrapdoor,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-183",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2696",children:"ModCallbackRepentogon.ts:2696"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_trapdoor_render",children:"POST_GRID_ENTITY_TRAPDOOR_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_TRAPDOOR_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1439"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the trapdoor grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityTrapdoorRender(grid: GridEntityTrapdoor): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-184",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2709",children:"ModCallbackRepentogon.ts:2709"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_staircase_render",children:"PRE_GRID_ENTITY_STAIRCASE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_STAIRCASE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1440"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the staircase grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityStaircaseRender(\n  grid: GridEntityStaircase,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-185",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2726",children:"ModCallbackRepentogon.ts:2726"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_staircase_render",children:"POST_GRID_ENTITY_STAIRCASE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_STAIRCASE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1441"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the staircase grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityStaircaseRender(grid: GridEntityStaircase): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-186",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2739",children:"ModCallbackRepentogon.ts:2739"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_decoration_render",children:"PRE_GRID_ENTITY_DECORATION_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_DECORATION_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1444"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the decoration grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityDecorationRender(\n  grid: GridEntityDecoration,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-187",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2756",children:"ModCallbackRepentogon.ts:2756"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_decoration_render",children:"POST_GRID_ENTITY_DECORATION_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_DECORATION_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1445"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the decoration grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityDecorationRender(grid: GridEntityDecoration): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-188",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2769",children:"ModCallbackRepentogon.ts:2769"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_door_render",children:"PRE_GRID_ENTITY_DOOR_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_DOOR_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1446"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the door grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityDoorRender(\n  grid: GridEntityDoor,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-189",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2786",children:"ModCallbackRepentogon.ts:2786"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_door_render",children:"POST_GRID_ENTITY_DOOR_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_DOOR_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1447"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the door grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityDoorRender(grid: GridEntityDoor): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-190",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2799",children:"ModCallbackRepentogon.ts:2799"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_fire_render",children:"PRE_GRID_ENTITY_FIRE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_FIRE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1448"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the staircase grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityFireRender(\n  grid: GridEntityFire,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-191",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2816",children:"ModCallbackRepentogon.ts:2816"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_fire_render",children:"POST_GRID_ENTITY_FIRE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_FIRE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1449"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the staircase grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityFireRender(grid: GridEntityFire): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-192",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2829",children:"ModCallbackRepentogon.ts:2829"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_lock_render",children:"PRE_GRID_ENTITY_LOCK_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_LOCK_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1450"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the lock grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityLockRender(\n  grid: GridEntityLock,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-193",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2846",children:"ModCallbackRepentogon.ts:2846"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_lock_render",children:"POST_GRID_ENTITY_LOCK_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_LOCK_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1451"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the lock grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityLockRender(grid: GridEntityLock): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-194",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2859",children:"ModCallbackRepentogon.ts:2859"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_teleporter_render",children:"PRE_GRID_ENTITY_TELEPORTER_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_TELEPORTER_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1452"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the teleporter grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityTeleporterRender(\n  grid: GridEntityTeleporter,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-195",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2876",children:"ModCallbackRepentogon.ts:2876"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_teleporter_render",children:"POST_GRID_ENTITY_TELEPORTER_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_TELEPORTER_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1453"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the teleporter grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityTeleporterRender(grid: GridEntityTeleporter): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-196",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2889",children:"ModCallbackRepentogon.ts:2889"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_pit_render",children:"PRE_GRID_ENTITY_PIT_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_PIT_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1454"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the pit grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityPitRender(\n  grid: GridEntityPit,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-197",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2906",children:"ModCallbackRepentogon.ts:2906"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_pit_render",children:"POST_GRID_ENTITY_PIT_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_PIT_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1455"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the pit grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityPitRender(grid: GridEntityPit): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-198",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2919",children:"ModCallbackRepentogon.ts:2919"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_poop_render",children:"PRE_GRID_ENTITY_POOP_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_POOP_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1456"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the poop grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityPoopRender(\n  grid: GridEntityPoop,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-199",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2936",children:"ModCallbackRepentogon.ts:2936"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_poop_render",children:"POST_GRID_ENTITY_POOP_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_POOP_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1457"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the poop grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityPoopRender(grid: GridEntityPoop): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-200",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2949",children:"ModCallbackRepentogon.ts:2949"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_rock_render",children:"PRE_GRID_ENTITY_ROCK_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_ROCK_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1458"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the rock grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityRockRender(\n  grid: GridEntityRock,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-201",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2966",children:"ModCallbackRepentogon.ts:2966"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_rock_render",children:"POST_GRID_ENTITY_ROCK_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_ROCK_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1459"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the rock grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityRockRender(grid: GridEntityRock): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-202",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2979",children:"ModCallbackRepentogon.ts:2979"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_pressure_plate_render",children:"PRE_GRID_ENTITY_PRESSURE_PLATE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_PRESSURE_PLATE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1460"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the pressure plate grid entity renders. Return a Vector to modify the render\noffset. Alternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityPressurePlateRender(\n  grid: GridEntityPressurePlate,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-203",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L2996",children:"ModCallbackRepentogon.ts:2996"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_pressure_plate_render",children:"POST_GRID_ENTITY_PRESSURE_PLATE_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_PRESSURE_PLATE_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1461"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the pressure plate grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postGridEntityPressurePlateRender(grid: GridEntityPressurePlate): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-204",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L3009",children:"ModCallbackRepentogon.ts:3009"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"pre_grid_entity_wall_render",children:"PRE_GRID_ENTITY_WALL_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"PRE_GRID_ENTITY_WALL_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1462"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires before the wall grid entity renders. Return a Vector to modify the render offset.\nAlternatively, return false to cancel the rendering."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityWallRender(\n  grid: GridEntityWall,\n  offset: Vector\n): Vector | boolean | undefined {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-205",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L3026",children:"ModCallbackRepentogon.ts:3026"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_grid_entity_wall_render",children:"POST_GRID_ENTITY_WALL_RENDER"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_GRID_ENTITY_WALL_RENDER"})," = ",(0,t.jsx)(n.code,{children:"1463"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after the wall grid entity renders."}),"\n",(0,t.jsxs)(n.p,{children:["When registering the callback with the ",(0,t.jsx)(n.code,{children:"addCallbackRepentogon"})," method:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can provide an optional third argument that will make the callback only fire if it\nmatches the ",(0,t.jsx)(n.code,{children:"GridEntityType"})," provided."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function preGridEntityWallRender(grid: GridEntityWall): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-206",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L3039",children:"ModCallbackRepentogon.ts:3039"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"post_save_slot_load",children:"POST_SAVE_SLOT_LOAD"}),"\n",(0,t.jsxs)(n.p,{children:["\u2022 ",(0,t.jsx)(n.strong,{children:"POST_SAVE_SLOT_LOAD"})," = ",(0,t.jsx)(n.code,{children:"1470"})]}),"\n",(0,t.jsx)(n.p,{children:"Fires after a save slot is loaded by the game."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"saveSlot"})," parameter is the slot you should care about."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"isSlotSelected"})," parameter indicates if the slot is being loaded has been actually\nselected from the save menu screen."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"rawSlot"})," parameter is the actual save slot the game uses, not the one the API uses since\nit can be 0!"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"function postSaveSlotLoad(saveSlot: int, isSlotSelected: boolean, rawSlot: int): void {}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-207",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ModCallbackRepentogon.ts#L3054",children:"ModCallbackRepentogon.ts:3054"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},71184:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>r});var t=i(14041);const l={},s=t.createContext(l);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);