"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7740],{26215:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var t=s(31085),i=s(71184);const r={custom_edit_url:null},l="Enums",d={id:"isaacscript-common/functions/enums",title:"Enums",description:"Type Aliases",source:"@site/docs/isaacscript-common/functions/enums.md",sourceDirName:"isaacscript-common/functions",slug:"/isaacscript-common/functions/enums",permalink:"/isaacscript-common/functions/enums",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Entity Types",permalink:"/isaacscript-common/functions/entityTypes"},next:{title:"External",permalink:"/isaacscript-common/functions/external"}},c={},a=[{value:"Type Aliases",id:"type-aliases",level:2},{value:"TranspiledEnum",id:"transpiledenum",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"Functions",id:"functions",level:2},{value:"getEnumEntries",id:"getenumentries",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getEnumKeys",id:"getenumkeys",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getEnumLength",id:"getenumlength",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getEnumNames",id:"getenumnames",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getEnumValues",id:"getenumvalues",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getHighestEnumValue",id:"gethighestenumvalue",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"getLowestEnumValue",id:"getlowestenumvalue",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"getRandomEnumValue",id:"getrandomenumvalue",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"interfaceSatisfiesEnum",id:"interfacesatisfiesenum",level:3},{value:"Type parameters",id:"type-parameters-5",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"isEnumValue",id:"isenumvalue",level:3},{value:"Type parameters",id:"type-parameters-6",level:4},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"validateCustomEnum",id:"validatecustomenum",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"validateEnumContiguous",id:"validateenumcontiguous",level:3},{value:"Type parameters",id:"type-parameters-7",level:4},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-12",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"enums",children:"Enums"}),"\n",(0,t.jsx)(n.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,t.jsx)(n.h3,{id:"transpiledenum",children:"TranspiledEnum"}),"\n",(0,t.jsxs)(n.p,{children:["\u01ac ",(0,t.jsx)(n.strong,{children:"TranspiledEnum"}),": ",(0,t.jsx)(n.code,{children:"Record"}),"<",(0,t.jsx)(n.code,{children:"string"}),", ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"BitFlag"})," | ",(0,t.jsx)(n.code,{children:"BitFlag128"}),">"]}),"\n",(0,t.jsx)(n.p,{children:"In Lua, tables can have number keys, but since this is a type only being validated in TypeScript,\nwe can match the JavaScript definition, meaning that we can omit the number from the keys."}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L11",children:"packages/isaacscript-common/src/functions/enums.ts:11"})}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"getenumentries",children:"getEnumEntries"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getEnumEntries"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): ",(0,t.jsx)(n.code,{children:"ReadonlyArray"}),"<[key: string, value: T[keyof T]]>"]}),"\n",(0,t.jsx)(n.p,{children:"TypeScriptToLua will transpile TypeScript number enums to Lua tables that have a double mapping.\nThus, when you iterate over them, you will get both the names of the enums and the values of the\nenums, in a random order. Use this helper function to get the entries of the enum with the\nreverse mappings filtered out."}),"\n",(0,t.jsx)(n.p,{children:"This function will return the enum values in a sorted order, which may not necessarily be the\nsame order as which they were declared in. (It is impossible to get the declaration order at\nrun-time.)"}),"\n",(0,t.jsx)(n.p,{children:"This function will work properly for both number enums and string enums. (Reverse mappings are\nnot created for string enums.)"}),"\n",(0,t.jsxs)(n.p,{children:["Also see the ",(0,t.jsx)(n.code,{children:"getEnumKeys"})," and ",(0,t.jsx)(n.code,{children:"getEnumValues"})," helper functions."]}),"\n",(0,t.jsxs)(n.p,{children:["For a more in depth explanation, see:\n",(0,t.jsx)(n.a,{href:"https://isaacscript.github.io/main/gotchas#iterating-over-enums",children:"https://isaacscript.github.io/main/gotchas#iterating-over-enums"})]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ReadonlyArray"}),"<[key: string, value: T[keyof T]]>"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L34",children:"packages/isaacscript-common/src/functions/enums.ts:34"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getenumkeys",children:"getEnumKeys"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getEnumKeys"}),"(",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): readonly ",(0,t.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,t.jsx)(n.p,{children:"TypeScriptToLua will transpile TypeScript number enums to Lua tables that have a double mapping.\nThus, when you iterate over them, you will get both the names of the enums and the values of the\nenums, in a random order. If all you need are the keys of an enum, use this helper function."}),"\n",(0,t.jsx)(n.p,{children:"This function will return the enum keys in a sorted order, which may not necessarily be the same\norder as which they were declared in. (It is impossible to get the declaration order at\nrun-time.)"}),"\n",(0,t.jsx)(n.p,{children:"This function will work properly for both number enums and string enums. (Reverse mappings are\nnot created for string enums.)"}),"\n",(0,t.jsxs)(n.p,{children:["Also see the ",(0,t.jsx)(n.code,{children:"getEnumEntries"})," and ",(0,t.jsx)(n.code,{children:"getEnumValues"})," helper functions."]}),"\n",(0,t.jsxs)(n.p,{children:["For a more in depth explanation, see:\n",(0,t.jsx)(n.a,{href:"https://isaacscript.github.io/main/gotchas#iterating-over-enums",children:"https://isaacscript.github.io/main/gotchas#iterating-over-enums"})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:["readonly ",(0,t.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L72",children:"packages/isaacscript-common/src/functions/enums.ts:72"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getenumlength",children:"getEnumLength"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getEnumLength"}),"(",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to get the amount of entries inside of an enum."}),"\n",(0,t.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L78",children:"packages/isaacscript-common/src/functions/enums.ts:78"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getenumnames",children:"getEnumNames"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getEnumNames"}),"(",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): readonly ",(0,t.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,t.jsx)(n.p,{children:"TypeScriptToLua will transpile TypeScript number enums to Lua tables that have a double mapping.\nThus, when you iterate over them, you will get both the names of the enums and the values of the\nenums, in a random order. If all you need are the names of an enum from the reverse mapping, use\nthis helper function."}),"\n",(0,t.jsx)(n.p,{children:"This function will return the enum names in a sorted order, which may not necessarily be the same\norder as which they were declared in. (It is impossible to get the declaration order at\nrun-time.)"}),"\n",(0,t.jsxs)(n.p,{children:["This function will work properly for both number enums and string enums. (Reverse mappings are\nnot created for string enums, so their names would be equivalent to what would be returned by the\n",(0,t.jsx)(n.code,{children:"getEnumKeys"})," function.)"]}),"\n",(0,t.jsxs)(n.p,{children:["For a more in depth explanation, see:\n",(0,t.jsx)(n.a,{href:"https://isaacscript.github.io/main/gotchas#iterating-over-enums",children:"https://isaacscript.github.io/main/gotchas#iterating-over-enums"})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:["readonly ",(0,t.jsx)(n.code,{children:"string"}),"[]"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L100",children:"packages/isaacscript-common/src/functions/enums.ts:100"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getenumvalues",children:"getEnumValues"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getEnumValues"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): ",(0,t.jsx)(n.code,{children:"ReadonlyArray"}),"<",(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"]>"]}),"\n",(0,t.jsx)(n.p,{children:"TypeScriptToLua will transpile TypeScript number enums to Lua tables that have a double mapping.\nThus, when you iterate over them, you will get both the names of the enums and the values of the\nenums, in a random order. If all you need are the values of an enum, use this helper function."}),"\n",(0,t.jsx)(n.p,{children:"This function will return the enum values in a sorted order, which may not necessarily be the\nsame order as which they were declared in. (It is impossible to get the declaration order at\nrun-time.)"}),"\n",(0,t.jsx)(n.p,{children:"This function will work properly for both number enums and string enums. (Reverse mappings are\nnot created for string enums.)"}),"\n",(0,t.jsxs)(n.p,{children:["Also see the ",(0,t.jsx)(n.code,{children:"getEnumEntries"})," and ",(0,t.jsx)(n.code,{children:"getEnumKeys"})," helper functions."]}),"\n",(0,t.jsxs)(n.p,{children:["For a more in depth explanation, see:\n",(0,t.jsx)(n.a,{href:"https://isaacscript.github.io/main/gotchas#iterating-over-enums",children:"https://isaacscript.github.io/main/gotchas#iterating-over-enums"})]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-1",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"ReadonlyArray"}),"<",(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"]>"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L134",children:"packages/isaacscript-common/src/functions/enums.ts:134"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"gethighestenumvalue",children:"getHighestEnumValue"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getHighestEnumValue"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): ",(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to get the enum value with the highest value."}),"\n",(0,t.jsx)(n.p,{children:"Note that this is not necessarily the enum value that is declared last in the code, since there\nis no way to infer that at run-time."}),"\n",(0,t.jsx)(n.p,{children:"Throws an error if the provided enum is empty."}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-2",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"]"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L149",children:"packages/isaacscript-common/src/functions/enums.ts:149"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getlowestenumvalue",children:"getLowestEnumValue"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getLowestEnumValue"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): ",(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to get the enum value with the lowest value."}),"\n",(0,t.jsx)(n.p,{children:"Note that this is not necessarily the enum value that is declared first in the code, since there\nis no way to infer that at run-time."}),"\n",(0,t.jsx)(n.p,{children:"Throws an error if the provided enum is empty."}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-3",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"]"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L171",children:"packages/isaacscript-common/src/functions/enums.ts:171"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getrandomenumvalue",children:"getRandomEnumValue"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getRandomEnumValue"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"transpiledEnum"}),", ",(0,t.jsx)(n.code,{children:"seedOrRNG"}),", ",(0,t.jsx)(n.code,{children:"exceptions?"}),"): ",(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"]"]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to get a random value from the provided enum."}),"\n",(0,t.jsxs)(n.p,{children:["If you want an unseeded value, you must explicitly pass ",(0,t.jsx)(n.code,{children:"undefined"})," to the ",(0,t.jsx)(n.code,{children:"seedOrRNG"})," parameter."]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-4",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Default value"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The enum to get the value from."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"seedOrRNG"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"RNG"})," | ",(0,t.jsx)(n.code,{children:"Seed"})]}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["The ",(0,t.jsx)(n.code,{children:"Seed"})," or ",(0,t.jsx)(n.code,{children:"RNG"})," object to use. If an ",(0,t.jsx)(n.code,{children:"RNG"})," object is provided, the ",(0,t.jsx)(n.code,{children:"RNG.Next"})," method will be called. If ",(0,t.jsx)(n.code,{children:"undefined"})," is provided, it will default to a random seed."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"exceptions"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["readonly ",(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"][]"]}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"[]"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Optional. An array of elements to skip over if selected."})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"T"}),"[keyof ",(0,t.jsx)(n.code,{children:"T"}),"]"]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L196",children:"packages/isaacscript-common/src/functions/enums.ts:196"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"interfacesatisfiesenum",children:"interfaceSatisfiesEnum"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"interfaceSatisfiesEnum"}),"<",(0,t.jsx)(n.code,{children:"T"}),", ",(0,t.jsx)(n.code,{children:"Enum"}),">(): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to validate that an interface contains all of the keys of an enum. You must\nspecify both generic parameters in order for this to work properly (i.e. the interface and then\nthe enum)."}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"enum MyEnum {\n  Value1,\n  Value2,\n  Value3,\n}\n\ninterface MyEnumToType {\n  [MyEnum.Value1]: boolean;\n  [MyEnum.Value2]: number;\n  [MyEnum.Value3]: string;\n}\n\ninterfaceSatisfiesEnum<MyEnumToType, MyEnum>();\n"})}),"\n",(0,t.jsxs)(n.p,{children:["This function is only meant to be used with interfaces (i.e. types that will not exist at\nrun-time). If you are generating an object that will contain all of the keys of an enum, use the\n",(0,t.jsx)(n.code,{children:"satisfies"})," operator with the ",(0,t.jsx)(n.code,{children:"Record"})," type instead."]}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-5",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.code,{children:"Record"}),"<",(0,t.jsx)(n.code,{children:"Enum"}),", ",(0,t.jsx)(n.code,{children:"unknown"}),">"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Enum"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"number"})]})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L232",children:"packages/isaacscript-common/src/functions/enums.ts:232"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"isenumvalue",children:"isEnumValue"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"isEnumValue"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"value"}),", ",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): value is T[keyof T]"]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to validate that a particular value exists inside of an enum."}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-6",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"value"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,t.jsx)(n.code,{children:"string"})," | ",(0,t.jsx)(n.code,{children:"number"})," | ",(0,t.jsx)(n.code,{children:"BitFlag"})," | ",(0,t.jsx)(n.code,{children:"BitFlag128"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:"value is T[keyof T]"}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L239",children:"packages/isaacscript-common/src/functions/enums.ts:239"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"validatecustomenum",children:"validateCustomEnum"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"validateCustomEnum"}),"(",(0,t.jsx)(n.code,{children:"transpiledEnumName"}),", ",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to check every value of a custom enum for -1. Will throw an run-time error if any\n-1 values are found. This is helpful because many methods of the Isaac class return -1 if they\nfail."}),"\n",(0,t.jsx)(n.p,{children:"For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:'enum EntityTypeCustom {\n  FOO = Isaac.GetEntityTypeByName("Foo"),\n}\n\nvalidateCustomEnum("EntityTypeCustom", EntityTypeCustom);\n'})}),"\n",(0,t.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnumName"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L262",children:"packages/isaacscript-common/src/functions/enums.ts:262"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"validateenumcontiguous",children:"validateEnumContiguous"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"validateEnumContiguous"}),"<",(0,t.jsx)(n.code,{children:"T"}),">(",(0,t.jsx)(n.code,{children:"transpiledEnumName"}),", ",(0,t.jsx)(n.code,{children:"transpiledEnum"}),"): ",(0,t.jsx)(n.code,{children:"void"})]}),"\n",(0,t.jsx)(n.p,{children:"Helper function to validate if every value in a number enum is contiguous, starting at 0."}),"\n",(0,t.jsx)(n.p,{children:"This is useful to automate checking large enums for typos."}),"\n",(0,t.jsx)(n.h4,{id:"type-parameters-7",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["extends ",(0,t.jsx)(n.a,{href:"/isaacscript-common/functions/enums#transpiledenum",children:(0,t.jsx)(n.code,{children:"TranspiledEnum"})})]})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnumName"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"string"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"transpiledEnum"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"T"})})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"void"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/enums.ts#L280",children:"packages/isaacscript-common/src/functions/enums.ts:280"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var t=s(14041);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);