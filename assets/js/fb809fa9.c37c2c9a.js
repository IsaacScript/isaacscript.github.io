"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[63240],{34767:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var s=n(31085),t=n(71184);const r={custom_edit_url:null},i="Save Data Manager",l={id:"isaacscript-common/features/SaveDataManager",title:"Save Data Manager",description:"Hierarchy",source:"@site/docs/isaacscript-common/features/SaveDataManager.md",sourceDirName:"isaacscript-common/features",slug:"/isaacscript-common/features/SaveDataManager",permalink:"/isaacscript-common/features/SaveDataManager",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Run Next Run",permalink:"/isaacscript-common/features/RunNextRun"},next:{title:"Spawn Rock Alt Rewards",permalink:"/isaacscript-common/features/SpawnRockAltRewards"}},c={},d=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Methods",id:"methods",level:2},{value:"saveDataManager",id:"savedatamanager",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"saveDataManagerLoad",id:"savedatamanagerload",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"saveDataManagerSave",id:"savedatamanagersave",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"saveDataManagerSetGlobal",id:"savedatamanagersetglobal",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"saveDataManagerRegisterClass",id:"savedatamanagerregisterclass",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"saveDataManagerRemove",id:"savedatamanagerremove",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"saveDataManagerReset",id:"savedatamanagerreset",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"saveDataManagerInMenu",id:"savedatamanagerinmenu",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"saveDataManagerLogSubscribers",id:"savedatamanagerlogsubscribers",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4}];function o(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"save-data-manager",children:"Save Data Manager"}),"\n",(0,s.jsx)(a.h2,{id:"hierarchy",children:"Hierarchy"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"Feature"})}),"\n",(0,s.jsxs)(a.p,{children:["\u21b3 ",(0,s.jsx)(a.strong,{children:(0,s.jsx)(a.code,{children:"SaveDataManager"})})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(a.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanager",children:"saveDataManager"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManager"}),"<",(0,s.jsx)(a.code,{children:"Persistent"}),", ",(0,s.jsx)(a.code,{children:"Run"}),", ",(0,s.jsx)(a.code,{children:"Level"}),">(",(0,s.jsx)(a.code,{children:"key"}),", ",(0,s.jsx)(a.code,{children:"v"}),", ",(0,s.jsx)(a.code,{children:"conditionalFunc?"}),"): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.p,{children:"This is the entry point to the save data manager, a system which provides two major features:"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsx)(a.li,{children:"Automatic resetting of variables on a new run, on a new level, or on a new room (as\ndesired)."}),"\n",(0,s.jsx)(a.li,{children:'Automatic saving and loading of all tracked data to the "save#.dat" file.'}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"You provide this function with an object containing your variables, and then it will\nautomatically manage them for you. (See below for an example.)"}),"\n",(0,s.jsxs)(a.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(a.code,{children:"ISCFeature.SAVE_DATA_MANAGER"}),".\n(Upgrade your mod before registering any of your own callbacks so that the save data manager\nwill run before any of your code does.)"]}),"\n",(0,s.jsx)(a.p,{children:"The save data manager is meant to be called once for each feature of your mod. In other words,\nyou should not put all of the variables for your mod on the same object. Instead, scope your\nvariables locally to a single file that contains a mod feature, and then call this function to\nregister them. For example:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ts",children:'// In file: feature1.ts\n\n// Declare local variables for this file or feature.\nconst v = {\n  // These variables are never reset; manage them yourself at will.\n  persistent: {\n    foo1: 0,\n  },\n\n  // These variables are reset at the beginning of every run.\n  run: {\n    foo2: 0,\n  },\n\n  // These variables are reset at the beginning of every level.\n  level: {\n    foo3: 0,\n  },\n\n  // These variables are reset at the beginning of every room.\n  room: {\n    foo4: 0,\n  },\n};\n// The child objects of "persistent", "run", "level", and "room are optional; only create the\n// ones that you need.\n\n// Now, give `v` to the save data manager, and it will automatically manage the variables for\n// you.\nmod.saveDataManager("feature1", v);\n\n// Elsewhere in the file, use your variables.\nfunction feature1Function() {\n  if (v.run.foo1 > 0) {\n    // Insert code here.\n  }\n}\n'})}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsxs)(a.li,{children:["Save data is loaded from disk in the ",(0,s.jsx)(a.code,{children:"POST_PLAYER_INIT"})," callback (i.e. the first callback\nthat can possibly run)."]}),"\n",(0,s.jsxs)(a.li,{children:["Save data is recorded to disk in the ",(0,s.jsx)(a.code,{children:"PRE_GAME_EXIT"})," callback."]}),"\n"]}),"\n",(0,s.jsxs)(a.p,{children:["You can use many different variable types on your variable object, but not everything is\nsupported. For the specific things that are supported, see the documentation for the ",(0,s.jsx)(a.code,{children:"deepCopy"}),"\nhelper function."]}),"\n",(0,s.jsxs)(a.p,{children:["If you want the save data manager to load data before the ",(0,s.jsx)(a.code,{children:"POST_PLAYER_INIT"})," callback (i.e. in\nthe main menu), then you should explicitly call the ",(0,s.jsx)(a.code,{children:"saveDataManagerLoad"})," function. (The save\ndata manager cannot do this on its own because it cannot know when your mod features are\nfinished initializing.)"]}),"\n",(0,s.jsxs)(a.p,{children:["Some features may have variables that need to be automatically reset per run/level, but not\nsaved to disk on game exit. (For example, if they contain functions or other non-serializable\ndata.) For these cases, set the second argument of this function to ",(0,s.jsx)(a.code,{children:"false"}),"."]}),"\n",(0,s.jsxs)(a.p,{children:['Note that when the player uses Glowing Hourglass, the save data manager will automatically\nrestore any variables on a "run" or "level" object with a backup that was created when the room\nwas entered. Thus, you should not have to explicitly program support for Glowing Hourglass into\nyour mod features that use the save data manager. If this is undesired for your specific\nuse-case, then add a key of ',(0,s.jsx)(a.code,{children:"__ignoreGlowingHourGlass: true"}),' to your "run" or "level" object.']}),"\n",(0,s.jsxs)(a.p,{children:['By default, the Glowing Hour Glass functionality will not apply to "persistent" objects. If\nthis is undesired, you can add a key of ',(0,s.jsx)(a.code,{children:"__rewindWithGlowingHourGlass: true"})," to the object."]}),"\n",(0,s.jsx)(a.h4,{id:"type-parameters",children:"Type parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsx)(a.tr,{children:(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Name"})})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsx)(a.tr,{children:(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"Persistent"})})}),(0,s.jsx)(a.tr,{children:(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"Run"})})}),(0,s.jsx)(a.tr,{children:(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"Level"})})})]})]}),"\n",(0,s.jsx)(a.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Type"}),(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"key"})}),(0,s.jsxs)(a.td,{style:{textAlign:"left"},children:[(0,s.jsx)(a.code,{children:"string"})," | ",(0,s.jsx)(a.code,{children:"object"})]}),(0,s.jsx)(a.td,{style:{textAlign:"left"},children:"The name of the file or feature that is submitting data to be managed by the save data manager. The save data manager will throw an error if the key is already registered. Note that you can also pass a TSTL class instead of a string and the save data manager will use the name of the class as the key."})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"v"})}),(0,s.jsxs)(a.td,{style:{textAlign:"left"},children:[(0,s.jsx)(a.a,{href:"/isaacscript-common/other/interfaces/SaveData",children:(0,s.jsx)(a.code,{children:"SaveData"})}),"<",(0,s.jsx)(a.code,{children:"Persistent"}),", ",(0,s.jsx)(a.code,{children:"Run"}),", ",(0,s.jsx)(a.code,{children:"Level"}),">"]}),(0,s.jsxs)(a.td,{style:{textAlign:"left"},children:["An object that corresponds to the ",(0,s.jsx)(a.code,{children:"SaveData"}),' interface. The object is conventionally called "v" for brevity. ("v" is short for "local variables").']})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"conditionalFunc?"})}),(0,s.jsxs)(a.td,{style:{textAlign:"left"},children:["() => ",(0,s.jsx)(a.code,{children:"boolean"})]}),(0,s.jsxs)(a.td,{style:{textAlign:"left"},children:["Optional. A function to run to check if this save data should be written to disk. Default is ",(0,s.jsx)(a.code,{children:"() => true"}),', meaning that this save data will always be written to disk. Use a conditional function for the situations when the local variables are for a feature that the end-user can disable. (If the feature is disabled, then there would be no point in writing any of the variables to the "save#.dat" file.) You can also specify ',(0,s.jsx)(a.code,{children:"false"})," to this argument in order to completely disable saving data. (Specifying ",(0,s.jsx)(a.code,{children:"false"})," will allow you to use non-serializable objects in your save data, such as ",(0,s.jsx)(a.code,{children:"EntityPtr"}),"."]})]})]})]}),"\n",(0,s.jsx)(a.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L320",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:320"})}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManager"}),"(",(0,s.jsx)(a.code,{children:"key"}),", ",(0,s.jsx)(a.code,{children:"v"}),", ",(0,s.jsx)(a.code,{children:"conditionalFunc"}),"): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"key"})}),(0,s.jsxs)(a.td,{style:{textAlign:"left"},children:[(0,s.jsx)(a.code,{children:"string"})," | ",(0,s.jsx)(a.code,{children:"object"})]})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"v"})}),(0,s.jsxs)(a.td,{style:{textAlign:"left"},children:[(0,s.jsx)(a.a,{href:"/isaacscript-common/other/interfaces/SaveData",children:(0,s.jsx)(a.code,{children:"SaveData"})}),"<",(0,s.jsx)(a.code,{children:"unknown"}),", ",(0,s.jsx)(a.code,{children:"unknown"}),", ",(0,s.jsx)(a.code,{children:"unknown"}),">"]})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"conditionalFunc"})}),(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"false"})})]})]})]}),"\n",(0,s.jsx)(a.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L326",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:326"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanagerload",children:"saveDataManagerLoad"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManagerLoad"}),"(): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.p,{children:"The save data manager will automatically load variables from disk at the appropriate times\n(i.e. when a new run is started). Use this function to explicitly force the save data manager\nto load all of its variables from disk immediately."}),"\n",(0,s.jsx)(a.p,{children:"Obviously, doing this will overwrite the current data, so using this function can potentially\nresult in lost state."}),"\n",(0,s.jsxs)(a.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(a.code,{children:"ISCFeature.SAVE_DATA_MANAGER"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L422",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:422"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanagersave",children:"saveDataManagerSave"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManagerSave"}),"(): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.p,{children:"The save data manager will automatically save variables to disk at the appropriate times (i.e.\nwhen the run is exited). Use this function to explicitly force the save data manager to write\nall of its variables to disk immediately."}),"\n",(0,s.jsxs)(a.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(a.code,{children:"ISCFeature.SAVE_DATA_MANAGER"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L436",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:436"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanagersetglobal",children:"saveDataManagerSetGlobal"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManagerSetGlobal"}),"(): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.p,{children:'Sets the global variable of "g" equal to all of the save data variables for this mod.'}),"\n",(0,s.jsxs)(a.p,{children:["This can make debugging easier, as you can access the variables from the game's debug console.\ne.g. ",(0,s.jsx)(a.code,{children:"l print(g.feature1.run.foo)"})]}),"\n",(0,s.jsxs)(a.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(a.code,{children:"ISCFeature.SAVE_DATA_MANAGER"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L451",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:451"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanagerregisterclass",children:"saveDataManagerRegisterClass"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManagerRegisterClass"}),"(",(0,s.jsx)(a.code,{children:"...tstlClasses"}),"): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.p,{children:"By default, the save data manager will not be able to serialize/deserialize classes that are\nnested inside of maps, sets, and arrays, because it does not have access to the corresponding\nclass constructor. If you want to use nested classes in this way, then use this function to\nregister the class constructor with the save data manager. Once registered, the save data\nmanager will automatically run the constructor when deserializing (in addition to copying over\nthe data fields)."}),"\n",(0,s.jsx)(a.p,{children:"This function is variadic, which means you can pass as many classes as you want to register."}),"\n",(0,s.jsxs)(a.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(a.code,{children:"ISCFeature.SAVE_DATA_MANAGER"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(a.tbody,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"...tstlClasses"})}),(0,s.jsxs)(a.td,{style:{textAlign:"left"},children:["readonly ",(0,s.jsx)(a.a,{href:"/isaacscript-common/other/types/AnyClass#anyclass",children:(0,s.jsx)(a.code,{children:"AnyClass"})}),"[]"]})]})})]}),"\n",(0,s.jsx)(a.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L470",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:470"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanagerremove",children:"saveDataManagerRemove"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManagerRemove"}),"(",(0,s.jsx)(a.code,{children:"key"}),"): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.p,{children:'Removes a previously registered key from the save data manager. This is the opposite of the\n"saveDataManager" method.'}),"\n",(0,s.jsxs)(a.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(a.code,{children:"ISCFeature.SAVE_DATA_MANAGER"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsx)(a.tbody,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"key"})}),(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"string"})})]})})]}),"\n",(0,s.jsx)(a.h4,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L494",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:494"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanagerreset",children:"saveDataManagerReset"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManagerReset"}),"(",(0,s.jsx)(a.code,{children:"key"}),", ",(0,s.jsx)(a.code,{children:"childObjectKey"}),"): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.p,{children:"The save data manager will automatically reset variables at the appropriate times, like when a\nplayer enters a new room. Use this function to explicitly force the save data manager to reset\na specific variable group."}),"\n",(0,s.jsx)(a.p,{children:"For example:"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-ts",children:'const v = {\n  room: {\n    foo: 123,\n  },\n};\n\nmod.saveDataManager("file1", v);\n\n// Then, later on, to explicit reset all of the "room" variables:\nmod.saveDataManagerReset("file1", "room");\n'})}),"\n",(0,s.jsxs)(a.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(a.code,{children:"ISCFeature.SAVE_DATA_MANAGER"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(a.table,{children:[(0,s.jsx)(a.thead,{children:(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Name"}),(0,s.jsx)(a.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,s.jsxs)(a.tbody,{children:[(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"key"})}),(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"string"})})]}),(0,s.jsxs)(a.tr,{children:[(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.code,{children:"childObjectKey"})}),(0,s.jsx)(a.td,{style:{textAlign:"left"},children:(0,s.jsx)(a.a,{href:"/isaacscript-common/other/enums/SaveDataKey",children:(0,s.jsx)(a.code,{children:"SaveDataKey"})})})]})]})]}),"\n",(0,s.jsx)(a.h4,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L539",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:539"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanagerinmenu",children:"saveDataManagerInMenu"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManagerInMenu"}),"(): ",(0,s.jsx)(a.code,{children:"boolean"})]}),"\n",(0,s.jsxs)(a.p,{children:["Helper function to check to see if the game is in the menu, as far as the save data manager is\nconcerned. This function will return true when the game is first opened until the\n",(0,s.jsx)(a.code,{children:"POST_PLAYER_INIT"})," callback fires. It will also return true in between the ",(0,s.jsx)(a.code,{children:"PRE_GAME_EXIT"}),"\ncallback firing and the ",(0,s.jsx)(a.code,{children:"POST_PLAYER_INIT"})," callback firing."]}),"\n",(0,s.jsxs)(a.p,{children:["This function is useful because the ",(0,s.jsx)(a.code,{children:"POST_ENTITY_REMOVE"})," callback fires after the\n",(0,s.jsx)(a.code,{children:"PRE_GAME_EXIT"})," callback. Thus, if save data needs to be updated from the ",(0,s.jsx)(a.code,{children:"POST_ENTITY_REMOVE"}),"\ncallback and the player is in the process of saving and quitting, the feature will have to\nexplicitly call the ",(0,s.jsx)(a.code,{children:"saveDataManagerSave"})," function."]}),"\n",(0,s.jsxs)(a.p,{children:["In order to use this function, you must upgrade your mod with ",(0,s.jsx)(a.code,{children:"ISCFeature.SAVE_DATA_MANAGER"}),"."]}),"\n",(0,s.jsx)(a.h4,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"boolean"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L576",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:576"})}),"\n",(0,s.jsx)(a.hr,{}),"\n",(0,s.jsx)(a.h3,{id:"savedatamanagerlogsubscribers",children:"saveDataManagerLogSubscribers"}),"\n",(0,s.jsxs)(a.p,{children:["\u25b8 ",(0,s.jsx)(a.strong,{children:"saveDataManagerLogSubscribers"}),"(): ",(0,s.jsx)(a.code,{children:"void"})]}),"\n",(0,s.jsx)(a.p,{children:"Helper function to see all of the mod features that are using the save data manager. Useful for\ndebugging if a certain mod feature is not getting its data saved correctly."}),"\n",(0,s.jsx)(a.h4,{id:"returns-9",children:"Returns"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.code,{children:"void"})}),"\n",(0,s.jsx)(a.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,s.jsx)(a.p,{children:(0,s.jsx)(a.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts#L587",children:"packages/isaacscript-common/src/classes/features/other/SaveDataManager.ts:587"})})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},71184:(e,a,n)=>{n.d(a,{R:()=>i,x:()=>l});var s=n(14041);const t={},r=s.createContext(t);function i(e){const a=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);