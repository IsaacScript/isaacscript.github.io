"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[12411],{57631:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var s=n(31085),t=n(71184);const r={custom_edit_url:null},d="ItemConfigCardType",c={id:"isaac-typescript-definitions/enums/ItemConfigCardType",title:"ItemConfigCardType",description:'Corresponds to the "type" attribute in the "pocketitems.xml" file.',source:"@site/docs/isaac-typescript-definitions/enums/ItemConfigCardType.md",sourceDirName:"isaac-typescript-definitions/enums",slug:"/isaac-typescript-definitions/enums/ItemConfigCardType",permalink:"/isaac-typescript-definitions/enums/ItemConfigCardType",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacTypeScriptDefinitions",previous:{title:"IsaacsRoomSubType",permalink:"/isaac-typescript-definitions/enums/IsaacsRoomSubType"},next:{title:"ItemConfigChargeType",permalink:"/isaac-typescript-definitions/enums/ItemConfigChargeType"}},a={},l=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"NULL",id:"null",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"TAROT",id:"tarot",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"SUIT",id:"suit",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"RUNE",id:"rune",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"SPECIAL",id:"special",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"SPECIAL_OBJECT",id:"special_object",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"TAROT_REVERSE",id:"tarot_reverse",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"MODDED",id:"modded",level:3},{value:"Defined in",id:"defined-in-7",level:4}];function h(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"itemconfigcardtype",children:"ItemConfigCardType"}),"\n",(0,s.jsx)(i.p,{children:'Corresponds to the "type" attribute in the "pocketitems.xml" file.'}),"\n",(0,s.jsxs)(i.p,{children:["Matches the ",(0,s.jsx)(i.code,{children:"ItemConfig.CARDTYPE_"})," members of the ",(0,s.jsx)(i.code,{children:"ItemConfig"})," class. In IsaacScript, we\nreimplement this as an enum instead, since it is cleaner."]}),"\n",(0,s.jsxs)(i.p,{children:["Note that this enum is not to be confused with the ",(0,s.jsx)(i.code,{children:"CardType"})," enum; the latter denotes the\nin-game sub-type of the card, which is completely different."]}),"\n",(0,s.jsx)(i.h2,{id:"enumeration-members",children:"Enumeration Members"}),"\n",(0,s.jsx)(i.h3,{id:"null",children:"NULL"}),"\n",(0,s.jsxs)(i.p,{children:["\u2022 ",(0,s.jsx)(i.strong,{children:"NULL"})," = ",(0,s.jsx)(i.code,{children:"-1"})]}),"\n",(0,s.jsx)(i.p,{children:"No valid card will have this type."}),"\n",(0,s.jsx)(i.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ItemConfigCardType.ts#L12",children:"ItemConfigCardType.ts:12"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"tarot",children:"TAROT"}),"\n",(0,s.jsxs)(i.p,{children:["\u2022 ",(0,s.jsx)(i.strong,{children:"TAROT"})," = ",(0,s.jsx)(i.code,{children:"0"})]}),"\n",(0,s.jsx)(i.p,{children:'A normal card with a brown back, like "0 - The Fool".'}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ItemConfigCardType.ts#L15",children:"ItemConfigCardType.ts:15"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"suit",children:"SUIT"}),"\n",(0,s.jsxs)(i.p,{children:["\u2022 ",(0,s.jsx)(i.strong,{children:"SUIT"})," = ",(0,s.jsx)(i.code,{children:"1"})]}),"\n",(0,s.jsx)(i.p,{children:"A playing card with a red back, like 2 of Clubs. This includes the Queen of Hearts and the\nJoker. This does not include Suicide King or the Rules Card."}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ItemConfigCardType.ts#L21",children:"ItemConfigCardType.ts:21"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"rune",children:"RUNE"}),"\n",(0,s.jsxs)(i.p,{children:["\u2022 ",(0,s.jsx)(i.strong,{children:"RUNE"})," = ",(0,s.jsx)(i.code,{children:"2"})]}),"\n",(0,s.jsx)(i.p,{children:'A left-facing rune like Hagalaz, a right-facing rune like Ansuz, a Black Rune, a Blank Rune, a\na Rune Shard, or a "soul" rune like Soul of Isaac.'}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ItemConfigCardType.ts#L27",children:"ItemConfigCardType.ts:27"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"special",children:"SPECIAL"}),"\n",(0,s.jsxs)(i.p,{children:["\u2022 ",(0,s.jsx)(i.strong,{children:"SPECIAL"})," = ",(0,s.jsx)(i.code,{children:"3"})]}),"\n",(0,s.jsx)(i.p,{children:"A card that does not fall into any of the other categories, like a Chaos Card (42). This\ncategory excludes non-cards such as Dice Shard."}),"\n",(0,s.jsx)(i.p,{children:"Most of the cards in this category have unique card-backs."}),"\n",(0,s.jsx)(i.p,{children:"4 cards share the Magic the Gathering back:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Chaos Card (42)"}),"\n",(0,s.jsx)(i.li,{children:"Huge Growth (52)"}),"\n",(0,s.jsx)(i.li,{children:"Ancient Recall (53)"}),"\n",(0,s.jsx)(i.li,{children:"Era Walk (54)"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"3 cards have a red playing card back:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Rules Card (44)"}),"\n",(0,s.jsx)(i.li,{children:"Suicide King (46)"}),"\n",(0,s.jsx)(i.li,{children:"? Card (48)"}),"\n"]}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ItemConfigCardType.ts#L46",children:"ItemConfigCardType.ts:46"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"special_object",children:"SPECIAL_OBJECT"}),"\n",(0,s.jsxs)(i.p,{children:["\u2022 ",(0,s.jsx)(i.strong,{children:"SPECIAL_OBJECT"})," = ",(0,s.jsx)(i.code,{children:"4"})]}),"\n",(0,s.jsx)(i.p,{children:"A Dice Shard, an Emergency Contact, or a Cracked Key."}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ItemConfigCardType.ts#L49",children:"ItemConfigCardType.ts:49"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"tarot_reverse",children:"TAROT_REVERSE"}),"\n",(0,s.jsxs)(i.p,{children:["\u2022 ",(0,s.jsx)(i.strong,{children:"TAROT_REVERSE"})," = ",(0,s.jsx)(i.code,{children:"5"})]}),"\n",(0,s.jsx)(i.p,{children:'A reverse tarot card with a reddish-brown back, like "0 - The Fool?".'}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ItemConfigCardType.ts#L52",children:"ItemConfigCardType.ts:52"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"modded",children:"MODDED"}),"\n",(0,s.jsxs)(i.p,{children:["\u2022 ",(0,s.jsx)(i.strong,{children:"MODDED"})," = ",(0,s.jsx)(i.code,{children:"6"})]}),"\n",(0,s.jsxs)(i.p,{children:["This is not a real ",(0,s.jsx)(i.code,{children:"CardType"}),". Due to limitations in the API, getting the real type of modded\ncards is not possible, so this value is returned instead."]}),"\n",(0,s.jsx)(i.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaac-typescript-definitions/src/enums/ItemConfigCardType.ts#L58",children:"ItemConfigCardType.ts:58"})})]})}function o(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},71184:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>c});var s=n(14041);const t={},r=s.createContext(t);function d(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);