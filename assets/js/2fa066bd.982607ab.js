"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[67686],{72871:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var s=t(31085),r=t(71184);const i={custom_edit_url:null},c="PlayerIndex",a={id:"isaacscript-common/other/types/PlayerIndex",title:"PlayerIndex",description:"Type Aliases",source:"@site/docs/isaacscript-common/other/types/PlayerIndex.md",sourceDirName:"isaacscript-common/other/types",slug:"/isaacscript-common/other/types/PlayerIndex",permalink:"/isaacscript-common/other/types/PlayerIndex",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"PickupIndex",permalink:"/isaacscript-common/other/types/PickupIndex"},next:{title:"PossibleStatType",permalink:"/isaacscript-common/other/types/PossibleStatType"}},o={},d=[{value:"Type Aliases",id:"type-aliases",level:2},{value:"PlayerIndex",id:"playerindex-1",level:3},{value:"Defined in",id:"defined-in",level:4}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"playerindex",children:"PlayerIndex"}),"\n",(0,s.jsx)(n.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,s.jsx)(n.h3,{id:"playerindex-1",children:"PlayerIndex"}),"\n",(0,s.jsxs)(n.p,{children:["\u01ac ",(0,s.jsx)(n.strong,{children:"PlayerIndex"}),": ",(0,s.jsx)(n.code,{children:"int"})," & { ",(0,s.jsx)(n.code,{children:"__playerIndexBrand"}),": ",(0,s.jsx)(n.code,{children:"symbol"}),"  }"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"PlayerIndex"})," is a specific type of number that represents a unique identifier for a player. Mods\ncan signify that data structures handle ",(0,s.jsx)(n.code,{children:"EntityPlayer"})," by using this type."]}),"\n",(0,s.jsxs)(n.p,{children:["For more information, see the documentation for the ",(0,s.jsx)(n.code,{children:"getPlayerIndex"})," function."]}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const playersNameMap = new Map<PlayerIndex, string>();\n"})}),"\n",(0,s.jsx)(n.p,{children:"This type is branded for extra type safety."}),"\n",(0,s.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/types/PlayerIndex.ts#L15",children:"packages/isaacscript-common/src/types/PlayerIndex.ts:15"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(14041);const r={},i=s.createContext(r);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);