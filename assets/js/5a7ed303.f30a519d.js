"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[11621],{26741:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>o});var t=s(31085),i=s(71184);const d={custom_edit_url:null},c="Modded Element Detection",l={id:"isaacscript-common/features/ModdedElementDetection",title:"Modded Element Detection",description:"Mods can add extra things to the game (e.g. collectibles, trinkets, and so on). Since mods load",source:"@site/docs/isaacscript-common/features/ModdedElementDetection.md",sourceDirName:"isaacscript-common/features",slug:"/isaacscript-common/features/ModdedElementDetection",permalink:"/isaacscript-common/features/ModdedElementDetection",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"Item Pool Detection",permalink:"/isaacscript-common/features/ItemPoolDetection"},next:{title:"Modded Element Sets",permalink:"/isaacscript-common/features/ModdedElementSets"}},r={},o=[{value:"Hierarchy",id:"hierarchy",level:2},{value:"Methods",id:"methods",level:2},{value:"getFirstModdedCollectibleType",id:"getfirstmoddedcollectibletype",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getLastCollectibleType",id:"getlastcollectibletype",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"getNumCollectibleTypes",id:"getnumcollectibletypes",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"getNumModdedCollectibleTypes",id:"getnummoddedcollectibletypes",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"getFirstModdedTrinketType",id:"getfirstmoddedtrinkettype",level:3},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"getLastTrinketType",id:"getlasttrinkettype",level:3},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"getNumTrinketTypes",id:"getnumtrinkettypes",level:3},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"getNumModdedTrinketTypes",id:"getnummoddedtrinkettypes",level:3},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"getFirstModdedCardType",id:"getfirstmoddedcardtype",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"getLastCardType",id:"getlastcardtype",level:3},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"getNumCardTypes",id:"getnumcardtypes",level:3},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"getNumModdedCardTypes",id:"getnummoddedcardtypes",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"getFirstModdedPillEffect",id:"getfirstmoddedpilleffect",level:3},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"getLastPillEffect",id:"getlastpilleffect",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"getNumPillEffects",id:"getnumpilleffects",level:3},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"getNumModdedPillEffects",id:"getnummoddedpilleffects",level:3},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-15",level:4}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"modded-element-detection",children:"Modded Element Detection"}),"\n",(0,t.jsx)(n.p,{children:"Mods can add extra things to the game (e.g. collectibles, trinkets, and so on). Since mods load\nin alphabetical order, the total number of things can't be properly be known until at least one\ncallback fires (which indicates that all mods have been loaded)."}),"\n",(0,t.jsx)(n.p,{children:"This feature gates all such functions behind a callback check. Subsequently, these functions will\nthrow a runtime error if they are called in the menu, before any callbacks have occurred. This\nensures that the proper values are always returned and allows you to get immediate feedback if\nyou accidentally access them from the menu."}),"\n",(0,t.jsx)(n.h2,{id:"hierarchy",children:"Hierarchy"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"Feature"})}),"\n",(0,t.jsxs)(n.p,{children:["\u21b3 ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"ModdedElementDetection"})})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"getfirstmoddedcollectibletype",children:"getFirstModdedCollectibleType"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getFirstModdedCollectibleType"}),"(): ",(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"CollectibleType"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns the first modded collectible type, or undefined if there are no modded collectibles."}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectibles will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"CollectibleType"})]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L88",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:88"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getlastcollectibletype",children:"getLastCollectibleType"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getLastCollectibleType"}),"(): ",(0,t.jsx)(n.code,{children:"CollectibleType"})]}),"\n",(0,t.jsx)(n.p,{children:"Will change depending on how many modded collectibles there are."}),"\n",(0,t.jsxs)(n.p,{children:["Equal to ",(0,t.jsx)(n.code,{children:"itemConfig.GetCollectibles().Size - 1"}),". (",(0,t.jsx)(n.code,{children:"Size"})," includes invalid collectibles, like\n666. We subtract one to account for ",(0,t.jsx)(n.code,{children:"CollectibleType.NULL"}),".)"]}),"\n",(0,t.jsxs)(n.p,{children:["If there are no mods present that add any custom collectibles, this function will return\n",(0,t.jsx)(n.code,{children:"CollectibleType.MOMS_RING"})," (732)."]}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectibles will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"CollectibleType"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L119",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:119"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getnumcollectibletypes",children:"getNumCollectibleTypes"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getNumCollectibleTypes"}),"(): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsxs)(n.p,{children:["Returns the total number of collectibles in the item config, including both vanilla and modded\ncollectibles. If you just need the number of vanilla collectible types, use the\n",(0,t.jsx)(n.code,{children:"NUM_VANILLA_COLLECTIBLE_TYPES"})," constant."]}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectibles will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L139",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:139"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getnummoddedcollectibletypes",children:"getNumModdedCollectibleTypes"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getNumModdedCollectibleTypes"}),"(): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsx)(n.p,{children:"Unlike vanilla collectible types, modded collectible types are always contiguous."}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all collectibles will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L157",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:157"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getfirstmoddedtrinkettype",children:"getFirstModdedTrinketType"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getFirstModdedTrinketType"}),"(): ",(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"TrinketType"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns the first modded trinket type, or undefined if there are no modded trinkets."}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinkets will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"TrinketType"})]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L178",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:178"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getlasttrinkettype",children:"getLastTrinketType"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getLastTrinketType"}),"(): ",(0,t.jsx)(n.code,{children:"TrinketType"})]}),"\n",(0,t.jsx)(n.p,{children:"Will change depending on how many modded trinkets there are."}),"\n",(0,t.jsxs)(n.p,{children:["Equal to ",(0,t.jsx)(n.code,{children:"itemConfig.GetTrinkets().Size - 1"}),". (",(0,t.jsx)(n.code,{children:"Size"})," includes invalid trinkets, like 47. We\nsubtract one to account for ",(0,t.jsx)(n.code,{children:"TrinketType.NULL"}),".)"]}),"\n",(0,t.jsxs)(n.p,{children:["If there are no mods present that add any custom trinkets, this function will return\n",(0,t.jsx)(n.code,{children:"TrinketType.SIGIL_OF_BAPHOMET"})," (189)."]}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinkets will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"TrinketType"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L203",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:203"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getnumtrinkettypes",children:"getNumTrinketTypes"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getNumTrinketTypes"}),"(): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsxs)(n.p,{children:["Returns the total number of trinkets in the item config, including both vanilla and modded\ntrinkets. If you just need the number of vanilla trinket types, use the\n",(0,t.jsx)(n.code,{children:"NUM_VANILLA_TRINKET_TYPES"})," constant."]}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinkets will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L222",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:222"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getnummoddedtrinkettypes",children:"getNumModdedTrinketTypes"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getNumModdedTrinketTypes"}),"(): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsx)(n.p,{children:"Unlike vanilla trinket types, modded trinket types are always contiguous."}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinkets will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L239",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:239"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getfirstmoddedcardtype",children:"getFirstModdedCardType"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getFirstModdedCardType"}),"(): ",(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"CardType"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns the first modded card sub-type, or undefined if there are no modded cards."}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all cards will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"CardType"})]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L260",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:260"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getlastcardtype",children:"getLastCardType"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getLastCardType"}),"(): ",(0,t.jsx)(n.code,{children:"CardType"})]}),"\n",(0,t.jsx)(n.p,{children:"Will change depending on how many modded cards there are."}),"\n",(0,t.jsxs)(n.p,{children:["Equal to ",(0,t.jsx)(n.code,{children:"itemConfig.GetCards().Size - 1"}),". (",(0,t.jsx)(n.code,{children:"Size"})," includes invalid cards, but since cards are\ncontiguous, there are no invalid cards. We subtract one to account for ",(0,t.jsx)(n.code,{children:"CardType.NULL"}),".)"]}),"\n",(0,t.jsxs)(n.p,{children:["If there are no mods present that add any custom cards, this function will return\n",(0,t.jsx)(n.code,{children:"CardType.SOUL_OF_JACOB_AND_ESAU"})," (97)."]}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all trinkets will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"CardType"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L285",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:285"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getnumcardtypes",children:"getNumCardTypes"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getNumCardTypes"}),"(): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsxs)(n.p,{children:["Returns the total number of cards in the item config, including both vanilla and modded cards.\nIf you just need the number of vanilla card types, use the ",(0,t.jsx)(n.code,{children:"NUM_VANILLA_CARD_TYPES"})," constant."]}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all cards will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L303",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:303"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getnummoddedcardtypes",children:"getNumModdedCardTypes"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getNumModdedCardTypes"}),"(): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsx)(n.p,{children:"Like vanilla card types, modded card types are always contiguous."}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all cards will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L320",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:320"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getfirstmoddedpilleffect",children:"getFirstModdedPillEffect"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getFirstModdedPillEffect"}),"(): ",(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"PillEffect"})]}),"\n",(0,t.jsx)(n.p,{children:"Returns the first modded pill effect, or undefined if there are no modded pill effects."}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all pill effects will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"undefined"})," | ",(0,t.jsx)(n.code,{children:"PillEffect"})]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L342",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:342"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getlastpilleffect",children:"getLastPillEffect"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getLastPillEffect"}),"(): ",(0,t.jsx)(n.code,{children:"PillEffect"})]}),"\n",(0,t.jsx)(n.p,{children:"Will change depending on how many modded pill effects there are."}),"\n",(0,t.jsxs)(n.p,{children:["Equal to ",(0,t.jsx)(n.code,{children:"itemConfig.GetPillEffects().Size - 1"}),". (",(0,t.jsx)(n.code,{children:"Size"})," includes invalid pill effects, but\nsince pill effects are contiguous, there are no invalid pill effects. We subtract one to\naccount for the enum starting at 0 instead of 1.)"]}),"\n",(0,t.jsxs)(n.p,{children:["If there are no mods present that add any custom pill effects, this function will return\n",(0,t.jsx)(n.code,{children:"PillEffect.EXPERIMENTAL"})," (49)."]}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all pill effects will necessarily be present when a mod first loads (due to mod load\norder)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"PillEffect"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L374",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:374"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getnumpilleffects",children:"getNumPillEffects"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getNumPillEffects"}),"(): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsxs)(n.p,{children:["Returns the total number of pill effects in the item config, including both vanilla and modded\npill effects. If you just need the number of vanilla pill effects, use the\n",(0,t.jsx)(n.code,{children:"NUM_VANILLA_PILL_EFFECTS"})," constant."]}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all cards will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L393",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:393"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h3,{id:"getnummoddedpilleffects",children:"getNumModdedPillEffects"}),"\n",(0,t.jsxs)(n.p,{children:["\u25b8 ",(0,t.jsx)(n.strong,{children:"getNumModdedPillEffects"}),"(): ",(0,t.jsx)(n.code,{children:"int"})]}),"\n",(0,t.jsx)(n.p,{children:"Like vanilla pill effects, modded pill effects are always contiguous."}),"\n",(0,t.jsx)(n.p,{children:"This function can only be called if at least one callback has been executed. This is because\nnot all cards will necessarily be present when a mod first loads (due to mod load order)."}),"\n",(0,t.jsxs)(n.p,{children:["In order to use this function, you must upgrade your mod with\n",(0,t.jsx)(n.code,{children:"ISCFeature.MODDED_ELEMENT_DETECTION"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"int"})}),"\n",(0,t.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts#L410",children:"packages/isaacscript-common/src/classes/features/other/ModdedElementDetection.ts:410"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var t=s(14041);const i={},d=t.createContext(i);function c(e){const n=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(d.Provider,{value:n},e.children)}}}]);