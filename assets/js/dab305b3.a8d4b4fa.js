"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[54727],{21945:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var r=t(31085),i=t(71184);const s={custom_edit_url:null},c="Rock Alt",o={id:"isaacscript-common/functions/rockAlt",title:"Rock Alt",description:"Functions",source:"@site/docs/isaacscript-common/functions/rockAlt.md",sourceDirName:"isaacscript-common/functions",slug:"/isaacscript-common/functions/rockAlt",permalink:"/isaacscript-common/functions/rockAlt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"RNG",permalink:"/isaacscript-common/functions/rng"},next:{title:"Room Data",permalink:"/isaacscript-common/functions/roomData"}},a={},d=[{value:"Functions",id:"functions",level:2},{value:"getRockAltType",id:"getrockalttype",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"removeUrnRewards",id:"removeurnrewards",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"rock-alt",children:"Rock Alt"}),"\n",(0,r.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,r.jsx)(n.h3,{id:"getrockalttype",children:"getRockAltType"}),"\n",(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"getRockAltType"}),"(): ",(0,r.jsx)(n.a,{href:"/isaacscript-common/other/enums/RockAltType",children:(0,r.jsx)(n.code,{children:"RockAltType"})})]}),"\n",(0,r.jsx)(n.p,{children:"Helper function to get the alternate rock type (i.e. urn, mushroom, etc.) that the current room\nwill have."}),"\n",(0,r.jsx)(n.p,{children:"The rock type is based on the backdrop of the room."}),"\n",(0,r.jsxs)(n.p,{children:["For example, if you change the backdrop of the starting room of the run to ",(0,r.jsx)(n.code,{children:"BackdropType.CAVES"}),",\nand then spawn ",(0,r.jsx)(n.code,{children:"GridEntityType.ROCK_ALT"}),", it will be a mushroom instead of an urn. Additionally,\nif it is destroyed, it will generate mushroom-appropriate rewards."]}),"\n",(0,r.jsxs)(n.p,{children:["On the other hand, if an urn is spawned first before the backdrop is changed to\n",(0,r.jsx)(n.code,{children:"BackdropType.CAVES"}),", the graphic of the urn will not switch to a mushroom. However, when\ndestroyed, the urn will still generate mushroom-appropriate rewards."]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/isaacscript-common/other/enums/RockAltType",children:(0,r.jsx)(n.code,{children:"RockAltType"})})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/rockAlt.ts#L27",children:"packages/isaacscript-common/src/functions/rockAlt.ts:27"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"removeurnrewards",children:"removeUrnRewards"}),"\n",(0,r.jsxs)(n.p,{children:["\u25b8 ",(0,r.jsx)(n.strong,{children:"removeUrnRewards"}),"(",(0,r.jsx)(n.code,{children:"gridEntity"}),"): ",(0,r.jsx)(n.code,{children:"void"})]}),"\n",(0,r.jsx)(n.p,{children:"Helper function to remove all coins, trinkets, and so on that spawned from breaking an urn."}),"\n",(0,r.jsxs)(n.p,{children:["The rewards are based on the ones from the wiki:\n",(0,r.jsx)(n.a,{href:"https://bindingofisaacrebirth.fandom.com/wiki/Rocks#Urns",children:"https://bindingofisaacrebirth.fandom.com/wiki/Rocks#Urns"})]}),"\n",(0,r.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"gridEntity"})}),(0,r.jsx)(n.td,{style:{textAlign:"left"},children:(0,r.jsx)(n.code,{children:"GridEntity"})})]})})]}),"\n",(0,r.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"void"})}),"\n",(0,r.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/rockAlt.ts#L40",children:"packages/isaacscript-common/src/functions/rockAlt.ts:40"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},71184:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var r=t(14041);const i={},s=r.createContext(i);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);