"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[92855],{53884:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>o,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var i=s(31085),t=s(71184);const r={custom_edit_url:null},l="Types",c={id:"isaacscript-common/functions/types",title:"Types",description:"Consider the following code that uses a number enum:",source:"@site/docs/isaacscript-common/functions/types.md",sourceDirName:"isaacscript-common/functions",slug:"/isaacscript-common/functions/types",permalink:"/isaacscript-common/functions/types",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{custom_edit_url:null},sidebar:"isaacScriptCommon",previous:{title:"TSTL Class",permalink:"/isaacscript-common/functions/tstlClass"},next:{title:"UI",permalink:"/isaacscript-common/functions/ui"}},d={},a=[{value:"Functions",id:"functions",level:2},{value:"asCardType",id:"ascardtype",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"asCollectibleType",id:"ascollectibletype",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"asFloat",id:"asfloat",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"asInt",id:"asint",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"asLevelStage",id:"aslevelstage",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4},{value:"asNPCState",id:"asnpcstate",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"asNumber",id:"asnumber",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-6",level:4},{value:"asPillColor",id:"aspillcolor",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-7",level:4},{value:"asPillEffect",id:"aspilleffect",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-8",level:4},{value:"asPlayerType",id:"asplayertype",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-9",level:4},{value:"asRoomType",id:"asroomtype",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-10",level:4},{value:"asString",id:"asstring",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"asTrinketType",id:"astrinkettype",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"isBoolean",id:"isboolean",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"isFunction",id:"isfunction",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"isInteger",id:"isinteger",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"isNumber",id:"isnumber",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"isPrimitive",id:"isprimitive",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"isString",id:"isstring",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"isTable",id:"istable",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"isUserdata",id:"isuserdata",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"parseIntSafe",id:"parseintsafe",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-21",level:4}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"types",children:"Types"}),"\n",(0,i.jsx)(n.p,{children:"Consider the following code that uses a number enum:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"enum MyEnum {\n  Value1,\n}\n\nfunction asMyEnum(num: number): MyEnum {}\n\ndeclare const something: unknown;\n\nconst foo = something as MyEnum; // no error\nconst bar: MyEnum = something; // error\nconst baz = asMyEnum(something); // error\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Here, using ",(0,i.jsx)(n.code,{children:"as"})," does not give an error because TypeScript allows you to assert a type to a\nsupertype or a subtype. Thus, using ",(0,i.jsx)(n.code,{children:"as"})," to perform a type assertion is not as safe as using a\nvariable declaration or a helper function. However, if we use a variable declaration, then the\n",(0,i.jsx)(n.code,{children:"isaacscript/strict-enums"})," rule is triggered, which requires suppressing the lint rule with a ",(0,i.jsx)(n.code,{children:"// eslint-disable-next-line"}),". Thus, the safest and more concise way to do a type assertion is to use\na helper function."]}),"\n",(0,i.jsx)(n.p,{children:"This file contains helper functions for various number enums that might require type assertions.\nIt also contains helper functions for run-time type checks."}),"\n",(0,i.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,i.jsx)(n.h3,{id:"ascardtype",children:"asCardType"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asCardType"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"CardType"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"CardType"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"CardType"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L49",children:"packages/isaacscript-common/src/functions/types.ts:49"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"ascollectibletype",children:"asCollectibleType"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asCollectibleType"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"CollectibleType"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"CollectibleType"}),". (This is better than using the\n",(0,i.jsx)(n.code,{children:"as"})," TypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"CollectibleType"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-1",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L59",children:"packages/isaacscript-common/src/functions/types.ts:59"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"asfloat",children:"asFloat"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asFloat"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"float"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an enum to an ",(0,i.jsx)(n.code,{children:"int"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"number"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"float"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-2",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L69",children:"packages/isaacscript-common/src/functions/types.ts:69"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"asint",children:"asInt"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asInt"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"int"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an enum to an ",(0,i.jsx)(n.code,{children:"int"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"number"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"int"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-3",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L79",children:"packages/isaacscript-common/src/functions/types.ts:79"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"aslevelstage",children:"asLevelStage"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asLevelStage"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"LevelStage"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"LevelStage"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"LevelStage"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-4",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L89",children:"packages/isaacscript-common/src/functions/types.ts:89"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"asnpcstate",children:"asNPCState"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asNPCState"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"NPCState"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"NPCState"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"NPCState"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-5",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L99",children:"packages/isaacscript-common/src/functions/types.ts:99"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"asnumber",children:"asNumber"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asNumber"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"number"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an enum to a ",(0,i.jsx)(n.code,{children:"number"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"number"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"number"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-6",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L109",children:"packages/isaacscript-common/src/functions/types.ts:109"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"aspillcolor",children:"asPillColor"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asPillColor"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"PillColor"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"PillColor"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"PillColor"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-7",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L119",children:"packages/isaacscript-common/src/functions/types.ts:119"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"aspilleffect",children:"asPillEffect"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asPillEffect"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"PillEffect"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"PillEffect"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"PillEffect"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-8",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L129",children:"packages/isaacscript-common/src/functions/types.ts:129"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"asplayertype",children:"asPlayerType"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asPlayerType"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"PlayerType"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"PlayerType"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"PlayerType"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-9",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L139",children:"packages/isaacscript-common/src/functions/types.ts:139"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"asroomtype",children:"asRoomType"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asRoomType"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"RoomType"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"RoomType"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"RoomType"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-10",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L149",children:"packages/isaacscript-common/src/functions/types.ts:149"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"asstring",children:"asString"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asString"}),"(",(0,i.jsx)(n.code,{children:"str"}),"): ",(0,i.jsx)(n.code,{children:"string"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an enum to a ",(0,i.jsx)(n.code,{children:"string"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"str"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-11",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"string"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-11",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L159",children:"packages/isaacscript-common/src/functions/types.ts:159"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"astrinkettype",children:"asTrinketType"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"asTrinketType"}),"(",(0,i.jsx)(n.code,{children:"num"}),"): ",(0,i.jsx)(n.code,{children:"TrinketType"})]}),"\n",(0,i.jsxs)(n.p,{children:["Helper function to safely cast an ",(0,i.jsx)(n.code,{children:"int"})," to a ",(0,i.jsx)(n.code,{children:"TrinketType"}),". (This is better than using the ",(0,i.jsx)(n.code,{children:"as"}),"\nTypeScript keyword to do a type assertion, since that can obfuscate compiler errors. )"]}),"\n",(0,i.jsx)(n.p,{children:'This is useful to satisfy the "isaacscript/strict-enums" ESLint rule.'}),"\n",(0,i.jsx)(n.h4,{id:"parameters-12",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"num"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"int"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-12",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"TrinketType"})}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-12",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L169",children:"packages/isaacscript-common/src/functions/types.ts:169"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isboolean",children:"isBoolean"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"isBoolean"}),"(",(0,i.jsx)(n.code,{children:"variable"}),"): variable is boolean"]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-13",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"variable"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"unknown"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-13",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:"variable is boolean"}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-13",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L173",children:"packages/isaacscript-common/src/functions/types.ts:173"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isfunction",children:"isFunction"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"isFunction"}),"(",(0,i.jsx)(n.code,{children:"variable"}),"): variable is Function"]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-14",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"variable"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"unknown"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-14",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:"variable is Function"}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-14",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L178",children:"packages/isaacscript-common/src/functions/types.ts:178"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isinteger",children:"isInteger"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"isInteger"}),"(",(0,i.jsx)(n.code,{children:"variable"}),"): variable is int"]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-15",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"variable"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"unknown"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-15",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:"variable is int"}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-15",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L182",children:"packages/isaacscript-common/src/functions/types.ts:182"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isnumber",children:"isNumber"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"isNumber"}),"(",(0,i.jsx)(n.code,{children:"variable"}),"): variable is number"]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-16",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"variable"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"unknown"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-16",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:"variable is number"}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-16",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L190",children:"packages/isaacscript-common/src/functions/types.ts:190"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isprimitive",children:"isPrimitive"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"isPrimitive"}),"(",(0,i.jsx)(n.code,{children:"variable"}),"): variable is string | number | boolean"]}),"\n",(0,i.jsx)(n.p,{children:"Helper function to detect if a variable is a boolean, number, or string."}),"\n",(0,i.jsx)(n.h4,{id:"parameters-17",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"variable"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"unknown"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-17",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:"variable is string | number | boolean"}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-17",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L195",children:"packages/isaacscript-common/src/functions/types.ts:195"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isstring",children:"isString"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"isString"}),"(",(0,i.jsx)(n.code,{children:"variable"}),"): variable is string"]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-18",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"variable"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"unknown"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-18",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:"variable is string"}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-18",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L206",children:"packages/isaacscript-common/src/functions/types.ts:206"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"istable",children:"isTable"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"isTable"}),"(",(0,i.jsx)(n.code,{children:"variable"}),"): variable is LuaMap<AnyNotNil, unknown>"]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-19",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"variable"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"unknown"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-19",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:"variable is LuaMap<AnyNotNil, unknown>"}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-19",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L210",children:"packages/isaacscript-common/src/functions/types.ts:210"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"isuserdata",children:"isUserdata"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"isUserdata"}),"(",(0,i.jsx)(n.code,{children:"variable"}),"): variable is LuaUserdata"]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-20",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"variable"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"unknown"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-20",children:"Returns"}),"\n",(0,i.jsx)(n.p,{children:"variable is LuaUserdata"}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-20",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L217",children:"packages/isaacscript-common/src/functions/types.ts:217"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"parseintsafe",children:"parseIntSafe"}),"\n",(0,i.jsxs)(n.p,{children:["\u25b8 ",(0,i.jsx)(n.strong,{children:"parseIntSafe"}),"(",(0,i.jsx)(n.code,{children:"string"}),"): ",(0,i.jsx)(n.code,{children:"int"})," | ",(0,i.jsx)(n.code,{children:"undefined"})]}),"\n",(0,i.jsx)(n.p,{children:"Helper function to convert a string to an integer. Returns undefined if the string is not an\ninteger."}),"\n",(0,i.jsxs)(n.p,{children:["Under the hood, this uses the built-in ",(0,i.jsx)(n.code,{children:"tonumber"})," and ",(0,i.jsx)(n.code,{children:"math.floor"})," functions."]}),"\n",(0,i.jsxs)(n.p,{children:["This is named ",(0,i.jsx)(n.code,{children:"parseIntSafe"})," in order to match the helper function in ",(0,i.jsx)(n.code,{children:"isaacscript-common-ts"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"parameters-21",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Type"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"string"})})]})})]}),"\n",(0,i.jsx)(n.h4,{id:"returns-21",children:"Returns"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"int"})," | ",(0,i.jsx)(n.code,{children:"undefined"})]}),"\n",(0,i.jsx)(n.h4,{id:"defined-in-21",children:"Defined in"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/IsaacScript/isaacscript/blob/54ef116/packages/isaacscript-common/src/functions/types.ts#L230",children:"packages/isaacscript-common/src/functions/types.ts:230"})})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},71184:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(14041);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);